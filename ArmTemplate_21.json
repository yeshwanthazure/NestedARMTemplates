{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "RNLADFNDPPROD"
        },
        "trg-enrichment-master_EMGO_Master_Melissa_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-enrichment-master_EMGO_Master_Melissa_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-enrichment-master_EMGO_Master_Melissa_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-enrichment-master_EMGO_Master_Melissa_properties_pipeline_parameters_az_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-enrichment-master_EMGO_Master_Melissa_properties_pipeline_parameters_az_database_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-enrichment-master_EMSearchVendorData_Master_PacificEast_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-enrichment-master_EMSearchVendorData_Master_PacificEast_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-enrichment-master_EMSearchVendorData_Master_PacificEast_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-enrichment-master_EMSearchVendorData_Master_PacificEast_properties_pipeline_parameters_az_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-enrichment-master_EMSearchVendorData_Master_PacificEast_properties_pipeline_parameters_az_database_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-enrichment-master_EMSuppression_Master_Melissa_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-enrichment-master_EMSuppression_Master_Melissa_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-enrichment-master_EMSuppression_Master_Melissa_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-enrichment-master_EMSuppression_Master_Melissa_properties_pipeline_parameters_az_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-enrichment-master_EMSuppression_Master_Melissa_properties_pipeline_parameters_az_database_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-enrichment-master_EMSuppression_Master_PacificEast_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-enrichment-master_EMSuppression_Master_PacificEast_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-enrichment-master_EMSuppression_Master_PacificEast_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-enrichment-master_EMSuppression_Master_PacificEast_properties_pipeline_parameters_az_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-enrichment-master_EMSuppression_Master_PacificEast_properties_pipeline_parameters_az_database_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-enrichment-Melissa-master-EMScoring_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-enrichment-Melissa-master-EMScoring_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-enrichment-Melissa-master-EMScoring_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net"
        },
        "trg-enrichment-Melissa-master-EMScoring_properties_pipeline_parameters_az_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-enrichment-Melissa-master-EMScoring_properties_pipeline_parameters_az_database_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-enrichment-master_EMScoring_Master_Melissa_Parallel_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-enrichment-master_EMScoring_Master_Melissa_Parallel_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-enrichment-master_EMScoring_Master_Melissa_Parallel_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-enrichment-master_EMScoring_Master_Melissa_Parallel_properties_pipeline_parameters_az_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-enrichment-master_EMScoring_Master_Melissa_Parallel_properties_pipeline_parameters_az_database_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "Fplus_Prod_Scoring_blob_trigger_properties_DS_TriggerScoring_FPLUS_ML_Pipelines_parameters_fname": {
            "type": "string",
            "defaultValue": "@triggerBody().fileName"
        },
        "Fplus_Prod_Scoring_blob_trigger_properties_typeProperties_scope": {
            "type": "string",
            "defaultValue": "/subscriptions/7d860180-93f7-49bd-9ddc-4315ebd5a044/resourceGroups/RNLNDPPROD/providers/Microsoft.Storage/storageAccounts/rnlndpproddls"
        },
        "AFAS_Scoring_trigger_ML_pipelines_properties_DS_TriggerScoring_AFAS_ML_Pipelines_parameters_fname": {
            "type": "string",
            "defaultValue": "@triggerBody().fileName"
        },
        "AFAS_Scoring_trigger_ML_pipelines_properties_typeProperties_scope": {
            "type": "string",
            "defaultValue": "/subscriptions/7d860180-93f7-49bd-9ddc-4315ebd5a044/resourceGroups/RNLNDPPROD/providers/Microsoft.Storage/storageAccounts/rnlndpproddls"
        },
        "trg-enrichment-master_EMScoring_Master_PacificEast_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-enrichment-master_EMScoring_Master_PacificEast_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-enrichment-master_EMScoring_Master_PacificEast_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-enrichment-master_EMScoring_Master_PacificEast_properties_pipeline_parameters_az_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-enrichment-master_EMScoring_Master_PacificEast_properties_pipeline_parameters_az_database_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2_properties_pipeline_parameters_az_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2_properties_pipeline_parameters_az_database_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/trg-enrichment-master_EMGO_Master_Melissa')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-em-data-enrichment-master_EMGO_Melissa",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "databricks_workspace_url": "[parameters('trg-enrichment-master_EMGO_Master_Melissa_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-enrichment-master_EMGO_Master_Melissa_properties_pipeline_parameters_databricks_clusterid')]",
                        "vault_url": "[parameters('trg-enrichment-master_EMGO_Master_Melissa_properties_pipeline_parameters_vault_url')]",
                        "az_server_name": "[parameters('trg-enrichment-master_EMGO_Master_Melissa_properties_pipeline_parameters_az_server_name')]",
                        "az_database_name": "[parameters('trg-enrichment-master_EMGO_Master_Melissa_properties_pipeline_parameters_az_database_name')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 30,
                    "startTime": "2022-08-19T21:55:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-enrichment-master_EMSearchVendorData_Master_PacificEast')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-em-data-enrichment-master_EMSearchVendorData_PacificEast",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "databricks_workspace_url": "[parameters('trg-enrichment-master_EMSearchVendorData_Master_PacificEast_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-enrichment-master_EMSearchVendorData_Master_PacificEast_properties_pipeline_parameters_databricks_clusterid')]",
                        "vault_url": "[parameters('trg-enrichment-master_EMSearchVendorData_Master_PacificEast_properties_pipeline_parameters_vault_url')]",
                        "az_server_name": "[parameters('trg-enrichment-master_EMSearchVendorData_Master_PacificEast_properties_pipeline_parameters_az_server_name')]",
                        "az_database_name": "[parameters('trg-enrichment-master_EMSearchVendorData_Master_PacificEast_properties_pipeline_parameters_az_database_name')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 30,
                    "startTime": "2022-08-19T21:58:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-enrichment-master_EMSuppression_Master_Melissa')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-em-data-enrichment-master_EMSuppression_Melissa",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "databricks_workspace_url": "[parameters('trg-enrichment-master_EMSuppression_Master_Melissa_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-enrichment-master_EMSuppression_Master_Melissa_properties_pipeline_parameters_databricks_clusterid')]",
                        "vault_url": "[parameters('trg-enrichment-master_EMSuppression_Master_Melissa_properties_pipeline_parameters_vault_url')]",
                        "az_server_name": "[parameters('trg-enrichment-master_EMSuppression_Master_Melissa_properties_pipeline_parameters_az_server_name')]",
                        "az_database_name": "[parameters('trg-enrichment-master_EMSuppression_Master_Melissa_properties_pipeline_parameters_az_database_name')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 30,
                    "startTime": "2022-08-19T21:56:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-enrichment-master_EMSuppression_Master_PacificEast')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-em-data-enrichment-master_EMSuppression_PacificEast",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "databricks_workspace_url": "[parameters('trg-enrichment-master_EMSuppression_Master_PacificEast_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-enrichment-master_EMSuppression_Master_PacificEast_properties_pipeline_parameters_databricks_clusterid')]",
                        "vault_url": "[parameters('trg-enrichment-master_EMSuppression_Master_PacificEast_properties_pipeline_parameters_vault_url')]",
                        "az_server_name": "[parameters('trg-enrichment-master_EMSuppression_Master_PacificEast_properties_pipeline_parameters_az_server_name')]",
                        "az_database_name": "[parameters('trg-enrichment-master_EMSuppression_Master_PacificEast_properties_pipeline_parameters_az_database_name')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 30,
                    "startTime": "2022-08-19T21:59:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-enrichment-Melissa-master-EMScoring')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-em-data-enrichment-master_EMScoring_Melissa",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "databricks_workspace_url": "[parameters('trg-enrichment-Melissa-master-EMScoring_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-enrichment-Melissa-master-EMScoring_properties_pipeline_parameters_databricks_clusterid')]",
                        "vault_url": "[parameters('trg-enrichment-Melissa-master-EMScoring_properties_pipeline_parameters_vault_url')]",
                        "az_server_name": "[parameters('trg-enrichment-Melissa-master-EMScoring_properties_pipeline_parameters_az_server_name')]",
                        "az_database_name": "[parameters('trg-enrichment-Melissa-master-EMScoring_properties_pipeline_parameters_az_database_name')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 30,
                    "startTime": "2022-09-08T10:45:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-enrichment-master_EMScoring_Master_Melissa_Parallel')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-em-data-enrichment-master_EMScoring_Melissa_Parallel_1",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "databricks_workspace_url": "[parameters('trg-enrichment-master_EMScoring_Master_Melissa_Parallel_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-enrichment-master_EMScoring_Master_Melissa_Parallel_properties_pipeline_parameters_databricks_clusterid')]",
                        "vault_url": "[parameters('trg-enrichment-master_EMScoring_Master_Melissa_Parallel_properties_pipeline_parameters_vault_url')]",
                        "az_server_name": "[parameters('trg-enrichment-master_EMScoring_Master_Melissa_Parallel_properties_pipeline_parameters_az_server_name')]",
                        "az_database_name": "[parameters('trg-enrichment-master_EMScoring_Master_Melissa_Parallel_properties_pipeline_parameters_az_database_name')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 45,
                    "startTime": "2022-09-11T16:23:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Fplus_Prod_Scoring_blob_trigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "DS_TriggerScoring_FPLUS_ML_Pipelines",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "fname": "[parameters('Fplus_Prod_Scoring_blob_trigger_properties_DS_TriggerScoring_FPLUS_ML_Pipelines_parameters_fname')]"
                        }
                    }
                ],
                "type": "BlobEventsTrigger",
                "typeProperties": {
                    "blobPathBeginsWith": "/prodcrmsynapse/blobs/SoftScoreAZML/z_scoring/incoming/",
                    "blobPathEndsWith": ".txt",
                    "ignoreEmptyBlobs": true,
                    "scope": "[parameters('Fplus_Prod_Scoring_blob_trigger_properties_typeProperties_scope')]",
                    "events": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AFAS_Scoring_trigger_ML_pipelines')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "DS_TriggerScoring_AFAS_ML_Pipelines",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "fname": "[parameters('AFAS_Scoring_trigger_ML_pipelines_properties_DS_TriggerScoring_AFAS_ML_Pipelines_parameters_fname')]"
                        }
                    }
                ],
                "type": "BlobEventsTrigger",
                "typeProperties": {
                    "blobPathBeginsWith": "/prodcrmsynapse/blobs/AFAS_Az_Pipeline_Scoring/Exports/",
                    "blobPathEndsWith": ".csv",
                    "ignoreEmptyBlobs": true,
                    "scope": "[parameters('AFAS_Scoring_trigger_ML_pipelines_properties_typeProperties_scope')]",
                    "events": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-enrichment-master_EMScoring_Master_PacificEast')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-em-data-enrichment-master_EMScoring_PacificEast",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "databricks_workspace_url": "[parameters('trg-enrichment-master_EMScoring_Master_PacificEast_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-enrichment-master_EMScoring_Master_PacificEast_properties_pipeline_parameters_databricks_clusterid')]",
                        "vault_url": "[parameters('trg-enrichment-master_EMScoring_Master_PacificEast_properties_pipeline_parameters_vault_url')]",
                        "az_server_name": "[parameters('trg-enrichment-master_EMScoring_Master_PacificEast_properties_pipeline_parameters_az_server_name')]",
                        "az_database_name": "[parameters('trg-enrichment-master_EMScoring_Master_PacificEast_properties_pipeline_parameters_az_database_name')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 30,
                    "startTime": "2022-11-04T10:00:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 50,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-em-data-enrichment-master_EMScoring_Melissa_Parallel_2",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "databricks_workspace_url": "[parameters('trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2_properties_pipeline_parameters_databricks_clusterid')]",
                        "vault_url": "[parameters('trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2_properties_pipeline_parameters_vault_url')]",
                        "az_server_name": "[parameters('trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2_properties_pipeline_parameters_az_server_name')]",
                        "az_database_name": "[parameters('trg-enrichment-master_EMScoring_Master_Melissa_Parallel_2_properties_pipeline_parameters_az_database_name')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 45,
                    "startTime": "2022-11-16T13:08:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-upsert-contact')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_parquet_file_list",
                        "description": "Read parquet files from the ADLS",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "generate_contactbase_parquet_files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "crmalignment",
                                    "FilePath": {
                                        "value": "@concat('processing/',pipeline().parameters.response_id,'/contactbase.parquet')",
                                        "type": "Expression"
                                    },
                                    "FileName": "*.parquet",
                                    "storage_account_name": {
                                        "value": "@pipeline().parameters.storage_account_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "insert_into_crm_contact",
                        "description": "Loop through each file in the folder",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_parquet_file_list",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_parquet_file_list').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "upsert_contactbase",
                                    "description": "Upsert data from parquet files to contactbase table in crm",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_stg_table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 3,
                                        "retryIntervalInSeconds": 60,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "parentcustomerid@EntityReference",
                                                    "value": "account"
                                                }
                                            ],
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "DynamicsSink",
                                            "writeBatchSize": 9,
                                            "writeBehavior": "upsert",
                                            "ignoreNullValues": true
                                        },
                                        "enableStaging": false,
                                        "enableSkipIncompatibleRow": true,
                                        "logSettings": {
                                            "enableCopyActivityLog": true,
                                            "copyActivityLogSettings": {
                                                "logLevel": "Warning",
                                                "enableReliableLogging": false
                                            },
                                            "logLocationSettings": {
                                                "linkedServiceName": {
                                                    "referenceName": "ls_Azuredatalakegen2",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "storageaccountname": {
                                                            "value": "@pipeline().parameters.storage_account_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "path": {
                                                    "value": "@concat('crmalignment/log/',pipeline().parameters.parent_runid,'/',pipeline().parameters.response_id)",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "stg_contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_dynamics_crm",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "EntityName": "contact"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "file_audit",
                                    "description": "Doing File Audit",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "If Condition1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "605",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.parent_runid",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "CRM_Contactbase",
                                            "status": "Completed",
                                            "row_count": {
                                                "value": "@string(activity('upsert_contactbase').output.rowsCopied)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "@string(sub(int(activity('upsert_contactbase').output.rowsRead),int(activity('upsert_contactbase').output.rowsCopied)))",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.azure_sql_database_name",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.azure_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@pipeline().parameters.response_id",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@pipeline().parameters.mapping_id",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@pipeline().parameters.account_name",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@pipeline().parameters.purpose_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "copy_stg_table",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "ParquetSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "preCopyScript": "IF OBJECT_ID(N'alignment.stg_contactbase') IS NOT NULL\n        truncate table alignment.stg_contactbase",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false,
                                            "tableOption": "autoCreate",
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_crm_parquet",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "foldername": {
                                                    "value": "@concat('processing/',pipeline().parameters.response_id,'/contactbase.parquet')",
                                                    "type": "Expression"
                                                },
                                                "filename": "@item().name",
                                                "storage_account_name": {
                                                    "value": "@pipeline().parameters.storage_account_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "stg_contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "upsert_contactbase",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(int(activity('upsert_contactbase').output.rowsSkipped),0)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "read_crm_rejected_rows",
                                                "type": "DatabricksNotebook",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.12:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "notebookPath": "/alignment-To-CRM/dbn-read-crm-rejected-row-log-file",
                                                    "baseParameters": {
                                                        "adf_run_id": {
                                                            "value": "@pipeline().parameters.parent_runid",
                                                            "type": "Expression"
                                                        },
                                                        "response_id": {
                                                            "value": "@pipeline().parameters.response_id",
                                                            "type": "Expression"
                                                        },
                                                        "server_name": {
                                                            "value": "@pipeline().parameters.azure_sql_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "database_name": {
                                                            "value": "@pipeline().parameters.azure_sql_database_name",
                                                            "type": "Expression"
                                                        },
                                                        "log_path": {
                                                            "value": "@activity('upsert_contactbase').output.logFilePath",
                                                            "type": "Expression"
                                                        },
                                                        "entity_name": "contact"
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_NDPdatabricks",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "databricks_workspace_url": {
                                                            "value": "@pipeline().parameters.databricks_workspace_url",
                                                            "type": "Expression"
                                                        },
                                                        "databricks_clusterid": {
                                                            "value": "@pipeline().parameters.databricks_clusterid",
                                                            "type": "Expression"
                                                        },
                                                        "vault_url": {
                                                            "value": "@pipeline().parameters.vault_url",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "generate_contactbase_parquet_files",
                        "description": "generating parquet files for upserting data into crm ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/alignment-To-CRM/dbn-upsert-contact-base",
                            "baseParameters": {
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "is_log_on": {
                                    "value": "@pipeline().parameters.is_log_on",
                                    "type": "Expression"
                                },
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "crm_server_name": {
                                    "value": "@pipeline().parameters.crm_server_name",
                                    "type": "Expression"
                                },
                                "crm_database_name": {
                                    "value": "@pipeline().parameters.crm_database_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@pipeline().parameters.mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@pipeline().parameters.account_name",
                                    "type": "Expression"
                                },
                                "purpose_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "get_list_of_files_for_po_contact_number",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "insert_into_crm_contact",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "crmalignment",
                                    "FilePath": {
                                        "value": "@concat('processing/',pipeline().parameters.response_id,'/po_contact_number.parquet')",
                                        "type": "Expression"
                                    },
                                    "FileName": "*.parquet",
                                    "storage_account_name": {
                                        "value": "@pipeline().parameters.storage_account_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "for_each_file",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_list_of_files_for_po_contact_number",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_list_of_files_for_po_contact_number').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "pip-update-contact-id",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-update-contact-id",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "response_id": {
                                                "value": "@pipeline().parameters.response_id",
                                                "type": "Expression"
                                            },
                                            "file_name": {
                                                "value": "@item().name",
                                                "type": "Expression"
                                            },
                                            "storage_account_name": {
                                                "value": "@pipeline().parameters.storage_account_name",
                                                "type": "Expression"
                                            },
                                            "crm_server_name": {
                                                "value": "@pipeline().parameters.crm_server_name",
                                                "type": "Expression"
                                            },
                                            "crm_database_name": {
                                                "value": "@pipeline().parameters.crm_database_name",
                                                "type": "Expression"
                                            },
                                            "crm_username": {
                                                "value": "@pipeline().parameters.crm_username",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            },
                                            "azure_sql_server_name": {
                                                "value": "@pipeline().parameters.azure_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "azure_sql_database_name": {
                                                "value": "@pipeline().parameters.azure_sql_database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "azure_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpazsql01.database.windows.net"
                    },
                    "azure_sql_database_name": {
                        "type": "string",
                        "defaultValue": "RNLNDPAZSQLDEVQA"
                    },
                    "crm_server_name": {
                        "type": "string",
                        "defaultValue": "10.26.26.22"
                    },
                    "crm_database_name": {
                        "type": "string",
                        "defaultValue": "NDPDev_MSCRM"
                    },
                    "is_log_on": {
                        "type": "string",
                        "defaultValue": "1"
                    },
                    "parent_runid": {
                        "type": "string",
                        "defaultValue": "123"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "mapping_id": {
                        "type": "string"
                    },
                    "account_name": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "storage_account_name": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "alignment-To-CRM"
                },
                "annotations": [],
                "lastPublishTime": "2022-12-04T03:42:09Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-sftp-file-validation-raw-to-em_inbound1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "File Validation",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "File_HealthCheck",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(greater(activity('File_HealthCheck').output.runOutput[0],0),equals(pipeline().parameters.RowsRead,pipeline().parameters.RowsWritten))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Delete file from Raw_Folder",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy File From Raw To Reject Folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_raw_file19",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "foldername": {
                                                    "value": "@concat('raw/',split(pipeline().parameters.PurposeName,' ')[0],'/',pipeline().parameters.PurposeName,'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/',pipeline().parameters.AccountName)",
                                                    "type": "Expression"
                                                },
                                                "filename": {
                                                    "value": "@pipeline().parameters.SftpFileName",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": false,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                },
                                {
                                    "name": "Copy File From Raw To Reject Folder",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "1.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "PIFileCopy20",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "Destinationfilename": {
                                                    "value": "'@{pipeline().parameters.SftpFileName}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "FileSource": {
                                                    "Containername": "datalanding",
                                                    "Filepath": {
                                                        "value": "@concat('raw/',split(pipeline().parameters.PurposeName,' ')[0],'/',pipeline().parameters.PurposeName,'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/',pipeline().parameters.AccountName)",
                                                        "type": "Expression"
                                                    },
                                                    "Filename": {
                                                        "value": "@pipeline().parameters.SftpFileName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "FileDestination": {
                                                    "Containername": "datalanding",
                                                    "Filepath": "raw/rejected",
                                                    "Filename": {
                                                        "value": "@pipeline().parameters.SftpFileName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "Email - File Validation Failed",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "File Audit - Raw To Reject",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "https://prod-124.westus.logic.azure.com:443/workflows/ecbea0da6d9d4fec805510112e58ac43/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=zftAqYi2_FunSnqxi7eii9zkIg7f9xunb1baFRVUGYc",
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"File Validation Failed and File Moved to Reject Folder\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "ETL Audit-Copy Failed Raw to Reject",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy File From Raw To Reject Folder",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Copy File From Raw To Reject Folder').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "File Audit - Raw To Reject",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Delete file from Raw_Folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "104",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@pipeline().parameters.NewResponseID",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@pipeline().parameters.PurposeName",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@pipeline().parameters.AccountName",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "Rejected",
                                            "status": "Copied In rejected Folder",
                                            "row_count": {
                                                "value": "@string(activity('Copy File From Raw To Reject Folder').output.runstatus.metrics.FileDestination.rowsWritten)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "@string(activity('Copy File From Raw To Reject Folder').output.runstatus.metrics.FileDestination.rowsWritten)",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@pipeline().parameters.NewFileUploadMappingID",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "File Rename",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "File_metadata_details",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "FileNameModified",
                                        "value": {
                                            "value": "@concat(replace(pipeline().parameters.PurposeName,' ',''),'_',pipeline().parameters.AccountName,'_',string(formatDateTime(convertTimeZone(utcnow(),'UTC','Eastern Standard Time'),'yyyyMMddHHmmssffff')),'.csv')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Generate New Response",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "File Rename",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "newresponseid",
                                                    "value": {
                                                        "value": "@pipeline().parameters.NewResponseID",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "Response Name",
                                                    "value": {
                                                        "value": "@concat('From UNC Path-',pipeline().parameters.OriginalName)",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "new_populatemappeddata",
                                                    "value": "False"
                                                },
                                                {
                                                    "name": "new_podata",
                                                    "value": {
                                                        "value": "{\"account\":\"@{pipeline().parameters.AccountID}\",\"product\":\"da724394-befc-e911-a82a-000d3a075a33\",\"purpose1\":\" @{variables('PurposeID')} \",\"file\":[{\"name\":\"@{pipeline().parameters.OriginalName}\",\"type\":\"application/vnd.ms-excel\",\"content\":\"data:application/vnd.ms-excel;base64\"}],\"fileNameStr1\":\" @{pipeline().parameters.OriginalName}\",\"@{variables('ScoringInfo')}\"}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "sqlReaderQuery": {
                                                "value": "select f.popb_data [file_data],f.popb_purposeid [file_purposeid], f.statuscode [file_statuscode],f.statecode [file_statecode], r.* from popb_responsesbase r\ninner join popb_fileuploadmappingBase f on f.popb_responseid=r.popb_responsesId where popb_responsesid='@{pipeline().parameters.ResponseID}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "DynamicsCrmSink",
                                            "writeBatchSize": 10,
                                            "writeBehavior": "upsert",
                                            "ignoreNullValues": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "popb_contact",
                                                        "type": "Guid",
                                                        "physicalType": "uniqueidentifier"
                                                    },
                                                    "sink": {
                                                        "name": "popb_contact",
                                                        "type": "Guid"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "popb_customer",
                                                        "type": "Guid",
                                                        "physicalType": "uniqueidentifier"
                                                    },
                                                    "sink": {
                                                        "name": "popb_customer",
                                                        "type": "Guid"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "new_podata"
                                                    },
                                                    "sink": {
                                                        "name": "popb_data",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Response Name"
                                                    },
                                                    "sink": {
                                                        "name": "popb_name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "new_populatemappeddata"
                                                    },
                                                    "sink": {
                                                        "name": "popb_populatemappeddata",
                                                        "type": "Boolean"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "popb_portal",
                                                        "type": "Guid",
                                                        "physicalType": "uniqueidentifier"
                                                    },
                                                    "sink": {
                                                        "name": "popb_portal",
                                                        "type": "Guid"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "popb_questionnaire",
                                                        "type": "Guid",
                                                        "physicalType": "uniqueidentifier"
                                                    },
                                                    "sink": {
                                                        "name": "popb_questionnaire",
                                                        "type": "Guid"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "newresponseid"
                                                    },
                                                    "sink": {
                                                        "name": "popb_responsesid",
                                                        "type": "Guid"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "popb_updateanswersandmapping",
                                                        "type": "Boolean",
                                                        "physicalType": "bit"
                                                    },
                                                    "sink": {
                                                        "name": "popb_updateanswersandmapping",
                                                        "type": "Boolean"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "statecode",
                                                        "type": "Int32",
                                                        "physicalType": "int"
                                                    },
                                                    "sink": {
                                                        "name": "statecode",
                                                        "type": "Int32"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "statuscode",
                                                        "type": "Int32",
                                                        "physicalType": "int"
                                                    },
                                                    "sink": {
                                                        "name": "statuscode",
                                                        "type": "Int32"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RNLSTKDEVSQL1152",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ResponseBase17",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate New FileUploadMapping",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate New Response",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "NewFileUploadMappingID",
                                                    "value": {
                                                        "value": "@pipeline().parameters.NewFileUploadMappingID",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "FileUploadMappingName",
                                                    "value": {
                                                        "value": "@concat('From UNC Path-', pipeline().parameters.OriginalName)",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "OriginalFileName",
                                                    "value": {
                                                        "value": "@pipeline().parameters.OriginalName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "NewResponseID",
                                                    "value": {
                                                        "value": "@pipeline().parameters.NewResponseID",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "sqlReaderQuery": {
                                                "value": "select f.popb_data [file_data],f.popb_purposeid [file_purposeid], f.statuscode [file_statuscode],f.statecode [file_statecode], r.* from popb_responsesbase r\ninner join popb_fileuploadmappingBase f on f.popb_responseid=r.popb_responsesId where popb_responsesid='@{pipeline().parameters.ResponseID}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "DynamicsCrmSink",
                                            "writeBatchSize": 10,
                                            "writeBehavior": "upsert",
                                            "ignoreNullValues": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "file_data",
                                                        "type": "String",
                                                        "physicalType": "nvarchar"
                                                    },
                                                    "sink": {
                                                        "name": "popb_data",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "NewFileUploadMappingID"
                                                    },
                                                    "sink": {
                                                        "name": "popb_fileuploadmappingid",
                                                        "type": "Guid"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "FileUploadMappingName"
                                                    },
                                                    "sink": {
                                                        "name": "popb_name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "file_purposeid",
                                                        "type": "Guid",
                                                        "physicalType": "uniqueidentifier"
                                                    },
                                                    "sink": {
                                                        "name": "popb_purposeid",
                                                        "type": "Guid"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "NewResponseID"
                                                    },
                                                    "sink": {
                                                        "name": "popb_responseid",
                                                        "type": "Guid"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "OriginalFileName"
                                                    },
                                                    "sink": {
                                                        "name": "popb_uploadedfilename",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "file_statecode",
                                                        "type": "Int32",
                                                        "physicalType": "int"
                                                    },
                                                    "sink": {
                                                        "name": "statecode",
                                                        "type": "Int32"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "file_statuscode",
                                                        "type": "Int32",
                                                        "physicalType": "int"
                                                    },
                                                    "sink": {
                                                        "name": "statuscode",
                                                        "type": "Int32"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RNLSTKDEVSQL1152",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Fileuploadmapping148",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Delete file from validated folder",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy File From Validated to EM_Inbound",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_raw_file19",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "foldername": "raw/validated",
                                                "filename": {
                                                    "value": "@pipeline().parameters.SftpFileName",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": false,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                },
                                {
                                    "name": "File Status Update",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "File Audit - Validated To EM_Inbound",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "select popb_fileuploadmappingid,777250008 as statuscode,0 as statecode from popb_fileuploadmappingBase where popb_responseid='@{pipeline().parameters.NewResponseID}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "DynamicsCrmSink",
                                            "writeBatchSize": 10,
                                            "writeBehavior": "upsert",
                                            "ignoreNullValues": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "popb_fileuploadmappingid",
                                                        "type": "Guid",
                                                        "physicalType": "uniqueidentifier"
                                                    },
                                                    "sink": {
                                                        "name": "popb_fileuploadmappingid",
                                                        "type": "Guid"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "statecode",
                                                        "type": "Int32",
                                                        "physicalType": "int"
                                                    },
                                                    "sink": {
                                                        "name": "statecode",
                                                        "type": "Int32"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "statuscode",
                                                        "type": "Int32",
                                                        "physicalType": "int"
                                                    },
                                                    "sink": {
                                                        "name": "statuscode",
                                                        "type": "Int32"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RNLSTKDEVSQL1152",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Fileuploadmapping148",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Fetch Complete File Metadata",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Set PurposeId",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Set ScoringInfo",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "select \nf.popb_fileuploadmappingId, f.popb_data,f.popb_responseid,p.popb_name [popb_purposeidname],\nr.popb_name [popb_responseidname],\nanswr.popb_responsequestion,answr.popb_responseanswer,\nrq.popb_name [answr.popb_responsequestionname],\nAccountBase.name [cnt.po_institutionidname]\nfrom\npopb_fileuploadmappingBase f\ninner join popb_responsesBase r on f.popb_responseid=r.popb_responsesId and r.statuscode=1\nINNER join popb_questionnairreBase q on r.popb_questionnaire=q.popb_questionnairreId and q.popb_questionnairetypes='777250002'\ninner join popb_responseanswerBase answr on answr.popb_parentresponse=r.popb_responsesid\ninner join popb_purposeBase p on p.popb_purposeId=f.popb_purposeid\ninner join popb_responsequestionBase rq on rq.popb_responsequestionId=answr.popb_responsequestion\ninner join (select ranswr.popb_responseanswer,rp.popb_responsesId from\n    popb_responseanswerBase ranswr\n    inner join popb_responsequestionBase rquest on ranswr.popb_responsequestion=rquest.popb_responsequestionId\n    inner join popb_responses rp on ranswr.popb_parentresponse=rp.popb_responsesId\n    INNER join popb_questionnairreBase qr on rp.popb_questionnaire=qr.popb_questionnairreId and qr.popb_questionnairetypes='777250002'\n    where\n    rquest.popb_name='Account' AND (ranswr.popb_responseanswer is not null AND len(ranswr.popb_responseanswer)>31)) cnt on r.popb_responsesId=cnt.popb_responsesId\ninner join AccountBase on cnt.popb_responseanswer=AccountBase.AccountId\nwhere \nf.popb_responseid='@{pipeline().parameters.ResponseID}' and p.popb_name like 'EM%'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "RNLSTKDEVSQL1152",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "Copy File From Raw To Validated Folder",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "1.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "PIFileCopy20",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "Destinationfilename": {
                                                    "value": "'@{pipeline().parameters.SftpFileName}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "FileSource": {
                                                    "Containername": "datalanding",
                                                    "Filepath": {
                                                        "value": "@concat('raw/',split(pipeline().parameters.PurposeName,' ')[0],'/',pipeline().parameters.PurposeName,'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/',pipeline().parameters.AccountName)",
                                                        "type": "Expression"
                                                    },
                                                    "Filename": {
                                                        "value": "@pipeline().parameters.SftpFileName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "FileDestination": {
                                                    "Containername": "datalanding",
                                                    "Filepath": "raw/validated",
                                                    "Filename": {
                                                        "value": "@pipeline().parameters.SftpFileName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "Copy File From Validated to EM_Inbound",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate New FileUploadMapping",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "1.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "PIFileCopy20",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "Destinationfilename": {
                                                    "value": "'@{variables('FileNameModified')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "FileSource": {
                                                    "Containername": "datalanding",
                                                    "Filepath": "raw/validated",
                                                    "Filename": {
                                                        "value": "@pipeline().parameters.SftpFileName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "FileDestination": {
                                                    "Containername": "datalanding",
                                                    "Filepath": {
                                                        "value": "@concat('em_inbound/',pipeline().parameters.PurposeName,'/',variables('FileNameModified'),'/')",
                                                        "type": "Expression"
                                                    },
                                                    "Filename": {
                                                        "value": "@variables('FileNameModified')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "Fetch Scoring Info",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "File Audit - Raw To Validated",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "select purpose1,\nSTUFF(LEFT(ScoringModel, LEN(ScoringModel) - PATINDEX('%[^,]%', REVERSE(ScoringModel)) + 1), 1, PATINDEX('%[^,]%', ScoringModel) - 1, '') ScoringInfo\nfrom \n(\nselect popb_responsesId,JSON_VALUE(popb_data,'$.purpose1') as purpose1,\nconcat(CASE\n    WHEN (JSON_VALUE(popb_data,'$.isScoringEnabled[0]') is not null) THEN '\"isScoringEnabled\":[\"Yes\"],'\nEND , CASE\n    WHEN (JSON_VALUE(popb_data,'$.isModelingEnabled[0]') is not null) THEN '\"isModelingEnabled\":[\"Yes\"],'\nEND, CASE\n    WHEN (JSON_VALUE(popb_data,'$.ScoringModel') is not null) THEN '\"ScoringModel\":\"'+JSON_VALUE(popb_data,'$.ScoringModel')+'\",'\nEND )as ScoringModel\nfrom popb_responsesBase \nwhere popb_responsesId = '@{pipeline().parameters.ResponseID}'\n) cte",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "RNLSTKDEVSQL1152",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Set PurposeId",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Fetch Scoring Info",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PurposeID",
                                        "value": {
                                            "value": "@if(greater(length(activity('Fetch Scoring Info').output.value),0),activity('Fetch Scoring Info').output.value[0].purpose1,'')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set ScoringInfo",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Fetch Scoring Info",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ScoringInfo",
                                        "value": {
                                            "value": "@if(greater(length(activity('Fetch Scoring Info').output.value),0),activity('Fetch Scoring Info').output.value[0].ScoringInfo,'')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Email - File Ingestion Success",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "End ETL Audit",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "https://prod-173.westus.logic.azure.com:443/workflows/b4ac4d8213344ed3ab6ddf3356422bc2/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=J2Z8J9Kyf9lvgKvZUAOB_qghXvi-kxnhBgsng4SQRJc",
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"File Ingestion Successful!\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "ETL Audit-Copy Failed Raw to validated",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy File From Raw To Validated Folder",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "1",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Copy File From Raw To Validated Folder').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "ETL Audit-Copy Failed validated EM_Inbound",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy File From Validated to EM_Inbound",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Copy File From Raw To Validated Folder').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "End ETL Audit",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "File Metadata Audit",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "File_null_value_check",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "106",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Successfully copied file to inbound folder",
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "File Audit - Raw To Validated",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy File From Raw To Validated Folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "102",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@pipeline().parameters.NewResponseID",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@pipeline().parameters.SftpFileName",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@pipeline().parameters.AccountName",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "validated",
                                            "status": "Copied In validated Folder",
                                            "row_count": {
                                                "value": "@string(activity('Copy File From Raw To Validated Folder').output.runstatus.metrics.FileDestination.rowsWritten)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "0",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@pipeline().parameters.NewFileUploadMappingID",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "File Audit - Validated To EM_Inbound",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Delete file from validated folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "103",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@pipeline().parameters.NewResponseID",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@pipeline().parameters.NewFileUploadMappingID",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@pipeline().parameters.SftpFileName",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@pipeline().parameters.AccountName",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "em_inbound",
                                            "status": "Copied In em_inbound Folder",
                                            "row_count": {
                                                "value": "@string(activity('Copy File From Validated to EM_Inbound').output.runstatus.metrics.FileDestination.rowsWritten)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "0",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "File Metadata Audit",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Genrerate Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-metadata-audit",
                                        "baseParameters": {
                                            "response_id": {
                                                "value": "@pipeline().parameters.NewResponseID",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@pipeline().parameters.NewFileUploadMappingID",
                                                "type": "Expression"
                                            },
                                            "file_source": {
                                                "value": "@pipeline().parameters.source",
                                                "type": "Expression"
                                            },
                                            "file_purpose": {
                                                "value": "@substring(pipeline().parameters.PurposeName,0,2)",
                                                "type": "Expression"
                                            },
                                            "purpose_name": {
                                                "value": "@pipeline().parameters.PurposeName",
                                                "type": "Expression"
                                            },
                                            "original_filename": {
                                                "value": "@pipeline().parameters.OriginalName",
                                                "type": "Expression"
                                            },
                                            "modified_filename": {
                                                "value": "@variables('FileNameModified')",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@pipeline().parameters.AccountName",
                                                "type": "Expression"
                                            },
                                            "account_id": {
                                                "value": "@pipeline().parameters.AccountID",
                                                "type": "Expression"
                                            },
                                            "file_load_type": "Single",
                                            "record_count": {
                                                "value": "@string(activity('Copy File From Validated to EM_Inbound').output.runstatus.metrics.FileDestination.sources.FileSource.rowsread)",
                                                "type": "Expression"
                                            },
                                            "file_size_kb": {
                                                "value": "@string(div(activity('Copy File From Validated to EM_Inbound').output.runstatus.metrics.FileDestination.stages[0].bytesRead,1024))",
                                                "type": "Expression"
                                            },
                                            "file_format": {
                                                "value": "@split(pipeline().parameters.SftpFileName,'.')[1]",
                                                "type": "Expression"
                                            },
                                            "fiscal_yr": {
                                                "value": "@string(pipeline().parameters.FiscalYear)",
                                                "type": "Expression"
                                            },
                                            "fiscal_year_month": {
                                                "value": "@string(pipeline().parameters.FiscalMonth)",
                                                "type": "Expression"
                                            },
                                            "schema_json": {
                                                "value": "@replace(activity('Fetch Complete File Metadata').output.firstrow.popb_data,'''','')",
                                                "type": "Expression"
                                            },
                                            "file_upload_datetime": {
                                                "value": "@utcNow()",
                                                "type": "Expression"
                                            },
                                            "received_datetime": {
                                                "value": "@utcNow()",
                                                "type": "Expression"
                                            },
                                            "delimiter": {
                                                "value": "@string(activity('File_metadata_details').output.firstRow.Delimiter)",
                                                "type": "Expression"
                                            },
                                            "file_encoding": {
                                                "value": "@string(activity('File_metadata_details').output.firstRow.FileEncoding)",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Genrerate Schema",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "File Status Update",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PIConfig_Schema48",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "PurposeName": {
                                                "value": "@pipeline().parameters.PurposeName",
                                                "type": "Expression"
                                            },
                                            "AccountID": {
                                                "value": "@pipeline().parameters.AccountID",
                                                "type": "Expression"
                                            },
                                            "ResponseID": {
                                                "value": "@pipeline().parameters.ResponseID",
                                                "type": "Expression"
                                            },
                                            "FilePath": {
                                                "value": "@concat('em_inbound/',pipeline().parameters.PurposeName,'/',variables('FileNameModified'),'/')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "File_null_value_check",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Genrerate Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-healthcheck-log",
                                        "baseParameters": {
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@pipeline().parameters.AccountName",
                                                "type": "Expression"
                                            },
                                            "adlsName": {
                                                "value": "@pipeline().parameters.adlsName",
                                                "type": "Expression"
                                            },
                                            "containerName": {
                                                "value": "@pipeline().parameters.containerName",
                                                "type": "Expression"
                                            },
                                            "rawpath": {
                                                "value": "@concat('em_inbound/',pipeline().parameters.PurposeName,'/',variables('FileNameModified'))",
                                                "type": "Expression"
                                            },
                                            "FileName": {
                                                "value": "@variables('FileNameModified')",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@pipeline().parameters.NewFileUploadMappingID",
                                                "type": "Expression"
                                            },
                                            "responseid": {
                                                "value": "@pipeline().parameters.NewResponseID",
                                                "type": "Expression"
                                            },
                                            "categoryName": {
                                                "value": "@substring(pipeline().parameters.PurposeName,0,2)",
                                                "type": "Expression"
                                            },
                                            "purposeName": {
                                                "value": "@pipeline().parameters.PurposeName",
                                                "type": "Expression"
                                            },
                                            "validation": "empty record check",
                                            "schemaFilename": {
                                                "value": "@pipeline().parameters.SchemaFilename",
                                                "type": "Expression"
                                            },
                                            "source": {
                                                "value": "@pipeline().parameters.source",
                                                "type": "Expression"
                                            },
                                            "delimiter": {
                                                "value": "@string(activity('File_metadata_details').output.firstRow.Delimiter)",
                                                "type": "Expression"
                                            },
                                            "mountPath": "/mnt/datalanding",
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "File_metadata_details",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Fetch Complete File Metadata",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "select distinct   right(x1.popb_responsequestionidentifier,1) fileorder, r.popb_responsesId ,  x1.popb_uploadedfilename, x1.popb_fileuploadmappingId,x1.popb_name [popb_purposeidname], x1.popb_purposeId, r.popb_name [popb_responseidname],  x2.answer [Account],  (select top 1 ra.popb_name 'answer'         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         where         rq.popb_name in ('Fiscal Year')         and r.popb_responsesid=ra.popb_parentresponse ) Fiscal_Year  ,x3.answer [Delimiter] ,x4.answer [FileEncoding] ,x5.answer [Action]  from popb_responses  r inner join (     select ra.popb_name 'answer',rq.popb_name 'question',rq.popb_responsequestionidentifier,ra.popb_parentresponse, f.popb_uploadedfilename,          f.popb_fileuploadmappingId,p.popb_name,f.popb_processenddate,f.statuscode, p.popb_purposeId         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         inner join popb_fileuploadmapping f on f.popb_responseid=ra.popb_parentresponse and cast(ra.popb_name as varchar(38))=cast(f.popb_uploadedfilename as varchar(38))         inner join popb_purposeBase p on f.popb_purposeid=p.popb_purposeid         where         rq.popb_name in ('File Name')         ) x1  on r.popb_responsesid=x1.popb_parentresponse inner join (     select distinct ra.popb_name 'answer',rq.popb_name 'question',rq.popb_responsequestionidentifier,ra.popb_parentresponse         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         where         rq.popb_name in ('Account')         ) x2  on r.popb_responsesid=x2.popb_parentresponse inner join (     select ra.popb_name 'answer',rq.popb_name 'question',rq.popb_responsequestionidentifier,ra.popb_parentresponse         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         where         rq.popb_name in ('Delimiter')         ) x3  on r.popb_responsesid=x3.popb_parentresponse and right(x1.popb_responsequestionidentifier,1)=RIGHT(x3.popb_responsequestionidentifier,1) inner join (     select ra.popb_name 'answer',rq.popb_name 'question',rq.popb_responsequestionidentifier,ra.popb_parentresponse         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         where         rq.popb_name in ('File Encoding')         ) x4  on r.popb_responsesid=x4.popb_parentresponse and right(x1.popb_responsequestionidentifier,1)=RIGHT(x4.popb_responsequestionidentifier,1) left join (     select ra.popb_name 'answer',rq.popb_name 'question',rq.popb_responsequestionidentifier,ra.popb_parentresponse         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         where         rq.popb_name in ('Merge Contacts or Append Attributes')         ) x5  on r.popb_responsesid=x5.popb_parentresponse and right(x1.popb_responsequestionidentifier,1)=RIGHT(x5.popb_responsequestionidentifier,1) where x1.popb_processenddate is null and x1.statuscode='777250008' and popb_responsesid='@{pipeline().parameters.ResponseID}'\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "RNLSTKDEVSQL1152",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "ETL Audit- Metadata audit",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "File Metadata Audit",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        },
                                        {
                                            "activity": "File_null_value_check",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Copy File From Raw To Validated Folder').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Email - File null value check",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "File_null_value_check",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "https://prod-173.westus.logic.azure.com:443/workflows/b4ac4d8213344ed3ab6ddf3356422bc2/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=J2Z8J9Kyf9lvgKvZUAOB_qghXvi-kxnhBgsng4SQRJc",
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"File Null check completed!\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "File_HealthCheck",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-healthcheck-validation",
                            "baseParameters": {
                                "FileName": {
                                    "value": "@pipeline().parameters.SftpFileName",
                                    "type": "Expression"
                                },
                                "adlsName": {
                                    "value": "@pipeline().parameters.adlsName",
                                    "type": "Expression"
                                },
                                "containerName": {
                                    "value": "datalanding",
                                    "type": "Expression"
                                },
                                "mountPath": "/mnt/datalanding",
                                "rawpath": {
                                    "value": "@concat('raw/',split(pipeline().parameters.PurposeName,' ')[0],'/',pipeline().parameters.PurposeName,'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/',pipeline().parameters.AccountName)",
                                    "type": "Expression"
                                },
                                "responseid": {
                                    "value": "@pipeline().parameters.ResponseID",
                                    "type": "Expression"
                                },
                                "source": {
                                    "value": "@pipeline().parameters.source",
                                    "type": "Expression"
                                },
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "purposeName": {
                                    "value": "@pipeline().parameters.PurposeName",
                                    "type": "Expression"
                                },
                                "categoryName": {
                                    "value": "@split(pipeline().parameters.PurposeName,' ')[0]\n",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SftpFileName": {
                        "type": "string"
                    },
                    "AccountID": {
                        "type": "string"
                    },
                    "ResponseID": {
                        "type": "string"
                    },
                    "AccountName": {
                        "type": "string"
                    },
                    "PurposeName": {
                        "type": "string"
                    },
                    "ParentPipelineName": {
                        "type": "string"
                    },
                    "ParentPipelineRunID": {
                        "type": "string"
                    },
                    "ParentPipelineTriggerName": {
                        "type": "string"
                    },
                    "FiscalMonth": {
                        "type": "string"
                    },
                    "FiscalYear": {
                        "type": "string"
                    },
                    "RowsRead": {
                        "type": "int"
                    },
                    "RowsWritten": {
                        "type": "int"
                    },
                    "OriginalName": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "NewResponseID": {
                        "type": "string"
                    },
                    "NewFileUploadMappingID": {
                        "type": "string"
                    },
                    "SchemaFilename": {
                        "type": "string"
                    },
                    "adlsName": {
                        "type": "string"
                    },
                    "containerName": {
                        "type": "string"
                    },
                    "server_name": {
                        "type": "string"
                    },
                    "database_name": {
                        "type": "string"
                    }
                },
                "variables": {
                    "FileNameModified": {
                        "type": "String"
                    },
                    "ScoringInfo": {
                        "type": "String"
                    },
                    "PurposeID": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-07-29T22:21:22Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-master-crm-to-crmsynapse')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "load-crm-to-crmsynapse",
                        "description": "Executing load-alignment-to-CRM pipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "start_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-crm-to-crmsynapse",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "parent_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "start_etl_audit",
                        "description": "starting ETL audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "801",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "end_etl_audit",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "load-crm-to-crmsynapse",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "802",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_etl_audit",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "load-crm-to-crmsynapse",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "803",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('load-crm-to-crmsynapse').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "concurrency": 3,
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vaulturl": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    }
                },
                "folder": {
                    "name": "crm-To-Crmsynapse"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-04T09:59:07Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-master-crm-to-crmsynapse-fplus')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "load-crm-to-crmsynapse-fplus",
                        "description": "Executing load-alignment-to-CRM pipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "start_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-crm-to-crmsynapse-fplus",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "parent_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "start_etl_audit",
                        "description": "starting ETL audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "801",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "end_etl_audit",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "load-crm-to-crmsynapse-fplus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "802",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_etl_audit",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "load-crm-to-crmsynapse-fplus",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "803",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('load-crm-to-crmsynapse-fplus').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "concurrency": 3,
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vaulturl": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    }
                },
                "folder": {
                    "name": "crm-To-Crmsynapse-Fplus"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-04T10:23:30Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-master-crm-to-crmsynapse-powerbi')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "load-crm-to-crmsynapse-powerbi",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "start_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-crm-to-crmsynapse-powerbi",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "parent_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "start_etl_audit",
                        "description": "starting ETL audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "801",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "end_etl_audit",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "load-crm-to-crmsynapse-powerbi",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "802",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_etl_audit",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "load-crm-to-crmsynapse-powerbi",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "803",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('load-crm-to-crmsynapse-powerbi').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "concurrency": 3,
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.26.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAPQA_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vaulturl": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-06T11:23:47Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-master-ads-to-crm')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "start_etl_audit",
                        "description": "starting ETL audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "804",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "load_ADS_to_CRM",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "start_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-ads-to-crm",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "end_etl_audit",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "load_ADS_to_CRM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "805",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_etl_audit",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "load_ADS_to_CRM",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "806",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('load_ADS_to_CRM').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vaulturl": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    }
                },
                "folder": {
                    "name": "crmsynapse-To_Crm"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-04T10:23:30Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-fqt-master-dataentry')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "fqt-prospect",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-data-entry-into-fqt-stg-prospect",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fqt-applicant-admit",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "fqt-prospect",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-data-entry-into-fqt-stg-applicant-admit",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fqt-inquiry",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "fqt-applicant-admit",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-data-entry-into-fqt-stg-inquiry",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-17T10:10:12Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_fplus_forwardflow_dqmaster')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "DQ Check - Admit",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_fplus_dqlookup_admit",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "modeltype": "Admit",
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "DQ Check - Applicant",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "DQ Check - Admit",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_fplus_dqlookup_applicant",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "modeltype": "Applicant",
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "DQ Check -Inquiry",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "DQ Check - Applicant",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_fplus_dqlookup_inquiry",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "modeltype": "Inquiry",
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "DQ Check -Prospect",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "DQ Check -Inquiry",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_fplus_dqlookup_prospect",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "modeltype": "Prospect",
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "modeltype": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.26.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAPQA_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-01T09:27:56Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-fplus-reverse-flow')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Final Extract to SFTP",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Extract Sas Score to FPlus",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-finalextract-to-sftp",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "UncPath": {
                                    "value": "@pipeline().parameters.UncPath",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@variables('azure_sql_database_name')",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "fplus_host": {
                                    "value": "@pipeline().parameters.fplus_host",
                                    "type": "Expression"
                                },
                                "fplus_username": {
                                    "value": "@pipeline().parameters.fplus_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "rnl_sftp_host": {
                                    "value": "@pipeline().parameters.rnl_sftp_host",
                                    "type": "Expression"
                                },
                                "rnl_sftp_username": {
                                    "value": "@pipeline().parameters.rnl_sftp_username",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Extract Sas Score to FPlus",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - Start",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_export_sas_to_db_crm",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "softscore_root": {
                                    "value": "@pipeline().parameters.softscore_root",
                                    "type": "Expression"
                                },
                                "container": {
                                    "value": "@pipeline().parameters.synapsecontainer",
                                    "type": "Expression"
                                },
                                "softscore_adls": {
                                    "value": "@pipeline().parameters.softscore_adls",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "fplus_host": {
                                    "value": "@pipeline().parameters.fplus_host",
                                    "type": "Expression"
                                },
                                "fplus_username": {
                                    "value": "@pipeline().parameters.fplus_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_etl_audit_sas",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Extract Sas Score to FPlus",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1306",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@variables('azure_sql_database_name')",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@variables('azure_sql_server_name')",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('Extract Sas Score to FPlus').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_etl_audit_sftp_extract",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Final Extract to SFTP",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1306",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@variables('azure_sql_database_name')",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@variables('azure_sql_server_name')",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('Final Extract to SFTP').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "email_failed_1",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "fail_etl_audit_sas",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-fplus-reverse-flow' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "email_failed_2",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "fail_etl_audit_sftp_extract",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-fplus-reverse-flow' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "email_successful",
                        "description": "email if pipeline is successful",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - End",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailSuccess",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"pip-fplus-reverse-flow Pipeline Successful\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Start",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1304",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - End",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Final Extract to SFTP",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1305",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "EmailSuccess": {
                        "type": "string",
                        "defaultValue": "https://prod-51.westus.logic.azure.com:443/workflows/5ebd1dba8bbb492e812b84f4e86ba426/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=1oKEwEZsA9W2ZHGi6e1ihm_4mpccHBle9UZjdW1uOkQ"
                    },
                    "EmailFailure": {
                        "type": "string",
                        "defaultValue": "https://prod-142.westus.logic.azure.com:443/workflows/5076b5f623944e73a73d414747a65c6f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QRg61OekEK1VZcXvQ400AcHr41s8V4BW3mqk5l_sNEM"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "fplus_host": {
                        "type": "string",
                        "defaultValue": "\\\\10.3.30.67\\SoftScore"
                    },
                    "fplus_username": {
                        "type": "string",
                        "defaultValue": "RNLWINSASCOMP1\\svc_prod_fqt"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "softscore_root": {
                        "type": "string",
                        "defaultValue": "SoftScore/UAT"
                    },
                    "synapsecontainer": {
                        "type": "string",
                        "defaultValue": "prodcrmsynapse"
                    },
                    "softscore_adls": {
                        "type": "string",
                        "defaultValue": "SoftScore"
                    },
                    "UncPath": {
                        "type": "string",
                        "defaultValue": "/F2.0 Report - CSD - AM"
                    },
                    "rnl_sftp_host": {
                        "type": "string",
                        "defaultValue": "SFTP.RuffaloNL.com"
                    },
                    "rnl_sftp_username": {
                        "type": "string",
                        "defaultValue": "Brillio_rnl"
                    }
                },
                "variables": {
                    "azure_sql_server_name": {
                        "type": "String",
                        "defaultValue": "rnlndpuatazsql01.database.windows.net"
                    },
                    "azure_sql_database_name": {
                        "type": "String",
                        "defaultValue": "NDPUATSQLDB"
                    }
                },
                "folder": {
                    "name": "F+/Reverse Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-14T10:07:52Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-filecopy-blob-to-adls')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This pipeline copies the file present in Blob uploaded via client portal to ADLS raw location",
                "activities": [
                    {
                        "name": "OriginalFilename",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "OriginalFileName",
                            "value": {
                                "value": "@toLower(pipeline().parameters.OriginalFilename)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "File_Metadata_Details",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ResponseID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "PurposeName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "OriginalFilename",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "FileUploadedBy",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:30:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select f.createdon, \nf.popb_fileuploadmappingId, f.popb_data,f.popb_responseid,p.popb_name [popb_purposeidname],\nr.popb_name [popb_responseidname],\nanswr.popb_responsequestion,answr.popb_responseanswer,\nrq.popb_name [answr.popb_responsequestionname],\nAccountBase.name [po_institutionidname]\nfrom\npopb_fileuploadmappingBase f\ninner join popb_responsesBase r on f.popb_responseid=r.popb_responsesId and r.statuscode=1\nINNER join popb_questionnairreBase q on r.popb_questionnaire=q.popb_questionnairreId and q.popb_questionnairetypes='777250002'\ninner join popb_responseanswerBase answr on answr.popb_parentresponse=r.popb_responsesid\ninner join popb_purposeBase p on p.popb_purposeId=f.popb_purposeid\ninner join popb_responsequestionBase rq on rq.popb_responsequestionId=answr.popb_responsequestion\ninner join (select ranswr.popb_responseanswer,rp.popb_responsesId from\n    popb_responseanswerBase ranswr\n    inner join popb_responsequestionBase rquest on ranswr.popb_responsequestion=rquest.popb_responsequestionId\n    inner join popb_responses rp on ranswr.popb_parentresponse=rp.popb_responsesId\n    INNER join popb_questionnairreBase qr on rp.popb_questionnaire=qr.popb_questionnairreId and qr.popb_questionnairetypes='777250002'\n    where\n    rquest.popb_name='Account' AND (ranswr.popb_responseanswer is not null AND len(ranswr.popb_responseanswer)>31\nand TRY_CONVERT(UNIQUEIDENTIFIER, ranswr.popb_responseanswer) IS NOT NULL \n )) cnt on r.popb_responsesId=cnt.popb_responsesId\ninner join AccountBase on cnt.popb_responseanswer=AccountBase.AccountId\nwhere f.popb_responseid='@{pipeline().parameters.ResponseID}' AND p.popb_name ='@{pipeline().parameters.PurposeName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "PurposeName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "PurposeIdname",
                            "value": {
                                "value": "@pipeline().parameters.PurposeName",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ResponseID",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ResponseId",
                            "value": {
                                "value": "@pipeline().parameters.ResponseID",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "FileUploadmappingID",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "File_Metadata_Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileUploadMappingID",
                            "value": {
                                "value": "@activity('File_Metadata_Details').output.firstRow.popb_fileuploadmappingId",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "InstitutionName",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "File_Metadata_Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "InstitutionName",
                            "value": {
                                "value": "@activity('File_Metadata_Details').output.firstRow.po_institutionidname",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Get_AccountID",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "FileUploadmappingID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "InstitutionName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:30:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "With AcctTmp as \n(\nselect \nf.popb_responseid as ResponseID,AB.AccountId as AccountId,  AB.po_fiscalyear  as fiscalMonth, AB.name AccountName, \nISNULL(AB.po_StateDoNotCall,0) as  po_StateDoNotCall\nfrom\npopb_fileuploadmapping f\ninner join (select ranswr.popb_responseanswer,rp.popb_responsesId from\npopb_responseanswer ranswr\n    inner join popb_responsequestion rquest on ranswr.popb_responsequestion=rquest.popb_responsequestionId AND  rquest.popb_name='Account' AND ranswr.popb_responseanswer is not null AND len(ranswr.popb_responseanswer)>1\n    inner join popb_responses rp on ranswr.popb_parentresponse=rp.popb_responsesId\n    INNER join popb_questionnairre qr on rp.popb_questionnaire=qr.popb_questionnairreId and qr.popb_questionnairetypes='777250002'\n    where\n    rquest.popb_name='Account' and (ranswr.popb_responseanswer is not null AND len(ranswr.popb_responseanswer)>31)) cnt \n       on f.popb_responseId=cnt.popb_responsesId\ninner join Account AB on cnt.popb_responseanswer=AB.AccountId) \nselect AccountId,fiscalMonth,AccountName  from AcctTmp  AC  where AC.ResponseID =  '@{pipeline().parameters.ResponseID}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "File_complete_metadata",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get_AccountID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select distinct   right(x1.popb_responsequestionidentifier,1) fileorder, r.popb_responsesId ,  x1.popb_uploadedfilename, x1.popb_fileuploadmappingId,x1.popb_name [popb_purposeidname], x1.popb_purposeId, r.popb_name [popb_responseidname],  x2.answer [Account],  (select top 1 ra.popb_name 'answer'         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         where         rq.popb_name in ('Fiscal Year')         and r.popb_responsesid=ra.popb_parentresponse ) Fiscal_Year  ,x3.answer [Delimiter] ,x4.answer [FileEncoding] ,x5.answer [Action]  from popb_responses  r inner join (     select ra.popb_name 'answer',rq.popb_name 'question',rq.popb_responsequestionidentifier,ra.popb_parentresponse, f.popb_uploadedfilename,          f.popb_fileuploadmappingId,p.popb_name,f.popb_processenddate,f.statuscode, p.popb_purposeId         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         inner join popb_fileuploadmapping f on f.popb_responseid=ra.popb_parentresponse and cast(ra.popb_name as varchar(38))=cast(f.popb_uploadedfilename as varchar(38))         inner join popb_purposeBase p on f.popb_purposeid=p.popb_purposeid         where         rq.popb_name in ('File Name')         ) x1  on r.popb_responsesid=x1.popb_parentresponse inner join (     select distinct ra.popb_name 'answer',rq.popb_name 'question',rq.popb_responsequestionidentifier,ra.popb_parentresponse         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         where         rq.popb_name in ('Account')         ) x2  on r.popb_responsesid=x2.popb_parentresponse inner join (     select ra.popb_name 'answer',rq.popb_name 'question',rq.popb_responsequestionidentifier,ra.popb_parentresponse         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         where         rq.popb_name in ('Delimiter')         ) x3  on r.popb_responsesid=x3.popb_parentresponse and right(x1.popb_responsequestionidentifier,1)=RIGHT(x3.popb_responsequestionidentifier,1) inner join (     select ra.popb_name 'answer',rq.popb_name 'question',rq.popb_responsequestionidentifier,ra.popb_parentresponse         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         where         rq.popb_name in ('File Encoding')         ) x4  on r.popb_responsesid=x4.popb_parentresponse and right(x1.popb_responsequestionidentifier,1)=RIGHT(x4.popb_responsequestionidentifier,1) left join (     select ra.popb_name 'answer',rq.popb_name 'question',rq.popb_responsequestionidentifier,ra.popb_parentresponse         from  popb_responseanswer ra with (nolock)          inner join popb_responsequestion rq (nolock) on ra.popb_responsequestion=rq.popb_responsequestionId         where         rq.popb_name in ('Merge Contacts or Append Attributes')         ) x5  on r.popb_responsesid=x5.popb_parentresponse and right(x1.popb_responsequestionidentifier,1)=RIGHT(x5.popb_responsequestionidentifier,1) where x1.popb_processenddate is null and x1.statuscode='777250002' and popb_responsesid='@{pipeline().parameters.ResponseID}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "File_HealthCheck",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "FileCopy_Blob_To_Raw",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-healthcheck-validation",
                            "baseParameters": {
                                "FileName": {
                                    "value": "@toLower(pipeline().parameters.OriginalFilename)",
                                    "type": "Expression"
                                },
                                "adlsName": {
                                    "value": "@pipeline().parameters.adlsName",
                                    "type": "Expression"
                                },
                                "blobpath": "blob",
                                "containerName": {
                                    "value": "@pipeline().parameters.ContainerName",
                                    "type": "Expression"
                                },
                                "mountPath": "/mnt/datalanding/",
                                "rawpath": {
                                    "value": "@concat('raw/',split(pipeline().parameters.PurposeName,' ')[0],'/',pipeline().parameters.PurposeName,'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/', activity('Get_AccountID').output.firstRow.AccountName)\n",
                                    "type": "Expression"
                                },
                                "responseid": {
                                    "value": "@pipeline().parameters.ResponseID",
                                    "type": "Expression"
                                },
                                "source": "Client Portal",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "purposeName": {
                                    "value": "@pipeline().parameters.PurposeName",
                                    "type": "Expression"
                                },
                                "categoryName": {
                                    "value": "@split(pipeline().parameters.PurposeName,' ')[0]",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email - Filecopy failed Blob to raw",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "FileCopy_Blob_To_Raw",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"Email - Filecopy failed Blob to raw\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"Email - Filecopy failed Blob to raw\",\n\"Filename\":\"@{toLower(pipeline().parameters.OriginalFilename)}\",\n\"Filepath\" : \"@{concat(pipeline().parameters.adlsName,'/', variables('ResponseId'),'/',variables('ResponseId'))}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Copy Activity Failed",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "FileCopy_Blob_To_Raw",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "107",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "\"Copy File from SFTP to ADLS Raw Folder\"",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "FileCopy_Blob_To_Raw",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "File_complete_metadata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_getFilesBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "responseId": {
                                        "value": "@pipeline().parameters.ResponseID\n",
                                        "type": "Expression"
                                    },
                                    "filename": {
                                        "value": "@toLower(pipeline().parameters.OriginalFilename)",
                                        "type": "Expression"
                                    },
                                    "blobname": {
                                        "value": "@pipeline().parameters.blobname",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_adls_output",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "FilePath": {
                                        "value": "@concat('raw/',split(pipeline().parameters.PurposeName,' ')[0],'/',pipeline().parameters.PurposeName,'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/', activity('Get_AccountID').output.firstRow.AccountName)",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@toLower(pipeline().parameters.OriginalFilename)",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "FileValidation",
                        "description": "FileValidation to compare the rows read and rows written from Blob to ADLS and check file size greater than 1 byte",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "File Rename",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('File_HealthCheck').output.runOutput[0],0)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "RejectFile",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "Delete file from raw folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "File is Invalid",
                                        "errorCode": "202"
                                    }
                                },
                                {
                                    "name": "Email - Filecopy failed raw to reject folder",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "File Audit raw to reject",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@pipeline().parameters.EmailFailure",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"Filecopy failed raw to reject folder\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"Email - Filecopy failed raw to reject folder\",\n\"Filename\": \"@{variables('OriginalFileName')}\",\n\"Filepath\": \"@{concat(pipeline().parameters.ContainerName,'/',concat(pipeline().parameters.rawFilePath,'/',pipeline().parameters.RejectPath))}\",\n\"Source row count\": \"0\",\n\"Destination row count\":\"0\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "File Audit raw to reject",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "File status update_reject",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "104",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@variables('ResponseId')",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@activity('File_Metadata_Details').output.firstrow.popb_fileuploadmappingId",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@pipeline().parameters.PurposeName",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@activity('Get_AccountID').output.firstRow.AccountName",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "rejected",
                                            "status": "Copied In reject folder",
                                            "row_count": {
                                                "value": "0",
                                                "type": "Expression"
                                            },
                                            "rejected_row": "0",
                                            "error_description": {
                                                "value": "''",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Copy_Raw_to_Reject",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_FilesToRename",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Containername": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "Filepath": {
                                                    "value": "@concat('raw/',split(variables('PurposeIdname'),' ')[0],'/',variables('PurposeIdname'),'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/', activity('Get_AccountID').output.firstRow.AccountName)",
                                                    "type": "Expression"
                                                },
                                                "Filename": {
                                                    "value": "@variables('OriginalFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_FilesToRename",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Containername": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "Filepath": {
                                                    "value": "@concat(pipeline().parameters.rawFilePath,'/',pipeline().parameters.RejectPath)",
                                                    "type": "Expression"
                                                },
                                                "Filename": {
                                                    "value": "@variables('OriginalFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Delete file from raw folder",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "Email - Filecopy failed raw to reject folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_FilesToRename",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Containername": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "Filepath": {
                                                    "value": "@concat('raw/',split(variables('PurposeIdname'),' ')[0],'/',variables('PurposeIdname'),'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/', activity('Get_AccountID').output.firstRow.AccountName)",
                                                    "type": "Expression"
                                                },
                                                "Filename": {
                                                    "value": "@variables('OriginalFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                },
                                {
                                    "name": "end_etl_audit_reject_file",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_Raw_to_Reject",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "104",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": {
                                                "value": "@pipeline().parameters.Pipeline_Error_Status",
                                                "type": "Expression"
                                            },
                                            "error_description": {
                                                "value": "Invalid File",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "File status update_reject",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_Raw_to_Reject",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "select popb_fileuploadmappingid,777250005 as statuscode,0 as statecode from popb_fileuploadmappingBase where popb_responseid='@{variables('ResponseId')}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "DynamicsCrmSink",
                                            "writeBatchSize": 10,
                                            "writeBehavior": "upsert"
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "popb_fileuploadmappingid",
                                                        "type": "Guid",
                                                        "physicalType": "uniqueidentifier"
                                                    },
                                                    "sink": {
                                                        "name": "popb_fileuploadmappingid",
                                                        "type": "Guid"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "statecode",
                                                        "type": "String",
                                                        "physicalType": "varchar"
                                                    },
                                                    "sink": {
                                                        "name": "statecode",
                                                        "type": "Int32"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "statuscode",
                                                        "type": "String",
                                                        "physicalType": "varchar"
                                                    },
                                                    "sink": {
                                                        "name": "statuscode",
                                                        "type": "Int32"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_appboostCRM_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                },
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_Fileuploadmapping",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "File Audit raw to validated",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_Raw_to_Validated",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "102",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@variables('ResponseID')",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@variables('FileUploadMappingID')",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@pipeline().parameters.PurposeName",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@activity('Get_AccountID').output.firstRow.AccountName",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "validated",
                                            "status": "Copied In validated Folder",
                                            "row_count": {
                                                "value": "@string(activity('File_HealthCheck').output.runOutput[0])",
                                                "type": "Expression"
                                            },
                                            "rejected_row": "0",
                                            "error_description": {
                                                "value": "''",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Copy_Raw_to_Validated",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_FilesToRename",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Containername": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "Filepath": {
                                                    "value": "@concat('raw/',split(pipeline().parameters.PurposeName,' ')[0],'/',pipeline().parameters.PurposeName,'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/', activity('Get_AccountID').output.firstRow.AccountName)",
                                                    "type": "Expression"
                                                },
                                                "Filename": {
                                                    "value": "@toLower(pipeline().parameters.OriginalFilename)",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_output",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "@pipeline().parameters.ContainerName",
                                                "FilePath": {
                                                    "value": "@concat(pipeline().parameters.rawFilePath,'/',pipeline().parameters.ValidatePath)",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@toLower(pipeline().parameters.OriginalFilename)",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "File Rename",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "File Audit Blob to raw",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ModifiedName",
                            "value": {
                                "value": "@string(formatDateTime(convertTimeZone(utcnow(),'UTC','Eastern Standard Time'),'yyyyMMddHHmmssffff'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "File Audit Blob to raw",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "File_HealthCheck",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "101",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.ResponseID",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('File_Metadata_Details').output.firstrow.popb_fileuploadmappingId",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.PurposeName",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('Get_AccountID').output.firstRow.AccountName",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Raw",
                                "status": "Copied In Raw Folder",
                                "row_count": {
                                    "value": "@string(activity('File_HealthCheck').output.runOutput[0])",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "error_description": {
                                    "value": "''",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Delete file from validated folder",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "File_Copy_Validated_EM_Inbound",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_FilesToRename",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Containername": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "Filepath": {
                                        "value": "@concat(pipeline().parameters.rawFilePath,'/',pipeline().parameters.ValidatePath)\n",
                                        "type": "Expression"
                                    },
                                    "Filename": {
                                        "value": "@toLower(pipeline().parameters.OriginalFilename)",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "Email - Filecopy failed validated to EM_inbound",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "File_Copy_Validated_EM_Inbound",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"Filecopy failed validated to EM_inbound\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"Email - Filecopy failed validated to EM_inbound\",\n\"Filename\":\"@{toLower(pipeline().parameters.OriginalFilename)}\",\n\"Filepath\":\"@{concat( pipeline().parameters.ContainerName,'/',concat(pipeline().parameters.rawFilePath,'/',pipeline().parameters.ValidatePath))}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "File Audit validated to em_inbound",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "File_Copy_Validated_EM_Inbound",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "103",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.ResponseID",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('File_Metadata_Details').output.firstrow.popb_fileuploadmappingId",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.PurposeName",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('Get_AccountID').output.firstRow.AccountName",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "em_inbound",
                                "status": "Copied In em_inbound folder",
                                "row_count": {
                                    "value": "@string(activity('File_HealthCheck').output.runOutput[0])",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "error_description": {
                                    "value": "''",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File Audit validated to em_inbound failed",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "File_Copy_Validated_EM_Inbound",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "104",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.ResponseID",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('File_Metadata_Details').output.firstrow.popb_fileuploadmappingId",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.PurposeName",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('Get_AccountID').output.firstRow.AccountName",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "em_inbound",
                                "status": "Copy from validated to em_inbound folder failed",
                                "row_count": "0",
                                "rejected_row": "0",
                                "error_description": {
                                    "value": "''",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File Metadata Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "File_Copy_Validated_EM_Inbound",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-metadata-audit",
                            "baseParameters": {
                                "response_id": {
                                    "value": "@pipeline().parameters.ResponseID",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('File_Metadata_Details').output.firstrow.popb_fileuploadmappingId",
                                    "type": "Expression"
                                },
                                "file_source": "Client Portal",
                                "file_purpose": {
                                    "value": "@split(pipeline().parameters.PurposeName,' ')[0]\n",
                                    "type": "Expression"
                                },
                                "purpose_name": {
                                    "value": "@pipeline().parameters.PurposeName",
                                    "type": "Expression"
                                },
                                "original_filename": {
                                    "value": "@toLower(pipeline().parameters.OriginalFilename)",
                                    "type": "Expression"
                                },
                                "modified_filename": {
                                    "value": "@replace(concat(activity('File_Metadata_Details').output.firstRow.popb_purposeidname,'_',activity('File_Metadata_Details').output.firstRow.po_institutionidname,'_',variables('ModifiedName'),'.csv'),' ','')",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('Get_AccountID').output.firstRow.AccountName",
                                    "type": "Expression"
                                },
                                "account_id": {
                                    "value": "@activity('Get_AccountID').output.firstRow.AccountId",
                                    "type": "Expression"
                                },
                                "file_load_type": "Single",
                                "record_count": {
                                    "value": "@string(activity('File_HealthCheck').output.runOutput[0])",
                                    "type": "Expression"
                                },
                                "file_size_kb": {
                                    "value": "0",
                                    "type": "Expression"
                                },
                                "file_encoding": {
                                    "value": "@string(activity('File_complete_metadata').output.firstRow.FileEncoding)",
                                    "type": "Expression"
                                },
                                "file_format": {
                                    "value": "csv",
                                    "type": "Expression"
                                },
                                "delimiter": {
                                    "value": "@string(activity('File_complete_metadata').output.firstRow.Delimiter)",
                                    "type": "Expression"
                                },
                                "fiscal_yr": {
                                    "value": "2022",
                                    "type": "Expression"
                                },
                                "fiscal_year_month": {
                                    "value": "@string(activity('Get_AccountID').output.firstRow.fiscalMonth)\n",
                                    "type": "Expression"
                                },
                                "schema_json": {
                                    "value": "@string(activity('File_Metadata_Details').output.firstRow.popb_data)",
                                    "type": "Expression"
                                },
                                "rules_json": {
                                    "value": "''",
                                    "type": "Expression"
                                },
                                "file_upload_datetime": {
                                    "value": "@utcNow()",
                                    "type": "Expression"
                                },
                                "received_datetime": {
                                    "value": "@utcNow()",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File_Copy_Validated_EM_Inbound",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "FileValidation",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_FilesToRename",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Containername": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "Filepath": {
                                        "value": "@concat(pipeline().parameters.rawFilePath,'/',pipeline().parameters.ValidatePath)",
                                        "type": "Expression"
                                    },
                                    "Filename": {
                                        "value": "@toLower(pipeline().parameters.OriginalFilename)",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_adls_output",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "FilePath": {
                                        "value": "@concat(pipeline().parameters.Inbound,'/',variables('PurposeIdname'),'/',replace(concat(activity('File_Metadata_Details').output.firstRow.popb_purposeidname,'_',activity('File_Metadata_Details').output.firstRow.po_institutionidname,'_',variables('ModifiedName'),'.csv'),' ',''))",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@replace(concat(activity('File_Metadata_Details').output.firstRow.popb_purposeidname,'_',activity('File_Metadata_Details').output.firstRow.po_institutionidname,'_',variables('ModifiedName'),'.csv'),' ','')",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "File status update",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ConfigFiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select popb_fileuploadmappingid,777250008 as statuscode,0 as statecode from popb_fileuploadmappingBase where popb_responseid='@{variables('ResponseId')}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DynamicsCrmSink",
                                "writeBatchSize": 10,
                                "writeBehavior": "upsert"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "popb_fileuploadmappingid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "popb_fileuploadmappingid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "statecode",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "statecode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "statuscode",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "statuscode",
                                            "type": "Int32"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_fileuploadmappingBase",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_Fileuploadmapping",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "ConfigFiles",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "File Metadata Audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Delete file from validated folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-config-schema",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "PurposeName": {
                                    "value": "@variables('PurposeIdname')",
                                    "type": "Expression"
                                },
                                "AccountID": {
                                    "value": "@activity('Get_AccountID').output.firstrow.AccountID",
                                    "type": "Expression"
                                },
                                "ResponseID": {
                                    "value": "@variables('ResponseId')",
                                    "type": "Expression"
                                },
                                "FilePath": {
                                    "value": "@concat(pipeline().parameters.Inbound,'/',variables('PurposeIdname'),'/',replace(concat(activity('File_Metadata_Details').output.firstRow.popb_purposeidname,'_',activity('File_Metadata_Details').output.firstRow.po_institutionidname,'_',variables('ModifiedName'),'.csv'),' ',''))",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "Containername": {
                                    "value": "@pipeline().parameters.ContainerName",
                                    "type": "Expression"
                                },
                                "SchemaFilename": {
                                    "value": "@pipeline().parameters.schemaFilename",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.adlsName",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File_null_value_check",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "ConfigFiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-healthcheck-log",
                            "baseParameters": {
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('Get_AccountID').output.firstRow.AccountName",
                                    "type": "Expression"
                                },
                                "adlsName": {
                                    "value": "@pipeline().parameters.adlsName",
                                    "type": "Expression"
                                },
                                "containerName": {
                                    "value": "@pipeline().parameters.ContainerName",
                                    "type": "Expression"
                                },
                                "rawpath": {
                                    "value": "@concat(pipeline().parameters.Inbound,'/',variables('PurposeIdname'),'/',replace(concat(activity('File_Metadata_Details').output.firstRow.popb_purposeidname,'_',activity('File_Metadata_Details').output.firstRow.po_institutionidname,'_',variables('ModifiedName'),'.csv'),' ',''))",
                                    "type": "Expression"
                                },
                                "FileName": {
                                    "value": "@concat(replace(concat(activity('File_Metadata_Details').output.firstRow.popb_purposeidname,'_',activity('File_Metadata_Details').output.firstRow.po_institutionidname,'_',variables('ModifiedName'),'.csv'),' ',''))",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@variables('FileUploadMappingID')",
                                    "type": "Expression"
                                },
                                "responseid": {
                                    "value": "@variables('ResponseID')",
                                    "type": "Expression"
                                },
                                "categoryName": {
                                    "value": "@split(variables('PurposeIdname'),' ')[0]",
                                    "type": "Expression"
                                },
                                "purposeName": {
                                    "value": "@toLower(variables('PurposeIdname'))",
                                    "type": "Expression"
                                },
                                "validation": "empty record check",
                                "schemaFilename": {
                                    "value": "@pipeline().parameters.schemaFilename",
                                    "type": "Expression"
                                },
                                "source": "Client Portal",
                                "mountPath": "/mnt/datalanding",
                                "delimiter": {
                                    "value": "@string(activity('File_complete_metadata').output.firstRow.Delimiter)",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email - Client portal to ADLS",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "End ETL Audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailSuccess",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"diafplus@ruffalonl.com;SmartData@ruffalonl.com;yashika.tingley@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"File Ingestion Client portal to ADLS Successful!\",\n\"UploadedFilename\"  : \"@{variables('OriginalFileName')}\",\n\"Filename\":\"@{replace(concat(activity('File_Metadata_Details').output.firstRow.popb_purposeidname,'_',activity('File_Metadata_Details').output.firstRow.po_institutionidname,'_',variables('ModifiedName'),'.csv'),' ','')}\",\n\"Filepath\":\"@{concat(pipeline().parameters.ContainerName,'/',concat(pipeline().parameters.Inbound,'/',variables('PurposeIdname'),'/',replace(concat(activity('File_Metadata_Details').output.firstRow.popb_purposeidname,'_',activity('File_Metadata_Details').output.firstRow.po_institutionidname,'_',variables('ModifiedName'),'.csv'),' ','')))}\",\n\"Source row count\":\"@{string(activity('File_HealthCheck').output.runOutput[0])}\",\n\"Destination row count\" :\"@{string(activity('File_HealthCheck').output.runOutput[0])}\",\n\"FileUploadedBy\"  : \"@{variables('FileUploadedBy')}\"\n}\n",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "End ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "File status update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "106",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "file copied from blob to em_inbound - Completed",
                                "error_description": {
                                    "value": "''",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email - Null value check",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "File_null_value_check",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailSuccess",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"File Null value check completed!\",\n\"UploadedFilename\"  : \"@{variables('OriginalFileName')}\",\n\"Filename\":\"@{replace(concat(activity('File_Metadata_Details').output.firstRow.popb_purposeidname,'_',activity('File_Metadata_Details').output.firstRow.po_institutionidname,'_',variables('ModifiedName'),'.csv'),' ','')}\",\n\"Filepath\":\"@{concat(pipeline().parameters.ContainerName,'/',concat(pipeline().parameters.Inbound,'/',variables('PurposeIdname'),'/',replace(concat(activity('File_Metadata_Details').output.firstRow.popb_purposeidname,'_',activity('File_Metadata_Details').output.firstRow.po_institutionidname,'_',variables('ModifiedName'),'.csv'),' ','')))}\",\n\"Source row count\":\"@{string(activity('File_HealthCheck').output.runOutput[0])}\",\n\"Destination row count\" :\"@{string(activity('File_HealthCheck').output.runOutput[0])}\",\n\"FileUploadedBy\"  : \"@{variables('FileUploadedBy')}\"\n}\n",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "File audit  - Metadata activity failed",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "File Metadata Audit",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "107",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "\"File audit  - Metadata activity failed\"",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File audit  - null value check failed",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "File_null_value_check",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "107",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "\"File audit  - null value check failed\"",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "FileUploadedBy",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileUploadedBy",
                            "value": {
                                "value": "@pipeline().parameters.FileUploadedBy",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ContainerName": {
                        "type": "string",
                        "defaultValue": "datalanding"
                    },
                    "rawFilePath": {
                        "type": "string",
                        "defaultValue": "raw"
                    },
                    "Audit_Type_Pipeline": {
                        "type": "string",
                        "defaultValue": "ETL"
                    },
                    "Audit_Type_File": {
                        "type": "string",
                        "defaultValue": "File"
                    },
                    "Pipeline_Start_Status": {
                        "type": "string",
                        "defaultValue": "Started"
                    },
                    "Pipeline_Complete_Status": {
                        "type": "string",
                        "defaultValue": "Successful"
                    },
                    "Pipeline_Error_Status": {
                        "type": "string",
                        "defaultValue": "Failed"
                    },
                    "File_Location_Status_Blob_to_Raw": {
                        "type": "string",
                        "defaultValue": "In Data Landing- Raw"
                    },
                    "File_Location_Status_Raw_to_Validated": {
                        "type": "string",
                        "defaultValue": "In Data Landing- Validated"
                    },
                    "File_Location_Status_Raw_to_Raw_archive": {
                        "type": "string",
                        "defaultValue": "In Data Landing- Archived"
                    },
                    "File_Location_Status_Raw_to_Reject": {
                        "type": "string",
                        "defaultValue": "In Data Landing- Rejected"
                    },
                    "File_Location_Status_Validated_to_EMInbound": {
                        "type": "string",
                        "defaultValue": "In Data Landing- EMInbound(Filerenamed)"
                    },
                    "File_Location_Status_Config_files_Copy": {
                        "type": "string",
                        "defaultValue": "In Data Landing- Config files generated"
                    },
                    "Area": {
                        "type": "string",
                        "defaultValue": "DataLanding"
                    },
                    "InsertBy": {
                        "type": "string",
                        "defaultValue": "ADF_User"
                    },
                    "ValidatePath": {
                        "type": "string",
                        "defaultValue": "validated"
                    },
                    "RejectPath": {
                        "type": "string",
                        "defaultValue": "rejected"
                    },
                    "Raw_Archived": {
                        "type": "string",
                        "defaultValue": "raw_archived"
                    },
                    "Inbound": {
                        "type": "string",
                        "defaultValue": "em_inbound"
                    },
                    "adlsName": {
                        "type": "string"
                    },
                    "schemaFilename": {
                        "type": "string",
                        "defaultValue": "Schema.csv"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "OriginalFilename": {
                        "type": "string"
                    },
                    "PurposeName": {
                        "type": "string"
                    },
                    "ResponseID": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "blobname": {
                        "type": "string"
                    },
                    "EmailSuccess": {
                        "type": "string"
                    },
                    "EmailFailure": {
                        "type": "string"
                    },
                    "FileUploadedBy": {
                        "type": "string"
                    }
                },
                "variables": {
                    "RowNumMatch": {
                        "type": "Boolean"
                    },
                    "ResponseId": {
                        "type": "String"
                    },
                    "OriginalFileName": {
                        "type": "String"
                    },
                    "Filerowcount": {
                        "type": "String"
                    },
                    "ModifiedName": {
                        "type": "String"
                    },
                    "PurposeIdname": {
                        "type": "String"
                    },
                    "FileUploadMappingID": {
                        "type": "String"
                    },
                    "InstitutionName": {
                        "type": "String"
                    },
                    "FileUploadedBy": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Datalanding/BlobtoADLS"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-21T18:01:44Z"
            },
            "dependsOn": []
        }
    ]
}