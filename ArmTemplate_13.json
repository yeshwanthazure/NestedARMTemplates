{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "RNLADFNDPPROD"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/pip_clientgoals')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load FQT DB CLient Goal Table from CRM",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "select cg.po_Account as \"AccountId\",acc.name as \"AccountName\",sm.value as \"Entry Term\"\n,sm1.value as \"AcademicYear\",cg.po_InqCountGoal,cg.po_AppCountGoal\n,cg.po_AdmCountGoal,cg.po_EnrCountGoal,cg.po_DepCountGoal,su.FullName as \"CreatedBy\"\n,cg.CreatedOn,su.FullName as \"ModifiedBy\",cg.ModifiedOn\nfrom dbo.po_clientgoaldetailsBase cg\nleft join dbo.AccountBase acc on acc.AccountId = cg.po_Account\nleft join dbo.StringMapBase sm on sm.AttributeValue = cg.po_EntryTerm and sm.AttributeName = 'po_EntryTerm'\nand sm.ObjectTypeCode = (select ObjectTypeCode from entityview where name = 'po_clientgoaldetails')\nleft join dbo.StringMapBase sm1 on sm1.AttributeValue = cg.po_AcademicYear and sm1.AttributeName = 'po_AcademicYear'\nand sm1.ObjectTypeCode = (select ObjectTypeCode from entityview where name = 'po_clientgoaldetails')\nleft join dbo.SystemUserBase su on su.SystemUserId=cg.CreatedBy\nleft join dbo.SystemUserBase su1 on su1.SystemUserId=cg.ModifiedBy",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "preCopyScript": "TRUNCATE TABLE [fqt].[ClientGoalDetails]",
                                "writeBehavior": "Insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "AccountId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "AccountId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "AccountName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Entry Term",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EntryTerm",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AcademicYear",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "AcademicYear",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_InqCountGoal",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "InqGoal",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AppCountGoal",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "AppGoal",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AdmCountGoal",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "AdmGoal",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_EnrCountGoal",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EnrGoal",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_DepCountGoal",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "DepGoal",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedBy",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "CreatedBy",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "CreatedDate",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedBy",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "LastUpdatedBy",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastUpdatedDate",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "dbo",
                                    "schemaname": "po_clientgoaldetailsBase",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "fqt",
                                    "schemaname": "ClientGoalDetails",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-01T03:03:40Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "DROP TABLE IF EXISTS #temp_PE\nSELECT DISTINCT (ROW_NUMBER() Over (Order by (select null))) % 7 rnk,c.source_key\n,c.LastName\n,a.Line1\n,a.Line2\n,a.City\n,a.StateOrProvince\n,a.PostalCode\n,c.AccountNumber\ninto #temp_PE\nFROM alignment.customer_address_base a \nJOIN alignment.contactbase c \nON a.source_key = c.source_key\nLeft Join config.Enrichment b on a.source_key = b.source_key \nWHERE c.pe_flag = 'DIA Approved'\nAND c.crm_flag =2\nAND a.md_flag in ('Enriched', 'ADS Referenced', 'No Enrichment', 'Not Enriched')\nAND b.source_key is null\n--and a.modified_fileName = 'EMScoring_DaltonStateCollege_202207261412123680.csv'\n\nInsert Into config.Enrichment\nSelect source_key,'Sequence' from #temp_PE\n\nSelect * from #temp_PE\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Audit_Update",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "--ContactBase Audit Update\nDROP TABLE IF EXISTS #temp\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #temp\nfrom alignment.contactbase a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #temp AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'contactbase'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\n--customer_address_base Audit Update\nDROP TABLE IF EXISTS #tempc\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #tempc\nfrom alignment.customer_address_base a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #tempc AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'customer_address_base'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\nSELECT 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "6 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('6 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('6 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP - Alignment History Sync",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Audit_Update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Update]",
                            "storedProcedureParameters": {
                                "Enrichment": {
                                    "value": "PacificEast",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-19T06:44:54Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-melissa-addressenrichment')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Melissa AccessKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT DISTINCT (ROW_NUMBER() Over (Order by (select null))) % 9 rnk\n,a.source_key,Line1,Line2,City,StateOrProvince,Country,PostalCode \nFROM alignment.customer_address_base a\njoin alignment.contactbase c\non a.source_key = c.source_key\nWHERE md_flag='DIA Approved'\nAND c.crm_flag = 2\n--and a.modified_fileName = 'EMScoring_DaltonStateCollege_202207261412123680.csv'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('1 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].City,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].AddressLine2,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].AddressLine1,''',','\n           ''',activity('1 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n          ''',concat(activity('1 Rank Melissa REST API').output.Records[0].PostalCode,activity('1 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Audit_Query-Data Enrichment",
                        "description": "Fetching details from customer_address_base for Audit insert",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "1 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "5 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "7 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "8 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "DROP TABLE IF EXISTS #temp\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,md_flag\nINTO #temp\nfrom alignment.customer_address_base a\n--where md_flag in ('Enriched','Not Enriched')\nwhere md_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,md_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #temp AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.md_flag\nWHEN MATCHED AND TARGET.Count_MD <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_MD = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_MD\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'customer_address_base'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.md_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'Melissa Pipeline');\n\nSELECT 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Melissa AccessKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.MelissaAccessKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "8 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,8)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "7 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,7 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "8 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "8 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('8 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "8 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "8 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "8 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('8 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('8 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('8 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('8 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('8 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('8 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',activity('8 Rank Melissa REST API').output.Records[0].City,''',','\n            ''',activity('8 Rank Melissa REST API').output.Records[0].AddressLine2,''',','\n            ''',activity('8 Rank Melissa REST API').output.Records[0].AddressLine1,''',','\n           ''',activity('8 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n          ''',concat(activity('8 Rank Melissa REST API').output.Records[0].PostalCode,activity('8 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "7 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "7 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('7 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "7 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "7 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "7 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('7 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('7 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('7 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('7 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('7 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('7 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',activity('7 Rank Melissa REST API').output.Records[0].City,''',','\n            ''',activity('7 Rank Melissa REST API').output.Records[0].AddressLine2,''',','\n            ''',activity('7 Rank Melissa REST API').output.Records[0].AddressLine1,''',','\n           ''',activity('7 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n          ''',concat(activity('7 Rank Melissa REST API').output.Records[0].PostalCode,activity('7 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "6 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "6 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('6 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].City,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].AddressLine2,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].AddressLine1,''',','\n           ''',activity('6 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n          ''',concat(activity('6 Rank Melissa REST API').output.Records[0].PostalCode,activity('6 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('5 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].City,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].AddressLine2,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].AddressLine1,''',','\n           ''',activity('5 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n          ''',concat(activity('5 Rank Melissa REST API').output.Records[0].PostalCode,activity('5 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('3 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].City,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].AddressLine2,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].AddressLine1,''',','\n           ''',activity('3 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n          ''',concat(activity('3 Rank Melissa REST API').output.Records[0].PostalCode,activity('3 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('2 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].City,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].AddressLine2,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].AddressLine1,''',','\n           ''',activity('2 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n          ''',concat(activity('2 Rank Melissa REST API').output.Records[0].PostalCode,activity('2 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('4 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].City,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].AddressLine2,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].AddressLine1,''',','\n           ''',activity('4 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n          ''',concat(activity('4 Rank Melissa REST API').output.Records[0].PostalCode,activity('4 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('0 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].City,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].AddressLine2,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].AddressLine1,''',','\n           ''',activity('0 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n          ''',concat(activity('0 Rank Melissa REST API').output.Records[0].PostalCode,activity('0 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP - Alignment History Sync",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Audit_Query-Data Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Update]",
                            "storedProcedureParameters": {
                                "Enrichment": {
                                    "value": "Melissa",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-19T06:44:54Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_DIA_Enrichment_Alignment_ADS_view1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_Alignment_ADS",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Copy_dia_usp_ADS_Reference_Log",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "Select \n c.source_key\n,c.FirstName\n,c.LastName\n,c.Telephone1\n,c.STUDENTID\n,c.EMailAddress1\n,c.Telephone2\n,c.BirthDate\n,a.Line1\n,a.Line2\n,a.City\n,a.StateOrProvince\n,a.PostalCode\n,a.Country\n,a.address_key\n,a.county_fips\n,a.County\n,a.Latitude\n,a.Longitude\n,a.ZIP\n,a.md_flag\n,a.md_received_date\n,c.pe_flag\n,c.pe_received_date\n,c.account_id as account_id \n,coalesce(c.accountNumber,a.accountNumber) as accountNumber\n,Coalesce(c.account_name,a.account_name) as account_name\n,a.modified_filename\nFROM alignment.customer_address_base a \nJOIN alignment.contactbase c \nON  a.response_id = c.response_id\nand a.source_key = c.source_key\nJoin audit.ADS_Reference_Log b\n--on b.modified_filename = c.modified_filename\non b.response_id = c.response_id\nWHERE (c.pe_flag = 'DIA Review'\nor a.pe_flag = 'DIA Review'\nor a.md_flag = 'DIA Review')\nand DE_Status = 'ADS_Review'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "preCopyScript": "Truncate table dia.PreStg_AlignmentDIAReview",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {},
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "dataenrichment/Staging_ADS"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "PreStg_AlignmentDIAReview",
                                    "schemaname": "dia",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "SP_ADS_Review_Comparision",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy_Alignment_ADS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dia].[usp_DIAReview_ADS_Comparison]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Copy_ADS_Alignment",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SP_ADS_Review_Comparision",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "Select * \r\nfrom dia.AlignmentADSReference \r\nwhere PE_ADS_Reference = 1 \r\nor MD_ADS_Reference = 1",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "Truncate table dia.PreStg_AlignmentADSReference",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "source_key",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "source_key",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FirstName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "FirstName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "LastName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Telephone1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "STUDENTID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "STUDENTID",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EMailAddress1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Telephone2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BirthDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "BirthDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Line1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Line1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Line2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Line2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "City",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "City",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StateOrProvince",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "StateOrProvince",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostalCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PostalCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Country",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Country",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "address_key",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "address_key",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "county_fips",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "county_fips",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Latitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "Latitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Longitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "Longitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ZIP",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ZIP",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Telephone1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Telephone1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Line1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Line1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Line2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Line2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_City",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_City",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_StateOrProvince",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_StateOrProvince",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Country",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Country",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_PostalCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_PostalCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Latitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "ADS_Latitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Longitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "ADS_Longitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentCustomerId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ParentCustomerId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "md_flag",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "md_flag",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "md_received_date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "md_received_date",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "pe_flag",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "pe_flag",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "pe_received_date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "pe_received_date",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "account_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "accountNumber",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "accountNumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "modified_filename",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "modified_filename",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PE_ADS_Reference",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "PE_ADS_Reference",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MD_ADS_Reference",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "MD_ADS_Reference",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_FirstName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_FirstName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_LastName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_LastName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_EMailAddress1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_EMailAddress1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_homephone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_homephone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_BirthDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "In_ADS_BirthDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Matched_Count",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Matched_Count",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Contact_Record_Count",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Contact_Record_Count",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Telephone2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Telephone2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "County",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "County",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_County",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_County",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_county_fips",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_county_fips",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "AlignmentADSReference",
                                    "schemaname": "dia",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "PreStg_AlignmentADSReference",
                                    "schemaname": "dia",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "SP-Update_ADS_referenced_data",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "usp_Insert_AlignmentADSReference",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Alignment_ADS_Sync]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Start ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "507",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "END ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP-Update_ADS_referenced_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "508",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Copy_dia_usp_ADS_Reference_Log",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('Copy_dia_usp_ADS_Reference_Log').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_Copy_ALGN_ADS",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Copy_Alignment_ADS",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('Copy_Alignment_ADS').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status_SP",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP_ADS_Review_Comparision",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('SP_ADS_Review_Comparision').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status_ADS_ALIGN",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Copy_ADS_Alignment",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('Copy_ADS_Alignment').Error.Message\n",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status_PreStg_Main",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "usp_Insert_AlignmentADSReference",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('usp_Insert_AlignmentADSReference').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status_ADS_reference",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP-Update_ADS_referenced_data",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('SP-Update_ADS_referenced_data').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "delete_PreStg_AlignmentADSReference",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "Copy_ADS_Alignment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "NonQuery",
                                    "text": "delete from dia.PreStg_AlignmentADSReference\r\nwhere Source_Key in (select Source_Key from dia.AlignmentADSReference)"
                                }
                            ]
                        }
                    },
                    {
                        "name": "SP- usp_Update_CRM_Batch_Processing",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Start ETL Audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Update_CRM_Batch_Processing]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status_CRM_Batch_Processing",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP- usp_Update_CRM_Batch_Processing",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('SP- usp_Update_CRM_Batch_Processing').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Copy_dia_usp_ADS_Reference_Log",
                        "description": "replaced by dia.usp_ADS_Reference_Log",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SP- usp_Update_CRM_Batch_Processing",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "Select Distinct  trim(a.response_id) response_id\n\t\t\t\t,a.mapping_id\n\t\t\t\t,a.Modified_Filename\n\t\t\t\t,cast(1 as bit) as ADS_Review \n\t\t\t\t,cast(0 as bit) as ADS_Reference\n\t\t\t\t,cast(0 as bit) as Enrichment\n\t\t\t\t,getdate() as insert_datetime\n\t\t\t\t,SYSTEM_USER as Insert_by\n\t\t\t\t,'ADS_Review' as DE_Status\nFROM alignment.customer_address_base a\njoin alignment.contactbase b\non a.response_id = b.response_id\nand a.source_key = b.source_key\nWHERE a.modified_fileName is not null\nand (\n--a.pe_flag = 'DIA Review'or \na.md_flag = 'DIA Review'\n)\nand b.crm_flag = 2\n--and a.modified_fileName in (Select modified_fileName from audit.File_Processing_Status where crm_flag = 2)\nand not exists \n(Select 'X' from dia.AlignmentADSReference t\n\twhere a.source_key = t.source_key)",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Modified_Filename",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "modified_filename",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Review",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "ADS_Review",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Reference",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "ADS_Reference",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Enrichment",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "Enrichment",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "insert_datetime",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "insert_datetime",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Insert_by",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Insert_by",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DE_Status",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "DE_Status",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "ADS_Reference_Log",
                                    "schemaname": "audit",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "usp_Insert_AlignmentADSReference",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "delete_PreStg_AlignmentADSReference",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dia].[usp_Insert_AlignmentADSReference]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "DIA"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-31T10:01:38Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-load-staging-to-alignment')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "for_each_staging_table",
                        "description": "for each staging table executing staging_to_historical_all notebook",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.staging_table_list",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 2,
                            "activities": [
                                {
                                    "name": "staging_to_historical_data_all",
                                    "description": "copy data from staging tables to historical_data_all",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/staging-To-Alignment/dbn-staging-to-historical-all",
                                        "baseParameters": {
                                            "staging_table_name": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.parent_runid",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            },
                                            "is_log_on": {
                                                "value": "@pipeline().parameters.is_log_on",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "fetch_response_id",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "for_each_staging_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select distinct RESPONSE_ID from staging.em_historical_data_all\nwhere ALIGNMENT_FLAG=0",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "em_historical_data_all",
                                    "schemaname": "staging",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "For each responseid",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "fetch_response_id",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('fetch_response_id').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "pip-load-historical-to-alignment",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-load-historical-to-alignment",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "response_id": {
                                                "value": "@item().RESPONSE_ID",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            },
                                            "is_log_on": {
                                                "value": "@pipeline().parameters.is_log_on",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "synapse_database_name": {
                                                "value": "@pipeline().parameters.synapse_database_name",
                                                "type": "Expression"
                                            },
                                            "synapse_server_name": {
                                                "value": "@pipeline().parameters.synapse_server_name",
                                                "type": "Expression"
                                            },
                                            "synapse_stg_storage": {
                                                "value": "@pipeline().parameters.synapse_stg_storage",
                                                "type": "Expression"
                                            },
                                            "crm_server_name": {
                                                "value": "@pipeline().parameters.crm_server_name",
                                                "type": "Expression"
                                            },
                                            "crm_database_name": {
                                                "value": "@pipeline().parameters.crm_database_name",
                                                "type": "Expression"
                                            },
                                            "parent_runid": {
                                                "value": "@pipeline().parameters.parent_runid",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "update_alignment_flag",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "pip-load-historical-to-alignment",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[staging].[sp_update_alignment_flag]",
                                        "storedProcedureParameters": {
                                            "response_id": {
                                                "value": {
                                                    "value": "@item().RESPONSE_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSqlDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "parent_runid": {
                        "type": "string"
                    },
                    "staging_table_list": {
                        "type": "array"
                    },
                    "database_name": {
                        "type": "string"
                    },
                    "is_log_on": {
                        "type": "string"
                    },
                    "server_name": {
                        "type": "string"
                    },
                    "synapse_database_name": {
                        "type": "string"
                    },
                    "synapse_server_name": {
                        "type": "string"
                    },
                    "synapse_stg_storage": {
                        "type": "string"
                    },
                    "crm_server_name": {
                        "type": "string"
                    },
                    "crm_database_name": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "staging-To-Alignment"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-29T11:04:07Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-dqe_data_enrichment_audit')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Data enrichment audit for MD_FLAG and PE_FLAG",
                "activities": [
                    {
                        "name": "dia_review_audit_md_pe_flag",
                        "description": "MD Flag & PE Flag audit for DIA review",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.02:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select sum(count_MD) count_MD,sum(count_PE) count_PE,response_id,mapping_id,account_name,modified_filename,\n'@{pipeline().parameters.staging_table}'  table_name,'Staging' process_layer,\n'DIA Review' flags,'DQE' placed_by,'Validation' actions_taken,\n'DQE Pipeline' insert_by  from\n(select sum(case when MD_FLAG ='DIA Review' then 1 else 0 end) count_MD,\nsum(case when PE_FLAG ='DIA Review' then 1 else 0 end) count_PE,\nresponse_id,mapping_id,account_name,modified_filename\nfrom @{pipeline().parameters.staging_table}\nwhere response_id = '@{pipeline().parameters.responseid}'\ngroup by response_id,mapping_id,account_name,modified_filename,MD_FLAG,PE_FLAG) a\ngroup by response_id,mapping_id,account_name,modified_filename",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "modified_filename",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "modified_fileName",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "table_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "table_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "process_layer",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "process_layer",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "count_MD",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "count_MD",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "count_PE",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "count_PE",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "flags",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "flags",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "placed_by",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "placed_by",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "actions_taken",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "actions_taken",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "em_scoring",
                                    "schemaname": "staging",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "data_enrichment",
                                    "schemaname": "audit",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "no_enrichment_audit_md_pe_flag",
                        "description": "MD Flag & PE Flag audit for No Enrichment",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "dia_review_audit_md_pe_flag",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.02:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select sum(count_MD) count_MD,sum(count_PE) count_PE,response_id,mapping_id,account_name,modified_filename,\n'@{pipeline().parameters.staging_table}' table_name,'Staging' process_layer,\n'No Enrichment' flags,'DQE' placed_by,'Validation' actions_taken,\n'DQE Pipeline' insert_by  from\n(select sum(case when MD_FLAG ='No Enrichment' then 1 else 0 end) count_MD,\nsum(case when PE_FLAG ='No Enrichment' then 1 else 0 end) count_PE,\nresponse_id,mapping_id,account_name,modified_filename\nfrom @{pipeline().parameters.staging_table}\nwhere response_id = '@{pipeline().parameters.responseid}'\ngroup by response_id,mapping_id,account_name,modified_filename,MD_FLAG,PE_FLAG) a\ngroup by response_id,mapping_id,account_name,modified_filename",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "modified_filename",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "modified_fileName",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "table_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "table_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "process_layer",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "process_layer",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "count_MD",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "count_MD",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "count_PE",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "count_PE",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "flags",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "flags",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "placed_by",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "placed_by",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "actions_taken",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "actions_taken",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "em_scoring",
                                    "schemaname": "staging",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "data_enrichment",
                                    "schemaname": "audit",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "responseid": {
                        "type": "string",
                        "defaultValue": "'9d5aaedf-f084-ec11-a81c-000d3ad37590'"
                    },
                    "purposename": {
                        "type": "string",
                        "defaultValue": "'EM Scoring'"
                    },
                    "staging_table": {
                        "type": "string",
                        "defaultValue": "em scoring"
                    },
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "DataTransformation"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-08T08:06:33Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-dqe_profiling_log')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQE profiling audit with error and warning count",
                "activities": [
                    {
                        "name": "error_count_update",
                        "description": "Error code audit",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.02:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "additionalColumns": [
                                    {
                                        "name": "stg_row_id",
                                        "value": {
                                            "value": "@guid()",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "select count(*) error_count,r.errorcode,r.operator,r.value1,r.errordescription,r.warningdescription,f.response_id,f.mapping_id,f.purpose_name,f.account_name from config.rules r\nJOIN @{pipeline().parameters.staging_table} e   ON e.error_code LIKE '%'+ r.errorcode +'%'\nor  e.warning_code LIKE '%'+ r.errorcode +'%'\nJoin audit.file_metadata f ON f.response_id = e.response_id\nand f.mapping_id = e.mapping_id\nwhere r.purposeName = '@{pipeline().parameters.purposename}'\nand e.response_id = '@{pipeline().parameters.responseid}'\ngroup by r.errorcode,r.operator,r.value1,r.warningcode,f.response_id,f.mapping_id,f.purpose_name,f.account_name,r.errordescription,r.warningdescription",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "char"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "char"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "purpose_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "purpose_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "value1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "column_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "operator",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "operator",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "errorcode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "error_code",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "error_count",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "error_count",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": {
                                        "value": "@pipeline().parameters.staging_table",
                                        "type": "Expression"
                                    },
                                    "schemaname": "staging",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "dqe_data_profiling_log",
                                    "schemaname": "audit",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "warning_count_update",
                        "description": "Warning Code audit",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "error_count_update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.02:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "additionalColumns": [
                                    {
                                        "name": "stg_row_id",
                                        "value": {
                                            "value": "@guid()",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "select count(*) warning_count,r.operator,r.value1,r.warningcode,r.errordescription,r.warningdescription,f.response_id,f.mapping_id,f.purpose_name,f.account_name from config.rules r\nJOIN @{pipeline().parameters.staging_table} e   ON  e.warning_code LIKE '%'+ r.warningcode +'%'\nJoin audit.file_metadata f ON f.response_id = e.response_id\nand f.mapping_id = e.mapping_id\nwhere r.purposeName = '@{pipeline().parameters.purposename}'\nand e.response_id = '@{pipeline().parameters.responseid}'\ngroup by r.errorcode,r.operator,r.value1,r.warningcode,f.response_id,f.mapping_id,f.purpose_name,f.account_name,r.errordescription,r.warningdescription",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "char"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "char"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "purpose_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "purpose_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "value1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "column_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "operator",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "operator",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "warningcode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "warning_code",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "warning_count",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "warning_count",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": {
                                        "value": "@pipeline().parameters.staging_table",
                                        "type": "Expression"
                                    },
                                    "schemaname": "staging",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "dqe_data_profiling_log",
                                    "schemaname": "audit",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "responseid": {
                        "type": "string",
                        "defaultValue": "'9d5aaedf-f084-ec11-a81c-000d3ad37590'"
                    },
                    "purposename": {
                        "type": "string",
                        "defaultValue": "'EM Scoring'"
                    },
                    "staging_table": {
                        "type": "string",
                        "defaultValue": "em scoring"
                    },
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    }
                },
                "variables": {
                    "responseid": {
                        "type": "String"
                    },
                    "purposename": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "DataTransformation"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-12T08:57:11Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-inside-for-each-entity-crmsynapse-historical-load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From CRM to ADLS",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@concat(\r\n\tif(\r\n\t\tequals(toUpper(pipeline().parameters.SrcObjectType),'QUERY'),\r\n\t\tif(\r\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\r\n\t\t\t\tpipeline().parameters.SrcObjectName,\r\n\t\t\t\tif(\r\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\r\n\t\t\t\t\tpipeline().parameters.SrcObjectName,\r\n\t\t\t\t\tconcat(pipeline().parameters.SrcObjectName, ' AND ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\r\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\r\n\t\t\t\t\t,'''',')'\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t),\r\n\t\tconcat('SELECT * FROM ',pipeline().parameters.SrcObjectName,\r\n\t\t\tif(\r\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\r\n\t\t\t\t'',\r\n\t\t\t\tif(\r\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\r\n\t\t\t\t\t'',\r\n\t\t\t\t\tconcat(' WITH(NOLOCK) WHERE ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\r\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\r\n\t\t\t\t\t,'''',')'\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "06:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "writeBatchSize": 1000000,
                                "preCopyScript": {
                                    "value": "@{concat('truncate table ',pipeline().parameters.stg_table_name)}",
                                    "type": "Expression"
                                },
                                "allowCopyCommand": true,
                                "copyCommandSettings": {},
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmtoads/temp/Synapse_data",
                                "enableCompression": true
                            },
                            "parallelCopies": 100
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_crm_Dynamic10",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": {
                                        "value": "@pipeline().parameters.Schema",
                                        "type": "Expression"
                                    },
                                    "crm_table": {
                                        "value": "@pipeline().parameters.SourceTableName",
                                        "type": "Expression"
                                    },
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vaulturl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": {
                                        "value": "@pipeline().parameters.stg_table_name",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "UPDATE SUCCESS",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ExecuteSP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get CDC date value",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[sp_update_load_status_crmtoads]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "S",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@formatDateTime(string(activity('Get CDC date value').output.firstRow.maxDeltaDate))",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_FAILURE",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ExecuteSP",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[sp_update_load_status_crmtoads]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "F",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get CDC date value",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CDC_Source_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@variables('CDC_Source_Query')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": {
                                        "value": "@pipeline().parameters.stg_table_name",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecuteSP",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CDC_Source_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('DECLARE @row_count int, @reject_row  int exec sp_stag_to_ads ''',pipeline().parameters.stg_table_name,''',''',pipeline().parameters.DestinationTableName,''',''',pipeline().parameters.PrimaryKey,''',''',pipeline().parameters.CDC_Key,''', @row_count OUTPUT, @reject_row OUTPUT SELECT @row_count as row_count,@reject_row as reject_row')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": ".",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Data-profliing-for-crm-to-crmsynapse",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE SUCCESS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-insert-crm-ads-crm-data-profiling-log",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "log_type": "CRM_to_ADS",
                                "data_flow": "CRM to ADS",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_run_id",
                                    "type": "Expression"
                                },
                                "source_table_name": {
                                    "value": "@pipeline().parameters.SourceTableName",
                                    "type": "Expression"
                                },
                                "target_table_name": {
                                    "value": "@concat(pipeline().parameters.Schema,'.',pipeline().parameters.DestinationTableName)",
                                    "type": "Expression"
                                },
                                "source_row_count": {
                                    "value": "@string(activity('From CRM to ADLS').output.rowsRead)",
                                    "type": "Expression"
                                },
                                "target_row_count": {
                                    "value": "@string(activity('ExecuteSP').output.firstRow.row_count)",
                                    "type": "Expression"
                                },
                                "rejected_rows": {
                                    "value": "@string(activity('ExecuteSP').output.firstRow.reject_row)",
                                    "type": "Expression"
                                },
                                "database_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "load_start_date": {
                                    "value": "@pipeline().parameters.Load_Start_Date",
                                    "type": "Expression"
                                },
                                "load_end_date": {
                                    "value": "@string(utcnow())",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "CDC_Source_Query",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "From CRM to ADLS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "CDC_Source_Query",
                            "value": {
                                "value": "@if(equals(pipeline().parameters.SourceDeltaColumn,''),concat('select ','''1900-01-01''',' as maxDeltaDate'),concat('select isnull(max(',pipeline().parameters.SourceDeltaColumn,'),','''19000101''',') as maxDeltaDate from dbo.',pipeline().parameters.stg_table_name))",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "DestinationTableName": {
                        "type": "string"
                    },
                    "stg_table_name": {
                        "type": "string"
                    },
                    "FilePath": {
                        "type": "string"
                    },
                    "PrimaryKey": {
                        "type": "string"
                    },
                    "CDC_Key": {
                        "type": "string"
                    },
                    "Schema": {
                        "type": "string"
                    },
                    "SourceTableName": {
                        "type": "string"
                    },
                    "SrcObjectType": {
                        "type": "string"
                    },
                    "LoadType": {
                        "type": "string"
                    },
                    "SourceDeltaColumn": {
                        "type": "string"
                    },
                    "LastSuccessDate": {
                        "type": "string"
                    },
                    "SrcObjectName": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "Load_Start_Date": {
                        "type": "string"
                    },
                    "parent_run_id": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "variables": {
                    "Delta_Load_Date": {
                        "type": "String"
                    },
                    "PrimaryKey": {
                        "type": "String"
                    },
                    "CDC_Source_Query": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "crm_To_Crmsynapse_Historical"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-22T14:36:17Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-copy-config-from-CRM-to-azSQL')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Rules_CSV",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select distinct\npopb_purposefieldrule.popb_purposefieldruleId 'id',\npopb_purposefield.popb_schemaname  'schemaname',\nStringMap.Value 'scope',\npopb_value.popb_value 'operator',\npopb_value1 'value1',\npopb_value2 'value2',\npopb_resultfield1 'resultfield',\npopb_resultfield1_value 'resultfieldvalue',\npopb_errorcode 'errorcode',\npopb_warningcode 'warningcode',\npopb_priority 'priority',\npopb_purposefield.popb_purposeidName 'purposeidName',\npopb_purposefieldrule.popb_name 'name',\npopb_errordescription 'errordescription',\npopb_warningdescription 'warningdescription'\nfrom popb_purposefieldrule with (nolock)\ninner join popb_purposefield with (nolock) on popb_purposefield.popb_purposefieldId=popb_purposefieldrule.popb_purposefieldid \ninner join StringMap with (nolock) on StringMap.AttributeName='popb_sçope' and StringMap.AttributeValue=popb_purposefieldrule.popb_scope\ninner join popb_value with (nolock) on popb_purposefieldrule.popb_operator=popb_value.popb_valueId ",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table config.rules",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "id",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "schemaname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "schemaname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "scope",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "scope",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "operator",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "operator",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "value1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "value1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "value2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "value2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "resultfield",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "resultfield",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "resultfieldvalue",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "resultfieldvalue",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "errorcode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "errorcode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "warningcode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "warningcode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "priority",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "priority",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "purposeidName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "purposeName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "errordescription",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "errordescription",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "warningdescription",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "warningdescription",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Rules",
                                    "schemaname": "config",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_sql_db_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Lookup_CSV",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Rules_CSV",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select po_type, po_clientcode, po_clientvalue, po_RNLCode, po_RNLValue, AccountName, [AccountId]\nfrom (\n select po_type, po_clientcode, po_clientvalue, po_RNLCode, po_RNLValue, AccountName, [AccountId],\n  ROW_NUMBER() OVER (PARTITION BY po_type, po_clientcode,[AccountId] ORDER BY [CodePriority], po_RNLCode) AS rn\n from \n (\n  SELECT REPLACE(convert(nvarchar,b.value), ',', '--') [po_type],REPLACE([po_clientcode],',','--') [po_clientcode],\n  REPLACE([po_clientvalue],',','--') [po_clientvalue],REPLACE([po_RNLCode],',','--') [po_RNLCode],REPLACE([po_RNLValue],',','--') [po_RNLValue]  \n  , 1 [CodePriority], REPLACE(ab.Name,',','--') [AccountName], REPLACE(ab.AccountId,',','--') [AccountId]\n  FROM [po_institutioncrossreferenceBase] a\n  inner join [stringmap] b on b.attributename='po_type' and b.attributevalue=a.po_type \n  inner join AccountBase ab on ab.AccountId=a.po_Accountid\n  WHERE a.statecode=0\n   \n  union  \n  select 'major_value' [po_type],  REPLACE(po_institutionmajorcode,',','--') [po_clientcode] ,REPLACE(po_institutionmajorcode,',','--')[po_clientvalue],REPLACE(lkp.po_Code,',','--') [po_RNLCode],REPLACE(po_lookupidname,',','--') [po_RNLValue]\n  , 3 [CodePriority], REPLACE(ab.Name,',','--') [AccountName], REPLACE(ab.AccountId,',','--') [AccountId]\n  from [po_majordegree] md\n  inner join po_lookup lkp on lkp.po_lookupId=md.po_lookupid\n  inner join [stringmap] b on b.attributename='po_type' and b.attributevalue=lkp.po_type and objecttypecode='10095'\n  inner join AccountBase ab on ab.AccountId=md.po_InstitutionId\n  where po_institutionmajorcode IS NOT NULL\n  union  \n  SELECT REPLACE(convert(nvarchar,b.value),',','--') [po_type],REPLACE([po_clientcode],',','--') [po_clientcode],REPLACE([po_clientvalue],',','--') [po_clientvalue],\n  REPLACE([po_RNLCode],',','--') [po_RNLCode],REPLACE([po_RNLValue],',','--') [po_RNLValue] \n  , 2 [CodePriority], REPLACE(ab.Name,',','--') [AccountName], REPLACE(ab.AccountId,',','--') [AccountId]\n  FROM [po_institutioncrossreferenceBase] a\n  inner join [stringmap] b on b.attributename='po_type' and b.attributevalue=a.po_type and objecttypecode='10158'\n  inner join AccountBase ab on ab.AccountId=a.po_Accountid\n  WHERE a.statecode=0\n \n  union \n  select 'major_value' [po_type],  REPLACE(po_institutionmajorcode,',','--') [po_clientcode] ,REPLACE(po_institutionmajorcode,',','--')[po_clientvalue],REPLACE(lkp.po_Code,',','--') [po_RNLCode],REPLACE(po_lookupidname,',','--') [po_RNLValue]\n  , 4 [CodePriority],  REPLACE(ab.Name,',','--') [AccountName], REPLACE(ab.AccountId,',','--') [AccountId]\n  from [po_majordegree] md\n  inner join po_lookup lkp on lkp.po_lookupId=md.po_lookupid\n  inner join [stringmap] b on b.attributename='po_type' and b.attributevalue=lkp.po_type and objecttypecode='10095'\n  inner join AccountBase ab on ab.AccountId=md.po_InstitutionId\n  where po_institutionmajorcode IS NOT NULL\n  \n ) sub\n) sub \nwhere rn = 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table config.Lookup",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "po_type",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_type",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_clientcode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_clientcode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_clientvalue",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_clientvalue",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_RNLCode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_RNLCode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_RNLValue",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_RNLValue",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountId",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "accountid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "accountname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Lookup",
                                    "schemaname": "config",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_sql_db_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    }
                },
                "folder": {
                    "name": "Datalanding"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-15T15:38:55Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-matrixdetail')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Updating this table from CRM to Azure SQL for AFP Calculation",
                "activities": [
                    {
                        "name": "po_matrixdetail_crm_to_azsql",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select po_scorematrixidName,po_matrixdetailtypeidName,po_matrixdetailId,po_result,po_resultmessage,po_scorematrixid,po_xaxis,po_xaxismax,po_xaxisname,po_yaxis,po_yaxismax,po_yaxisname,po_zaxis,po_zaxismax,po_zaxisname,po_matrixdetailtypeid FROM [po_matrixdetail]",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "po_scorematrixidName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "scorematrixidName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_matrixdetailtypeidName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "matrixdetailtypeidName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_matrixdetailId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "matrixdetailId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_result",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "result",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_resultmessage",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "resultmessage",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_scorematrixid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "scorematrixid",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_xaxis",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "xaxis",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_xaxismax",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "xaxismax",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_xaxisname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "xaxisname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_yaxis",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "yaxis",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_yaxismax",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "yaxismax",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_yaxisname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "yaxisname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_zaxis",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "zaxis",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_zaxismax",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "zaxismax",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_zaxisname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "zaxisname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_matrixdetailtypeid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "matrixdetailtypeid",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "matrixdetail",
                                    "schemaname": "lkp",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_sql_db_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.26.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAPQA_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    }
                },
                "folder": {
                    "name": "Lookup_tables_CRM_to_Azure_SQL"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-12T12:36:56Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-dqe_data_enrichment_audit_duplicate')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Data enrichment audit for MD_FLAG and PE_FLAG",
                "activities": [
                    {
                        "name": "dia_review_audit_md_pe_flag",
                        "description": "MD Flag & PE Flag audit for DIA review",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select sum(count_MD) count_MD,sum(count_PE) count_PE,response_id,mapping_id,account_name,modified_filename,\n'@{pipeline().parameters.staging_table}'  table_name,'Staging' process_layer,\n'DIA Review' flags,'DQE' placed_by,'Validation' actions_taken,\n'DQE Pipeline' insert_by  from\n(select sum(case when MD_FLAG ='DIA Review' then 1 else 0 end) count_MD,\nsum(case when PE_FLAG ='DIA Review' then 1 else 0 end) count_PE,\nresponse_id,mapping_id,account_name,modified_filename\nfrom @{pipeline().parameters.staging_table}\nwhere response_id = '@{pipeline().parameters.responseid}'\ngroup by response_id,mapping_id,account_name,modified_filename,MD_FLAG,PE_FLAG) a\ngroup by response_id,mapping_id,account_name,modified_filename",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "modified_filename",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "modified_fileName",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "table_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "table_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "process_layer",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "process_layer",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "count_MD",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "count_MD",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "count_PE",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "count_PE",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "flags",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "flags",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "placed_by",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "placed_by",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "actions_taken",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "actions_taken",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DsAzureSQL1312",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "em_scoring",
                                    "schemaname": "staging"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DsAzureSQL1312",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "data_enrichment",
                                    "schemaname": "audit"
                                }
                            }
                        ]
                    },
                    {
                        "name": "no_enrichment_audit_md_pe_flag",
                        "description": "MD Flag & PE Flag audit for No Enrichment",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "dia_review_audit_md_pe_flag",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select sum(count_MD) count_MD,sum(count_PE) count_PE,response_id,mapping_id,account_name,modified_filename,\n'@{pipeline().parameters.staging_table}' table_name,'Staging' process_layer,\n'No Enrichment' flags,'DQE' placed_by,'Validation' actions_taken,\n'DQE Pipeline' insert_by  from\n(select sum(case when MD_FLAG ='No Enrichment' then 1 else 0 end) count_MD,\nsum(case when PE_FLAG ='No Enrichment' then 1 else 0 end) count_PE,\nresponse_id,mapping_id,account_name,modified_filename\nfrom @{pipeline().parameters.staging_table}\nwhere response_id = '@{pipeline().parameters.responseid}'\ngroup by response_id,mapping_id,account_name,modified_filename,MD_FLAG,PE_FLAG) a\ngroup by response_id,mapping_id,account_name,modified_filename",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "modified_filename",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "modified_fileName",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "table_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "table_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "process_layer",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "process_layer",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "count_MD",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "count_MD",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "count_PE",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "count_PE",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "flags",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "flags",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "placed_by",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "placed_by",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "actions_taken",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "actions_taken",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DsAzureSQL1312",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "em_scoring",
                                    "schemaname": "staging"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DsAzureSQL1312",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "data_enrichment",
                                    "schemaname": "audit"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "responseid": {
                        "type": "string",
                        "defaultValue": "'9d5aaedf-f084-ec11-a81c-000d3ad37590'"
                    },
                    "purposename": {
                        "type": "string",
                        "defaultValue": "'EM Scoring'"
                    },
                    "staging_table": {
                        "type": "string",
                        "defaultValue": "em scoring"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-12T10:26:30Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-dqe_profiling_log_duplicate')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQE profiling audit with error and warning count",
                "activities": [
                    {
                        "name": "error_count_update",
                        "description": "Error code audit",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.01:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "additionalColumns": [
                                    {
                                        "name": "stg_row_id",
                                        "value": {
                                            "value": "@guid()",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "select count(*) error_count,r.errorcode,r.operator,r.value1,r.errordescription,r.warningdescription,f.response_id,f.mapping_id,f.purpose_name,f.account_name from config.rules r\nJOIN @{pipeline().parameters.staging_table} e   ON e.error_code LIKE '%'+ r.errorcode +'%'\nor  e.warning_code LIKE '%'+ r.errorcode +'%'\nJoin audit.file_metadata f ON f.response_id = e.response_id\nand f.mapping_id = e.mapping_id\nwhere r.purposeName = '@{pipeline().parameters.purposename}'\nand e.response_id = '@{pipeline().parameters.responseid}'\ngroup by r.errorcode,r.operator,r.value1,r.warningcode,f.response_id,f.mapping_id,f.purpose_name,f.account_name,r.errordescription,r.warningdescription",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "char"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "char"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "purpose_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "purpose_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "value1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "column_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "operator",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "operator",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "errorcode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "error_code",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "error_count",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "error_count",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DsAzureSQL1412",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": {
                                        "value": "@pipeline().parameters.staging_table",
                                        "type": "Expression"
                                    },
                                    "schemaname": "staging"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DsAzureSQL1412",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "dqe_data_profiling_log",
                                    "schemaname": "audit"
                                }
                            }
                        ]
                    },
                    {
                        "name": "warning_count_update",
                        "description": "Warning Code audit",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "error_count_update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.01:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "additionalColumns": [
                                    {
                                        "name": "stg_row_id",
                                        "value": {
                                            "value": "@guid()",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "select count(*) warning_count,r.operator,r.value1,r.warningcode,r.errordescription,r.warningdescription,f.response_id,f.mapping_id,f.purpose_name,f.account_name from config.rules r\nJOIN @{pipeline().parameters.staging_table} e   ON  e.warning_code LIKE '%'+ r.warningcode +'%'\nJoin audit.file_metadata f ON f.response_id = e.response_id\nand f.mapping_id = e.mapping_id\nwhere r.purposeName = '@{pipeline().parameters.purposename}'\nand e.response_id = '@{pipeline().parameters.responseid}'\ngroup by r.errorcode,r.operator,r.value1,r.warningcode,f.response_id,f.mapping_id,f.purpose_name,f.account_name,r.errordescription,r.warningdescription",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "char"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "char"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "purpose_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "purpose_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "value1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "column_name",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "operator",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "operator",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "warningcode",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "warning_code",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "warning_count",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "warning_count",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DsAzureSQL1412",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": {
                                        "value": "@pipeline().parameters.staging_table",
                                        "type": "Expression"
                                    },
                                    "schemaname": "staging"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DsAzureSQL1412",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "dqe_data_profiling_log",
                                    "schemaname": "audit"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "responseid": {
                        "type": "string",
                        "defaultValue": "'9d5aaedf-f084-ec11-a81c-000d3ad37590'"
                    },
                    "purposename": {
                        "type": "string",
                        "defaultValue": "'EM Scoring'"
                    },
                    "staging_table": {
                        "type": "string",
                        "defaultValue": "em scoring"
                    }
                },
                "variables": {
                    "responseid": {
                        "type": "String"
                    },
                    "purposename": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-12T10:26:30Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-melissa-addressenrichment-EMGO')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Melissa AccessKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT (ROW_NUMBER() Over (Order by (select null))) % 5 rnk,\nsource_key,Line1,Line2,City,StateOrProvince,Country,PostalCode\nFrom (\nSelect top 2500 a.source_key,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Country,'''') as Country,Replace(isnull(a.ZIP,''''),'''''''','''') as PostalCode,a.response_id\nFROM alignment.customer_address_base a\njoin alignment.contactbase c\non a.source_key = c.source_key\nLeft Join (\nSelect distinct trim(response_id) response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1)b on a.response_id = b.response_id\nWHERE md_flag=''DIA Approved''\nAND c.crm_flag = 2\nAND b.purpose_name = ''EM GO''\nAND a.response_id=''',pipeline().parameters.response_id,'''',') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "1 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('1 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('1 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('1 Rank Melissa REST API').output.Records[0].PostalCode,activity('1 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Melissa AccessKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Audit Details",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.MelissaAccessKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "6 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('6 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('6 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('6 Rank Melissa REST API').output.Records[0].PostalCode,activity('6 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "5 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('5 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('5 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('5 Rank Melissa REST API').output.Records[0].PostalCode,activity('5 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "3 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('3 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('3 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('3 Rank Melissa REST API').output.Records[0].PostalCode,activity('3 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "2 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('2 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('2 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('2 Rank Melissa REST API').output.Records[0].PostalCode,activity('2 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "4 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('4 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('4 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('4 Rank Melissa REST API').output.Records[0].PostalCode,activity('4 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "0 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmGo([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('0 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('0 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('0 Rank Melissa REST API').output.Records[0].PostalCode,activity('0 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "1 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "5 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "505",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('Audit Details').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('Audit Details').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('Audit Details').output.value[0].purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Audit Details",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('select * from audit.file_metadata where response_id = ','''',pipeline().parameters.response_id,'''')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "504",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('Audit Details').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('Audit Details').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('Audit Details').output.value[0].purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "valueToBeReplaced": {
                        "type": "String",
                        "defaultValue": "'"
                    },
                    "replaceWith": {
                        "type": "String",
                        "defaultValue": "''"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Melissa"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-12T07:19:57Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment_EMGO')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('DROP TABLE IF EXISTS #temp_PE\nSELECT DISTINCT (ROW_NUMBER() Over (Order by (select null))) % 7 rnk,c.source_key\n,c.LastName\n,a.Line1\n,a.Line2\n,a.City\n,a.StateOrProvince\n,a.PostalCode\n,c.AccountNumber\ninto #temp_PE\nFROM alignment.customer_address_base a \nJOIN alignment.contactbase c \nON a.source_key = c.source_key\nLeft Join config.Enrichment b on a.source_key = b.source_key \nLeft Join (\nSelect distinct response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1\n)d on a.response_id = d.response_id\nWHERE c.pe_flag = ''DIA Approved''\nAND c.crm_flag =2\nAND a.md_flag in (''Enriched'', ''ADS Referenced'', ''No Enrichment'', ''Not Enriched'')\nAND b.source_key is null\nAND d.purpose_name = ''',pipeline().parameters.purpose_name,'''\nAND d.response_id = ''',pipeline().parameters.response_id,'''',\n\n'Insert Into config.Enrichment\nSelect source_key,''Sequence'',''',pipeline().parameters.purpose_name,''' from #temp_PE\n\nSelect * from #temp_PE')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Audit_Update",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "--ContactBase Audit Update\nDROP TABLE IF EXISTS #temp\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #temp\nfrom alignment.contactbase a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #temp AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'contactbase'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\n--customer_address_base Audit Update\nDROP TABLE IF EXISTS #tempc\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #tempc\nfrom alignment.customer_address_base a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #tempc AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'customer_address_base'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\nSELECT 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "6 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('6 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('6 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP - Alignment History Sync",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Audit_Update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Update]",
                            "storedProcedureParameters": {
                                "Enrichment": {
                                    "value": "PacificEast",
                                    "type": "String"
                                },
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string",
                        "defaultValue": "EM GO"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-19T06:43:06Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-load-history-tables')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "popb_responsesBase",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responsesBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responsesBase_history",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_fileuploadmappingBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responsesBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_fileuploadmappingBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_fileuploadmappingBase_history",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_responsequestionBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responsesBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responsequestionBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responsequestionBase_history",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "po_fqtcustomerorderBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responsesBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "po_fqtcustomerorderBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "po_fqtcustomerorderBase_history",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_responseanswerBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responsequestionBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responseanswerBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responseanswerBase_history",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "parallel-Run"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-12T15:29:15Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-get-response-data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "popb_fileuploadmappingBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responsesBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select * \nfrom dbo.popb_fileuploadmappingBase\nwhere popb_responseid in (@{pipeline().parameters.responses})",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table popb_fileuploadmappingBase",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_fileuploadmappingBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_fileuploadmappingBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_responsesBase",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select * \nfrom dbo.popb_responsesBase with(nolock)\nwhere popb_responsesId in (@{pipeline().parameters.responses})",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table dbo.popb_responsesBase",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_responsesBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responsesBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_responsequestionBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responsesBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select * \nfrom popb_responsequestionBase\nwhere popb_response in (@{pipeline().parameters.responses})",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table popb_responsequestionBase",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_responsequestionBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responsequestionBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_responseanswerBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responsesBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select *\nfrom dbo.popb_responseanswerBase \nwhere popb_parentresponse in (@{pipeline().parameters.responses})",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table popb_responseanswerBase",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_responseanswerBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responseanswerBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "po_fqtcustomerorderBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responsesBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select *\nfrom po_fqtcustomerorderBase\nwhere po_responseId in (@{pipeline().parameters.responses})",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table po_fqtcustomerorderBase",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "po_fqtcustomerorderBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "po_fqtcustomerorderBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "update_popb_fileuploadmappingBase",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "popb_responsequestionBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "popb_responseanswerBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "po_fqtcustomerorderBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "popb_fileuploadmappingBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                "az_sql_db": "NDPPRODSQLDB"
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": "update popb_fileuploadmappingBase\r\nset statuscode='777250002' "
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "responses": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "parallel-Run"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-16T05:54:11Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-insert-response')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "popb_fileuploadmappingBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responsesBase",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_fileuploadmappingBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_fileuploadmappingBase"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_responsesBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_questionnairreBase",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responsesBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_responsesBase"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_responsequestionBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_fileuploadmappingBase",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responsequestionBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_responsequestionBase"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_responseanswerBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responsequestionBase",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "popb_responseanswerBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_responseanswerBase"
                                }
                            }
                        ]
                    },
                    {
                        "name": "po_fqtcustomerorderBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_responseanswerBase",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "po_fqtcustomerorderBase",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "po_fqtcustomerorderBase"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_questionnairreBase",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": true,
                                    "keys": [
                                        "popb_questionnairreId"
                                    ]
                                },
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "popb_questionnairreId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "popb_questionnairreId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "statecode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "statecode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "statuscode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "statuscode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "popb_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_data",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "popb_data",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_questionnairetypes",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "popb_questionnairetypes",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_recordnumber",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "popb_recordnumber",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_category",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "popb_category",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_categoryid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "popb_categoryid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_questionnairreBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_questionnairreBase"
                                }
                            }
                        ]
                    },
                    {
                        "name": "AccountBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "po_fqtcustomerorderBase",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": false,
                                    "keys": [
                                        "AccountId"
                                    ]
                                },
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "AccountId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "AccountId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountCategoryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "AccountCategoryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TerritoryId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "TerritoryId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DefaultPriceLevelId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "DefaultPriceLevelId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CustomerSizeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "CustomerSizeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredContactMethodCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PreferredContactMethodCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CustomerTypeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "CustomerTypeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountRatingCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "AccountRatingCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IndustryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "IndustryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TerritoryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TerritoryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountClassificationCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "AccountClassificationCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BusinessTypeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "BusinessTypeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OriginatingLeadId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OriginatingLeadId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PaymentTermsCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PaymentTermsCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ShippingMethodCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ShippingMethodCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PrimaryContactId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "PrimaryContactId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParticipatesInWorkflow",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "ParticipatesInWorkflow",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountNumber",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "AccountNumber",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Revenue",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Revenue",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "NumberOfEmployees",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "NumberOfEmployees",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Description",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Description",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SIC",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "SIC",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnershipCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OwnershipCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MarketCap",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "MarketCap",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SharesOutstanding",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "SharesOutstanding",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TickerSymbol",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TickerSymbol",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StockExchange",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "StockExchange",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WebSiteURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "WebSiteURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FtpSiteURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "FtpSiteURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EMailAddress1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EMailAddress2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress3",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EMailAddress3",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotPhone",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotPhone",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotFax",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotFax",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Telephone1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotEMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotEMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Telephone2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Fax",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Fax",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone3",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Telephone3",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotPostalMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotPostalMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotBulkEMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotBulkEMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotBulkPostalMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotBulkPostalMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditLimit",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "CreditLimit",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditOnHold",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "CreditOnHold",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsPrivate",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsPrivate",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentAccountId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ParentAccountId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging30",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging30",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StateCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "StateCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging60",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging60",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StatusCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "StatusCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging90",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging90",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredAppointmentDayCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PreferredAppointmentDayCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredSystemUserId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "PreferredSystemUserId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredAppointmentTimeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PreferredAppointmentTimeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Merged",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "Merged",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotSendMM",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotSendMM",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MasterId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "MasterId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastUsedInCampaign",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastUsedInCampaign",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredServiceId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "PreferredServiceId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredEquipmentId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "PreferredEquipmentId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ExchangeRate",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 23
                                        },
                                        "sink": {
                                            "name": "ExchangeRate",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 23
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TransactionCurrencyId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "TransactionCurrencyId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditLimit_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "CreditLimit_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging30_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging30_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Revenue_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Revenue_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging90_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging90_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MarketCap_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "MarketCap_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging60_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging60_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YomiName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "YomiName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "StageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProcessId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ProcessId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EntityImageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "EntityImageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TraversedPath",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TraversedPath",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenDeals",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OpenDeals",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenRevenue",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "OpenRevenue",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 38
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenDeals_State",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OpenDeals_State",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenRevenue_State",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OpenRevenue_State",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenRevenue_Date",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OpenRevenue_Date",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenRevenue_Base",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "OpenRevenue_Base",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 38
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenDeals_Date",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OpenDeals_Date",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PrimarySatoriId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "PrimarySatoriId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedByExternalParty",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedByExternalParty",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedByExternalParty",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedByExternalParty",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PrimaryTwitterId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "PrimaryTwitterId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FollowEmail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "FollowEmail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MarketingOnly",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "MarketingOnly",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastOnHoldTime",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastOnHoldTime",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OnHoldTime",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OnHoldTime",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeSpentByMeOnEmailAndMeetings",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TimeSpentByMeOnEmailAndMeetings",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SLAInvokedId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "SLAInvokedId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SLAId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "SLAId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AppSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_AppSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_FriendlyName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_FriendlyName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_InquirySMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_InquirySMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_InstitutionControl",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "po_InstitutionControl",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_InstitutionType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "po_InstitutionType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_OrgName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_OrgName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SearchSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_SearchSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_YieldSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_YieldSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_accountscore",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "cdi_accountscore",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_allowtextmessages",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "cdi_allowtextmessages",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CRM2011OrgName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_CRM2011OrgName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_GenerateCSVFile",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_GenerateCSVFile",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_GeneratePDFReport",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_GeneratePDFReport",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ParchmentClient",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_ParchmentClient",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_fiscalyear",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "po_fiscalyear",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_behavioralscoringenabled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_behavioralscoringenabled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_purge",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_purge",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_instkey",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_instkey",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_enable_p2p_txt",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_enable_p2p_txt",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_enable_thankview",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_enable_thankview",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_p2p_txt_api_key",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_p2p_txt_api_key",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_p2p_txt_api_secret",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_p2p_txt_api_secret",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_p2p_txt_custom_fields",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_p2p_txt_custom_fields",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_p2p_txt_department_code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_p2p_txt_department_code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_rnlengagedb",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_rnlengagedb",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_StateDoNotCall",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_StateDoNotCall",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_telesense",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_telesense",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_thankview_campaign_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_thankview_campaign_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_thankview_client_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_thankview_client_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_thankview_client_secret",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_thankview_client_secret",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_thankview_sftp_password",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_thankview_sftp_password",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_thankview_sftp_username",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_thankview_sftp_username",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_campusespslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_campusespslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_conduitslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_conduitslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_zeemeeslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_zeemeeslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "AccountBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "AccountBase"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "parallel-Run"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-12T17:01:39Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-melissa-addressenrichment-EMSuppression')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Melissa AccessKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT (ROW_NUMBER() Over (Order by (select null))) % 5 rnk,\nsource_key,Line1,Line2,City,StateOrProvince,Country,PostalCode\nFrom (\nSelect top 2500 a.source_key,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Country,'''') as Country,Replace(isnull(a.ZIP,''''),'''''''','''') as PostalCode,a.response_id\nFROM alignment.customer_address_base a\njoin alignment.contactbase c\non a.source_key = c.source_key\nLeft Join (\nSelect distinct trim(response_id) response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1)b on a.response_id = b.response_id\nWHERE md_flag=''DIA Approved''\nAND c.crm_flag = 2\nAND b.purpose_name = ''EM Suppression''\nAND a.response_id=''',pipeline().parameters.response_id,'''',') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "1 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('1 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('1 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('1 Rank Melissa REST API').output.Records[0].PostalCode,activity('1 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Melissa AccessKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.MelissaAccessKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "6 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('6 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('6 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('6 Rank Melissa REST API').output.Records[0].PostalCode,activity('6 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "5 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('5 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('5 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('5 Rank Melissa REST API').output.Records[0].PostalCode,activity('5 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "3 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('3 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('3 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('3 Rank Melissa REST API').output.Records[0].PostalCode,activity('3 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "2 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('2 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('2 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('2 Rank Melissa REST API').output.Records[0].PostalCode,activity('2 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "4 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('4 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('4 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('4 Rank Melissa REST API').output.Records[0].PostalCode,activity('4 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "0 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmSuppression([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('0 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('0 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('0 Rank Melissa REST API').output.Records[0].PostalCode,activity('0 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "1 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "5 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "505",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Suppression"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "504",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Suppression"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "valueToBeReplaced": {
                        "type": "String",
                        "defaultValue": "'"
                    },
                    "replaceWith": {
                        "type": "String",
                        "defaultValue": "''"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Melissa"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-12T07:19:57Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-melissa-addressenrichment-EMSearchVendorData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Melissa AccessKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT (ROW_NUMBER() Over (Order by (select null))) % 5 rnk,\nsource_key,Line1,Line2,City,StateOrProvince,Country,PostalCode\nFrom (\nSelect top 2500 a.source_key,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Country,'''') as Country,Replace(isnull(a.ZIP,''''),'''''''','''') as PostalCode,a.response_id\nFROM alignment.customer_address_base a\njoin alignment.contactbase c\non a.source_key = c.source_key\nLeft Join (\nSelect distinct trim(response_id) response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1)b on a.response_id = b.response_id\nWHERE md_flag=''DIA Approved''\nAND c.crm_flag = 2\nAND b.purpose_name = ''EM Search Vendor Data''\nAND a.response_id=''',pipeline().parameters.response_id,'''',') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "1 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "1 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmSearchVender]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('1 Rank Melissa REST API').output.Records[0].PostalCode,activity('1 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "1 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmSearchVender]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Melissa AccessKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.MelissaAccessKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "3 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "3 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmSearchVender]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('3 Rank Melissa REST API').output.Records[0].PostalCode,activity('3 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "3 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmSearchVender]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "2 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "2 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmSearchVender]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('2 Rank Melissa REST API').output.Records[0].PostalCode,activity('2 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "2 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmSearchVender]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "4 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "4 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmSearchVender]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('4 Rank Melissa REST API').output.Records[0].PostalCode,activity('4 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "4 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmSearchVender]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "0 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "0 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmSearchVender]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('0 Rank Melissa REST API').output.Records[0].PostalCode,activity('0 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "0 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmSearchVender]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "1 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "505",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Search Vendor Data"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "504",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Search Vendor Data"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "valueToBeReplaced": {
                        "type": "String",
                        "defaultValue": "'"
                    },
                    "replaceWith": {
                        "type": "String",
                        "defaultValue": "''"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Melissa"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-12T07:19:57Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-melissa-addressenrichment-EMMarketing')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Melissa AccessKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT (ROW_NUMBER() Over (Order by (select null))) % 5 rnk,\nsource_key,Line1,Line2,City,StateOrProvince,Country,PostalCode\nFrom (\nSelect top 2500 a.source_key,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Country,'''') as Country,Replace(isnull(a.ZIP,''''),'''''''','''') as PostalCode,a.response_id\nFROM alignment.customer_address_base a\njoin alignment.contactbase c\non a.source_key = c.source_key\nLeft Join (\nSelect distinct trim(response_id) response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1)b on a.response_id = b.response_id\nWHERE md_flag=''DIA Approved''\nAND c.crm_flag = 2\nAND b.purpose_name = ''EM Marketing''\nAND a.response_id=''',pipeline().parameters.response_id,'''',') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "1 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('1 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('1 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('1 Rank Melissa REST API').output.Records[0].PostalCode,activity('1 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Melissa AccessKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Audit Details",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.MelissaAccessKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "6 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('6 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('6 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('6 Rank Melissa REST API').output.Records[0].PostalCode,activity('6 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "5 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('5 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('5 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('5 Rank Melissa REST API').output.Records[0].PostalCode,activity('5 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "3 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('3 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('3 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('3 Rank Melissa REST API').output.Records[0].PostalCode,activity('3 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "2 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('2 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('2 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('2 Rank Melissa REST API').output.Records[0].PostalCode,activity('2 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "4 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('4 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('4 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('4 Rank Melissa REST API').output.Records[0].PostalCode,activity('4 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "0 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmMarketing([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('0 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('0 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('0 Rank Melissa REST API').output.Records[0].PostalCode,activity('0 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:05:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Audit Details",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('select * from audit.file_metadata where response_id = ','''',pipeline().parameters.response_id,'''')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "504",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('Audit Details').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('Audit Details').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('Audit Details').output.value[0].purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "5 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "1 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "505",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('Audit Details').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('Audit Details').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('Audit Details').output.value[0].purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "valueToBeReplaced": {
                        "type": "String",
                        "defaultValue": "'"
                    },
                    "replaceWith": {
                        "type": "String",
                        "defaultValue": "''"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Melissa"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-12T07:19:57Z"
            },
            "dependsOn": []
        }
    ]
}