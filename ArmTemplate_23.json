{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "RNLADFNDPPROD"
        },
        "trg_staging_data_purging_properties_pip-master-data-archive_parameters_azure_sql_database_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg_staging_data_purging_properties_pip-master-data-archive_parameters_azure_sql_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg_staging_data_purging_properties_pip-master-data-archive_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg_staging_data_purging_properties_pip-master-data-archive_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg_staging_data_purging_properties_pip-master-data-archive_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg_staging_data_purging_properties_pip-master-data-archive_parameters_az_synapse_crm_db": {
            "type": "string",
            "defaultValue": "NDPPRODCRMPL1"
        },
        "trg_staging_data_purging_properties_pip-master-data-archive_parameters_az_synapse_crm_server": {
            "type": "string",
            "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
        },
        "trg_staging_data_purging_properties_pip-master-data-archive_parameters_storage_account_name": {
            "type": "string",
            "defaultValue": "rnlndpproddls"
        },
        "trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_crm_servername": {
            "type": "string",
            "defaultValue": "10.200.0.22"
        },
        "trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_crm_dbname": {
            "type": "string",
            "defaultValue": "RNLMAP_MSCRM"
        },
        "trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_crm_username": {
            "type": "string",
            "defaultValue": "svc_az_ndp"
        },
        "trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_vaulturl": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_az_sql_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_az_sql_db_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_az_synapse_crm_server": {
            "type": "string",
            "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
        },
        "trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_az_synapse_crm_db": {
            "type": "string",
            "defaultValue": "NDPPRODCRMPL1"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_az_sql_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_az_sql_db_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_EmailSuccess": {
            "type": "string",
            "defaultValue": "https://prod-51.westus.logic.azure.com:443/workflows/5ebd1dba8bbb492e812b84f4e86ba426/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=1oKEwEZsA9W2ZHGi6e1ihm_4mpccHBle9UZjdW1uOkQ"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_EmailFailure": {
            "type": "string",
            "defaultValue": "https://prod-142.westus.logic.azure.com:443/workflows/5076b5f623944e73a73d414747a65c6f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QRg61OekEK1VZcXvQ400AcHr41s8V4BW3mqk5l_sNEM"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_az_synapse_crm_server": {
            "type": "string",
            "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_az_synapse_crm_db": {
            "type": "string",
            "defaultValue": "NDPPRODCRMPL1"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_fplus_host": {
            "type": "string",
            "defaultValue": "\\\\10.3.30.67\\SoftScore"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_fplus_username": {
            "type": "string",
            "defaultValue": "RNLWINSASCOMP1\\svc_prod_fqt"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_storageaccountname": {
            "type": "string",
            "defaultValue": "rnlndpproddls"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_crm_servername": {
            "type": "string",
            "defaultValue": "10.200.0.22"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_crm_dbname": {
            "type": "string",
            "defaultValue": "RNLMAP_MSCRM"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_crm_username": {
            "type": "string",
            "defaultValue": "svc_az_ndp"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_softscore_root": {
            "type": "string",
            "defaultValue": "SoftScore/UAT"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_synapsecontainer": {
            "type": "string",
            "defaultValue": "prodcrmsynapse"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_softscore_adls": {
            "type": "string",
            "defaultValue": "SoftScore"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_UncPath": {
            "type": "string",
            "defaultValue": "/F2.0 Report - CSD - AM"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_rnl_sftp_host": {
            "type": "string",
            "defaultValue": "SFTP.RuffaloNL.com"
        },
        "trg-fplus-reverse-flow_properties_pipeline_parameters_rnl_sftp_username": {
            "type": "string",
            "defaultValue": "Brillio_rnl"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_az_sql_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_az_sql_db_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_EmailSuccess": {
            "type": "string",
            "defaultValue": "https://prod-51.westus.logic.azure.com:443/workflows/5ebd1dba8bbb492e812b84f4e86ba426/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=1oKEwEZsA9W2ZHGi6e1ihm_4mpccHBle9UZjdW1uOkQ"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_EmailFailure": {
            "type": "string",
            "defaultValue": "https://prod-142.westus.logic.azure.com:443/workflows/5076b5f623944e73a73d414747a65c6f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QRg61OekEK1VZcXvQ400AcHr41s8V4BW3mqk5l_sNEM"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_az_synapse_crm_server": {
            "type": "string",
            "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_az_synapse_crm_db": {
            "type": "string",
            "defaultValue": "NDPPRODCRMPL1"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_fplus_host": {
            "type": "string",
            "defaultValue": "\\\\10.3.30.67\\SoftScore"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_fplus_username": {
            "type": "string",
            "defaultValue": "RNLWINSASCOMP1\\svc_prod_fqt"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_storageaccountname": {
            "type": "string",
            "defaultValue": "rnlndpproddls"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_crm_servername": {
            "type": "string",
            "defaultValue": "10.200.0.22"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_crm_dbname": {
            "type": "string",
            "defaultValue": "RNLMAP_MSCRM"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_crm_username": {
            "type": "string",
            "defaultValue": "svc_az_ndp"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_softscore_root": {
            "type": "string",
            "defaultValue": "SoftScore/UAT"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_synapsecontainer": {
            "type": "string",
            "defaultValue": "prodcrmsynapse"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_softscore_adls": {
            "type": "string",
            "defaultValue": "SoftScore"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_UncPath": {
            "type": "string",
            "defaultValue": "/F2.0 Report - CSD - AM"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_rnl_sftp_host": {
            "type": "string",
            "defaultValue": "SFTP.RuffaloNL.com"
        },
        "trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_rnl_sftp_username": {
            "type": "string",
            "defaultValue": "Brillio_rnl"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_ContainerName": {
            "type": "string",
            "defaultValue": "datalanding"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_rawFilePath": {
            "type": "string",
            "defaultValue": "raw"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_Audit_Type_Pipeline": {
            "type": "string",
            "defaultValue": "ETL"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_Audit_Type_File": {
            "type": "string",
            "defaultValue": "File"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_Pipeline_Start_Status": {
            "type": "string",
            "defaultValue": "Started"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_Pipeline_Complete_Status": {
            "type": "string",
            "defaultValue": "Successful"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_Pipeline_Error_Status": {
            "type": "string",
            "defaultValue": "Failed"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Blob_to_Raw": {
            "type": "string",
            "defaultValue": "In Data Landing- Raw"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Raw_to_Validated": {
            "type": "string",
            "defaultValue": "In Data Landing- Validated"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Raw_to_Raw_archive": {
            "type": "string",
            "defaultValue": "In Data Landing- Archived"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Raw_to_Reject": {
            "type": "string",
            "defaultValue": "In Data Landing- Rejected"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Validated_to_EMInbound": {
            "type": "string",
            "defaultValue": "In Data Landing- EMInbound(Filerenamed)"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Config_files_Copy": {
            "type": "string",
            "defaultValue": "In Data Landing- Config files generated"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_Area": {
            "type": "string",
            "defaultValue": "DataLanding"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_InsertBy": {
            "type": "string",
            "defaultValue": "ADF_User"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_ValidatePath": {
            "type": "string",
            "defaultValue": "validated"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_RejectPath": {
            "type": "string",
            "defaultValue": "rejected"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_Raw_Archived": {
            "type": "string",
            "defaultValue": "raw_archived"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_Inbound": {
            "type": "string",
            "defaultValue": "em_inbound"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_adlsName": {
            "type": "string",
            "defaultValue": "rnlndpproddls"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_schemaFilename": {
            "type": "string",
            "defaultValue": "Schema.csv"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_az_sql_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_az_sql_db_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_crm_servername": {
            "type": "string",
            "defaultValue": "10.200.0.22"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_crm_dbname": {
            "type": "string",
            "defaultValue": "RNLMAP_MSCRM"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_crm_username": {
            "type": "string",
            "defaultValue": "svc_az_ndp"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_blobname": {
            "type": "string",
            "defaultValue": "rnlprodblob"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_EmailSuccess": {
            "type": "string",
            "defaultValue": "https://prod-51.westus.logic.azure.com:443/workflows/5ebd1dba8bbb492e812b84f4e86ba426/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=1oKEwEZsA9W2ZHGi6e1ihm_4mpccHBle9UZjdW1uOkQ"
        },
        "trg-blob-to-adls_properties_pipeline_parameters_EmailFailure": {
            "type": "string",
            "defaultValue": "https://prod-142.westus.logic.azure.com:443/workflows/5076b5f623944e73a73d414747a65c6f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QRg61OekEK1VZcXvQ400AcHr41s8V4BW3mqk5l_sNEM"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_az_sql_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_az_sql_db_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_EmailSuccess": {
            "type": "string",
            "defaultValue": "https://prod-51.westus.logic.azure.com:443/workflows/5ebd1dba8bbb492e812b84f4e86ba426/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=1oKEwEZsA9W2ZHGi6e1ihm_4mpccHBle9UZjdW1uOkQ"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_EmailFailure": {
            "type": "string",
            "defaultValue": "https://prod-142.westus.logic.azure.com:443/workflows/5076b5f623944e73a73d414747a65c6f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QRg61OekEK1VZcXvQ400AcHr41s8V4BW3mqk5l_sNEM"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_crm_servername": {
            "type": "string",
            "defaultValue": "10.200.0.22"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_crm_dbname": {
            "type": "string",
            "defaultValue": "RNLMAP_MSCRM"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_crm_username": {
            "type": "string",
            "defaultValue": "svc_az_ndp"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_storageaccountname": {
            "type": "string",
            "defaultValue": "rnlndpproddls"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_az_synapse_crm_server": {
            "type": "string",
            "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_az_synapse_crm_db": {
            "type": "string",
            "defaultValue": "NDPPRODCRMPL1"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_fplus_host": {
            "type": "string",
            "defaultValue": "\\\\10.3.30.67\\SoftScore"
        },
        "trg-fplus-forward-reverse-flow_properties_pipeline_parameters_fplus_username": {
            "type": "string",
            "defaultValue": "RNLWINSASCOMP1\\svc_prod_fqt"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_windowStart": {
            "type": "string",
            "defaultValue": "@trigger().startTime"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_database_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_crm_servername": {
            "type": "string",
            "defaultValue": "10.200.0.22"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_crm_dbname": {
            "type": "string",
            "defaultValue": "RNLMAP_MSCRM"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_crm_username": {
            "type": "string",
            "defaultValue": "svc_az_ndp"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_az_synapse_em_server": {
            "type": "string",
            "defaultValue": "rnlndpprodemdwsynapse.sql.azuresynapse.net"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_az_synapse_em_db": {
            "type": "string",
            "defaultValue": "NDPPRODDWPL1"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_storageaccountname": {
            "type": "string",
            "defaultValue": "rnlndpproddls"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_databricks_workspace_url": {
            "type": "string",
            "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_databricks_clusterid": {
            "type": "string",
            "defaultValue": "0714-203005-9conw1v0"
        },
        "trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_campusesp_hostname": {
            "type": "string",
            "defaultValue": "ftp.campusesp.com"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/trg_staging_data_purging')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pip-master-data-archive",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "azure_sql_database_name": "[parameters('trg_staging_data_purging_properties_pip-master-data-archive_parameters_azure_sql_database_name')]",
                            "azure_sql_server_name": "[parameters('trg_staging_data_purging_properties_pip-master-data-archive_parameters_azure_sql_server_name')]",
                            "databricks_workspace_url": "[parameters('trg_staging_data_purging_properties_pip-master-data-archive_parameters_databricks_workspace_url')]",
                            "databricks_clusterid": "[parameters('trg_staging_data_purging_properties_pip-master-data-archive_parameters_databricks_clusterid')]",
                            "vault_url": "[parameters('trg_staging_data_purging_properties_pip-master-data-archive_parameters_vault_url')]",
                            "az_synapse_crm_db": "[parameters('trg_staging_data_purging_properties_pip-master-data-archive_parameters_az_synapse_crm_db')]",
                            "az_synapse_crm_server": "[parameters('trg_staging_data_purging_properties_pip-master-data-archive_parameters_az_synapse_crm_server')]",
                            "storage_account_name": "[parameters('trg_staging_data_purging_properties_pip-master-data-archive_parameters_storage_account_name')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2022-11-13T00:42:00",
                        "timeZone": "India Standard Time",
                        "schedule": {
                            "minutes": [
                                0
                            ],
                            "hours": [
                                7
                            ]
                        }
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-master-ads-to-crm')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pip-master-ads-to-crm",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "crm_servername": "[parameters('trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_crm_servername')]",
                            "crm_dbname": "[parameters('trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_crm_dbname')]",
                            "crm_username": "[parameters('trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_crm_username')]",
                            "vaulturl": "[parameters('trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_vaulturl')]",
                            "databricks_workspace_url": "[parameters('trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_databricks_workspace_url')]",
                            "databricks_clusterid": "[parameters('trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_databricks_clusterid')]",
                            "az_sql_server_name": "[parameters('trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_az_sql_server_name')]",
                            "az_sql_db_name": "[parameters('trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_az_sql_db_name')]",
                            "az_synapse_crm_server": "[parameters('trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_az_synapse_crm_server')]",
                            "az_synapse_crm_db": "[parameters('trg-master-ads-to-crm_properties_pip-master-ads-to-crm_parameters_az_synapse_crm_db')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2022-10-19T03:30:00",
                        "timeZone": "Eastern Standard Time"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-fplus-reverse-flow')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-fplus-reverse-flow",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "databricks_workspace_url": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_databricks_clusterid')]",
                        "az_sql_server_name": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_az_sql_server_name')]",
                        "az_sql_db_name": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_az_sql_db_name')]",
                        "vault_url": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_vault_url')]",
                        "EmailSuccess": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_EmailSuccess')]",
                        "EmailFailure": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_EmailFailure')]",
                        "az_synapse_crm_server": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_az_synapse_crm_server')]",
                        "az_synapse_crm_db": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_az_synapse_crm_db')]",
                        "fplus_host": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_fplus_host')]",
                        "fplus_username": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_fplus_username')]",
                        "storageaccountname": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_storageaccountname')]",
                        "crm_servername": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_crm_servername')]",
                        "crm_dbname": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_crm_dbname')]",
                        "crm_username": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_crm_username')]",
                        "softscore_root": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_softscore_root')]",
                        "synapsecontainer": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_synapsecontainer')]",
                        "softscore_adls": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_softscore_adls')]",
                        "UncPath": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_UncPath')]",
                        "rnl_sftp_host": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_rnl_sftp_host')]",
                        "rnl_sftp_username": "[parameters('trg-fplus-reverse-flow_properties_pipeline_parameters_rnl_sftp_username')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 10,
                    "startTime": "2022-11-14T09:32:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-fplus-rev')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pip-fplus-reverse-flow",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 4,
                        "startTime": "2022-11-15T05:38:00",
                        "timeZone": "Central Standard Time"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-fplus-rev-flow')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pip-fplus-reverse-flow",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "databricks_workspace_url": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_databricks_workspace_url')]",
                            "databricks_clusterid": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_databricks_clusterid')]",
                            "az_sql_server_name": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_az_sql_server_name')]",
                            "az_sql_db_name": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_az_sql_db_name')]",
                            "vault_url": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_vault_url')]",
                            "EmailSuccess": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_EmailSuccess')]",
                            "EmailFailure": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_EmailFailure')]",
                            "az_synapse_crm_server": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_az_synapse_crm_server')]",
                            "az_synapse_crm_db": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_az_synapse_crm_db')]",
                            "fplus_host": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_fplus_host')]",
                            "fplus_username": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_fplus_username')]",
                            "storageaccountname": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_storageaccountname')]",
                            "crm_servername": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_crm_servername')]",
                            "crm_dbname": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_crm_dbname')]",
                            "crm_username": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_crm_username')]",
                            "softscore_root": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_softscore_root')]",
                            "synapsecontainer": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_synapsecontainer')]",
                            "softscore_adls": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_softscore_adls')]",
                            "UncPath": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_UncPath')]",
                            "rnl_sftp_host": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_rnl_sftp_host')]",
                            "rnl_sftp_username": "[parameters('trg-fplus-rev-flow_properties_pip-fplus-reverse-flow_parameters_rnl_sftp_username')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 1,
                        "startTime": "2022-11-17T11:30:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-copy-file-sftp-to-adls')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Set SFTP FileName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "SftpFileName",
                            "value": {
                                "value": "@pipeline().parameters.sftpfilename",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Get Old ResponseID",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set Original Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "With AcctTmp as \n(\nselect \nf.popb_responseid as ResponseID,AB.AccountId as AccountId,  AB.po_fiscalyear  as fiscalMonth, AB.name AccountName,f.popb_uploadedfilename as OrignalFilename,pb.popb_name as PurposeName ,ISNULL(AB.po_StateDoNotCall,0) as  po_StateDoNotCall,f.CreatedOn as CreatedOn\nfrom\npopb_fileuploadmapping f\ninner join (select ranswr.popb_responseanswer,rp.popb_responsesId from\npopb_responseanswer ranswr\n    inner join popb_responsequestion rquest on ranswr.popb_responsequestion=rquest.popb_responsequestionId AND  rquest.popb_name in ('Account') AND ranswr.popb_responseanswer is not null AND len(ranswr.popb_responseanswer)>1\n    inner join popb_responses rp on ranswr.popb_parentresponse=rp.popb_responsesId\n    INNER join popb_questionnairre qr on rp.popb_questionnaire=qr.popb_questionnairreId and qr.popb_questionnairetypes='777250002'\n    where\n    rquest.popb_name in('Account') and (ranswr.popb_responseanswer is not null) and ranswr.popb_responseanswer='@{pipeline().parameters.AccountID}' )cnt--AND len(ranswr.popb_responseanswer)>31)) cnt \n       on f.popb_responseId=cnt.popb_responsesId\ninner join Account AB on cnt.popb_responseanswer=AB.AccountId\ninner join popb_purposeBase pb on f.popb_purposeid=pb.popb_purposeId \n) \nselect top 1 AccountId,fiscalMonth,OrignalFilename,ResponseID,PurposeName,CreatedOn  from AcctTmp  AC \nwhere AC.OrignalFilename='@{variables('OriginalName')}' and AC.PurposeName='@{split(variables('SftpFileName'),'_')[0]}'  order by CreatedOn desc",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vaulturl",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set Original Name",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set SFTP FileName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "OriginalName",
                            "value": {
                                "value": "@substring(variables('SftpFileName'),add(indexOf(variables('SftpFileName'),'_'),1),sub(sub(length(variables('SftpFileName')),indexOf(variables('SftpFileName'),'_')),1))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fetch AccountName",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "If Old ResponseId is available",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select Name from AccountBase where AccountId='@{pipeline().parameters.AccountID}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vaulturl",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set AccountName",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Fetch AccountName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "AccountName",
                            "value": {
                                "value": "@activity('Fetch AccountName').output.value[0].Name",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "If Old ResponseId is available",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get Old ResponseID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('Get Old ResponseID').output.count,0)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "OldResponseId not Exist",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ResponseError",
                                        "value": "Old ResponseId not existed in the database"
                                    }
                                },
                                {
                                    "name": "Fail1",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "ETL Audit - ResponseID not exist",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Old ResponseId not existed in the database",
                                        "errorCode": "101"
                                    }
                                },
                                {
                                    "name": "Email - Responseid not Exist",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "OldResponseId not Exist",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@pipeline().parameters.EmailFailure",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"@{variables('ResponseError')}\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"Get Old ResponseID Activity\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "ETL Audit - ResponseID not exist",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Email - Responseid not Exist",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentTriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": "ResponseID not exist",
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vaulturl",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Set Old ResponseID",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ResponseID",
                                        "value": {
                                            "value": "@activity('Get Old ResponseID').output.value[0].ResponseID",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Purpose Name",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Old ResponseID",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PurposeName",
                                        "value": {
                                            "value": "@activity('Get Old ResponseID').output.value[0].PurposeName",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Check Raw Archive and PurposeName",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Check if File Exists in Archive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(equals(activity('Check if File Exists in Archive').output.Exists,false),equals(substring(variables('PurposeName'),0,2),'EM'))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Set Error variable",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "FileError",
                                        "value": {
                                            "value": "File Already Present in Raw_Archive",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Email - File Already exist in Archive",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Error variable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@pipeline().parameters.EmailFailure",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"@{variables('FileError')}\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"Check Raw Archive and PurposeName - @{variables('FileError')}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "ETL Audit - file present in archieve",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Error variable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentTriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@concat(variables('SftpFileName'), variables('FileError'), '-')\n",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vaulturl",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Copy File from SFTP to ADLS Raw Folder",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "SftpReadSettings",
                                                "recursive": false,
                                                "enablePartitionDiscovery": false,
                                                "disableChunking": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_sftp_input_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderName": {
                                                    "value": "@concat(pipeline().parameters.Folder,'/',pipeline().parameters.SubFolder,'/')",
                                                    "type": "Expression"
                                                },
                                                "fileName": {
                                                    "value": "@variables('SftpFileName')",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_host": {
                                                    "value": "@pipeline().parameters.rnl_sftp_host",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_username": {
                                                    "value": "@pipeline().parameters.rnl_sftp_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vaulturl",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_raw_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "foldername": {
                                                    "value": "@concat('raw/',split(variables('PurposeName'),' ')[0],'/',variables('PurposeName'),'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/',variables('AccountName'))",
                                                    "type": "Expression"
                                                },
                                                "filename": {
                                                    "value": "@variables('SftpFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Copy file in SFTP folder to SFTP Archive folder",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "File Audit - SFTP To Raw",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "SftpReadSettings",
                                                "recursive": false,
                                                "enablePartitionDiscovery": false,
                                                "disableChunking": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "SftpWriteSettings",
                                                "operationTimeout": "01:00:00",
                                                "useTempFileRename": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_sftp_input_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderName": {
                                                    "value": "@concat(pipeline().parameters.Folder,'/',pipeline().parameters.SubFolder,'/')",
                                                    "type": "Expression"
                                                },
                                                "fileName": {
                                                    "value": "@variables('SftpFileName')",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_host": {
                                                    "value": "@pipeline().parameters.rnl_sftp_host",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_username": {
                                                    "value": "@pipeline().parameters.rnl_sftp_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vaulturl",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_sftp_input_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderName": {
                                                    "value": "@concat(pipeline().parameters.Folder,'/Archive/')",
                                                    "type": "Expression"
                                                },
                                                "fileName": {
                                                    "value": "@concat(split(variables('SftpFileName'),'.')[0], '_', formatDateTime(convertTimeZone(utcnow(),'UTC','Eastern Standard Time'),'yyyy-MM-ddTHHmmss'),'.',split(variables('SftpFileName'),'.')[1])",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_host": {
                                                    "value": "@pipeline().parameters.rnl_sftp_host",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_username": {
                                                    "value": "@pipeline().parameters.rnl_sftp_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vaulturl",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Delete File in SFTP folder",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy file in SFTP folder to SFTP Archive folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_sftp_input_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderName": {
                                                    "value": "@concat(pipeline().parameters.Folder,'/',pipeline().parameters.SubFolder,'/')",
                                                    "type": "Expression"
                                                },
                                                "fileName": {
                                                    "value": "@variables('SftpFileName')",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_host": {
                                                    "value": "@pipeline().parameters.rnl_sftp_host",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_username": {
                                                    "value": "@pipeline().parameters.rnl_sftp_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vaulturl",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "SftpReadSettings",
                                            "recursive": false,
                                            "enablePartitionDiscovery": false,
                                            "disableChunking": false
                                        }
                                    }
                                },
                                {
                                    "name": "SFTP_FileValidation_Metadata_Pipeline",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Delete File in SFTP folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-sftp-file-validation-raw-to-em_inbound",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": false,
                                        "parameters": {
                                            "SftpFileName": {
                                                "value": "@variables('SftpFileName')",
                                                "type": "Expression"
                                            },
                                            "AccountID": {
                                                "value": "@pipeline().parameters.AccountID",
                                                "type": "Expression"
                                            },
                                            "ResponseID": {
                                                "value": "@variables('ResponseID')",
                                                "type": "Expression"
                                            },
                                            "AccountName": {
                                                "value": "@variables('AccountName')",
                                                "type": "Expression"
                                            },
                                            "PurposeName": {
                                                "value": "@variables('PurposeName')",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineName": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineRunID": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineTriggerName": {
                                                "value": "@pipeline().parameters.ParentTriggerName",
                                                "type": "Expression"
                                            },
                                            "FiscalMonth": {
                                                "value": "@activity('Get Old ResponseID').output.value[0].fiscalMonth",
                                                "type": "Expression"
                                            },
                                            "RowsRead": {
                                                "value": "@string(activity('File_HealthCheck').output.runOutput[0])",
                                                "type": "Expression"
                                            },
                                            "RowsWritten": {
                                                "value": "@string(activity('File_HealthCheck').output.runOutput[0])",
                                                "type": "Expression"
                                            },
                                            "OriginalName": {
                                                "value": "@variables('OriginalName')",
                                                "type": "Expression"
                                            },
                                            "source": "SFTP",
                                            "NewResponseID": {
                                                "value": "@variables('NewResponseID')",
                                                "type": "Expression"
                                            },
                                            "NewFileUploadMappingID": {
                                                "value": "@variables('NewFileUploadMappingID')",
                                                "type": "Expression"
                                            },
                                            "SchemaFilename": "Schema.csv",
                                            "adlsName": {
                                                "value": "@pipeline().parameters.adlsName",
                                                "type": "Expression"
                                            },
                                            "containerName": {
                                                "value": "@pipeline().parameters.containerName",
                                                "type": "Expression"
                                            },
                                            "az_sql_server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vaulturl",
                                                "type": "Expression"
                                            },
                                            "crm_servername": {
                                                "value": "@pipeline().parameters.crm_servername",
                                                "type": "Expression"
                                            },
                                            "crm_dbname": {
                                                "value": "@pipeline().parameters.crm_dbname",
                                                "type": "Expression"
                                            },
                                            "crm_username": {
                                                "value": "@pipeline().parameters.crm_username",
                                                "type": "Expression"
                                            },
                                            "EmailSuccess": {
                                                "value": "@pipeline().parameters.EmailSuccess",
                                                "type": "Expression"
                                            },
                                            "EmailFailure": {
                                                "value": "@pipeline().parameters.EmailFailure",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Email - Copy File From SFTP to Raw Failed",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Failed SFTP to Raw",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@pipeline().parameters.EmailFailure",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"Copy File from SFTP to Raw Failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"Copy File from SFTP to ADLS Raw Folder Activity\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Copy Failed SFTP to Raw",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy File from SFTP to ADLS Raw Folder",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentTriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Copy File from SFTP to ADLS Raw Folder').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vaulturl",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "File Audit - SFTP To Raw",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "File_HealthCheck",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "101",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@variables('NewResponseID')",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@variables('PurposeName')",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@variables('AccountName')",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "Raw",
                                            "status": "Copied In Raw Folder",
                                            "row_count": {
                                                "value": "@string(activity('File_HealthCheck').output.runOutput[0])",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "0",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@variables('NewFileUploadMappingID')",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vaulturl",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "File_HealthCheck",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy File from SFTP to ADLS Raw Folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-healthcheck-validation",
                                        "baseParameters": {
                                            "FileName": {
                                                "value": "@variables('SftpFileName')",
                                                "type": "Expression"
                                            },
                                            "adlsName": {
                                                "value": "@pipeline().parameters.adlsName",
                                                "type": "Expression"
                                            },
                                            "containerName": {
                                                "value": "@pipeline().parameters.ContainerName",
                                                "type": "Expression"
                                            },
                                            "mountPath": "/mnt/datalanding/",
                                            "rawpath": {
                                                "value": "@concat('raw/',split(variables('PurposeName'),' ')[0],'/',variables('PurposeName'),'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/',variables('AccountName'))",
                                                "type": "Expression"
                                            },
                                            "responseid": {
                                                "value": "@variables('NewResponseID')",
                                                "type": "Expression"
                                            },
                                            "source": "SFTP"
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vaulturl",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Check if File Exists in Archive",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "Set New Fileuploadmappingid",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_raw_file",
                                "type": "DatasetReference",
                                "parameters": {
                                    "foldername": {
                                        "value": "@concat('raw/',split(variables('PurposeName'),' ')[0],'/',variables('PurposeName'),'/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/',variables('AccountName'))",
                                        "type": "Expression"
                                    },
                                    "filename": {
                                        "value": "@variables('SftpFileName')",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "Set New ResponseID",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set AccountName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "NewResponseID",
                            "value": {
                                "value": "@guid()",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set New Fileuploadmappingid",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set New ResponseID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "NewFileUploadMappingID",
                            "value": {
                                "value": "@guid()",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "FilenameList": {
                        "type": "array"
                    },
                    "AccountID": {
                        "type": "string"
                    },
                    "Folder": {
                        "type": "string"
                    },
                    "ParentPipelineName": {
                        "type": "string"
                    },
                    "ParentPipelineRunID": {
                        "type": "string"
                    },
                    "ParentTriggerName": {
                        "type": "string"
                    },
                    "SubFolder": {
                        "type": "string"
                    },
                    "adlsName": {
                        "type": "string"
                    },
                    "containerName": {
                        "type": "string"
                    },
                    "SchemaFilename": {
                        "type": "string",
                        "defaultValue": "Schema.csv"
                    },
                    "sftpfilename": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "rnl_sftp_host": {
                        "type": "string"
                    },
                    "rnl_sftp_username": {
                        "type": "string"
                    },
                    "EmailSuccess": {
                        "type": "string"
                    },
                    "EmailFailure": {
                        "type": "string"
                    }
                },
                "variables": {
                    "SftpFileName": {
                        "type": "String"
                    },
                    "FileError": {
                        "type": "String"
                    },
                    "ResponseID": {
                        "type": "String"
                    },
                    "AccountName": {
                        "type": "String"
                    },
                    "PurposeName": {
                        "type": "String"
                    },
                    "OriginalName": {
                        "type": "String"
                    },
                    "ResponseError": {
                        "type": "String"
                    },
                    "NewResponseID": {
                        "type": "String"
                    },
                    "NewFileUploadMappingID": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Datalanding/SFTPtoADLS"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-06T21:05:03Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-loop-alignment-to-crm')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "upsert_contact",
                        "description": "upsert records in contactbase in crm and update crm_flag in alignment.contactbase",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "check_if_contactbase_processed",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-upsert-contact",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "crm_server_name": {
                                    "value": "@pipeline().parameters.crm_server_name",
                                    "type": "Expression"
                                },
                                "crm_database_name": {
                                    "value": "@pipeline().parameters.crm_database_name",
                                    "type": "Expression"
                                },
                                "is_log_on": {
                                    "value": "@pipeline().parameters.is_log_on",
                                    "type": "Expression"
                                },
                                "parent_runid": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "storage_account_name": {
                                    "value": "@pipeline().parameters.storage_account_name",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "upsert_po_application",
                        "description": "upsert records in po_application in crm and update crm_flag in alignment.po_application",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "copy_to_contact_ref_historical",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-upsert-po-application",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "crm_server_name": {
                                    "value": "@pipeline().parameters.crm_server_name",
                                    "type": "Expression"
                                },
                                "crm_database_name": {
                                    "value": "@pipeline().parameters.crm_database_name",
                                    "type": "Expression"
                                },
                                "is_log_on": {
                                    "value": "@pipeline().parameters.is_log_on",
                                    "type": "Expression"
                                },
                                "parent_runid": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "storage_account_name": {
                                    "value": "@pipeline().parameters.storage_account_name",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "upsert_po_id",
                        "description": "upsert records in po_idbase in crm and update crm_flag in alignment.po_idbase",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "copy_to_contact_ref_historical",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-upsert-po-id",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "crm_server_name": {
                                    "value": "@pipeline().parameters.crm_server_name",
                                    "type": "Expression"
                                },
                                "crm_database_name": {
                                    "value": "@pipeline().parameters.crm_database_name",
                                    "type": "Expression"
                                },
                                "is_log_on": {
                                    "value": "@pipeline().parameters.is_log_on",
                                    "type": "Expression"
                                },
                                "parent_runid": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "storage_account_name": {
                                    "value": "@pipeline().parameters.storage_account_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "upsert_po_interest",
                        "description": "upsert records in po_interestbase in crm and update crm_flag in alignment.po_interestbase ",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "copy_to_contact_ref_historical",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-upsert-po-interest",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "crm_server_name": {
                                    "value": "@pipeline().parameters.crm_server_name",
                                    "type": "Expression"
                                },
                                "crm_database_name": {
                                    "value": "@pipeline().parameters.crm_database_name",
                                    "type": "Expression"
                                },
                                "is_log_on": {
                                    "value": "@pipeline().parameters.is_log_on",
                                    "type": "Expression"
                                },
                                "parent_runid": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "storage_account_name": {
                                    "value": "@pipeline().parameters.storage_account_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "upsert_po_race",
                        "description": "upsert records in po_racebase in crm and update crm_flag in alignment.po_racebase ",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "copy_to_contact_ref_historical",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-upsert-po-race",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "crm_server_name": {
                                    "value": "@pipeline().parameters.crm_server_name",
                                    "type": "Expression"
                                },
                                "crm_database_name": {
                                    "value": "@pipeline().parameters.crm_database_name",
                                    "type": "Expression"
                                },
                                "is_log_on": {
                                    "value": "@pipeline().parameters.is_log_on",
                                    "type": "Expression"
                                },
                                "parent_runid": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "storage_account_name": {
                                    "value": "@pipeline().parameters.storage_account_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "upsert_po_schoolattendance",
                        "description": "upsert records in po_schoolattendance in crm and update crm_flag in alignment.po_schoolattendance ",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "copy_to_contact_ref_historical",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-upsert-po-schoolattendence",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "crm_server_name": {
                                    "value": "@pipeline().parameters.crm_server_name",
                                    "type": "Expression"
                                },
                                "crm_database_name": {
                                    "value": "@pipeline().parameters.crm_database_name",
                                    "type": "Expression"
                                },
                                "is_log_on": {
                                    "value": "@pipeline().parameters.is_log_on",
                                    "type": "Expression"
                                },
                                "parent_runid": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "storage_account_name": {
                                    "value": "@pipeline().parameters.storage_account_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "upsert_contact_relationship",
                        "description": "upsert records in contact_relationship in crm and update crm_flag in alignment.contact_relationship",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "copy_to_contact_ref_historical",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-upsert-relationships",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "crm_server_name": {
                                    "value": "@pipeline().parameters.crm_server_name",
                                    "type": "Expression"
                                },
                                "crm_database_name": {
                                    "value": "@pipeline().parameters.crm_database_name",
                                    "type": "Expression"
                                },
                                "is_log_on": {
                                    "value": "@pipeline().parameters.is_log_on",
                                    "type": "Expression"
                                },
                                "parent_runid": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "storage_account_name": {
                                    "value": "@pipeline().parameters.storage_account_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "copy_files_to_archive_post",
                        "description": "copy files from processing to archive folder in adls",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "copy_to_crm_rejcted_rows_historical",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": "processing/*",
                                    "wildcardFileName": "*.parquet",
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings",
                                    "copyBehavior": "PreserveHierarchy"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_adls_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "crmalignment",
                                    "FilePath": "processing/*",
                                    "FileName": "*.parquet",
                                    "storage_account_name": {
                                        "value": "@pipeline().parameters.storage_account_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_archive_file_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folder_name": {
                                        "value": "@concat('archive/',pipeline().parameters.parent_runid)",
                                        "type": "Expression"
                                    },
                                    "storage_account_name": {
                                        "value": "@pipeline().parameters.storage_account_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "delete_files_from_processing_post",
                        "description": "delete files from processing folder in adls",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "copy_files_to_archive_post",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_archive_file_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folder_name": "processing",
                                    "storage_account_name": {
                                        "value": "@pipeline().parameters.storage_account_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "*.parquet",
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "copy_to_contact_ref_historical",
                        "description": "copy records from contact_ref to contact_ref_historical",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "upsert_contact",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-copy-contact-ref-historical",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "copy_files_to_archive_pre",
                        "description": "copy files from processing to archive folder in adls",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": "processing/*",
                                    "wildcardFileName": "*.parquet",
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings",
                                    "copyBehavior": "PreserveHierarchy"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_adls_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "crmalignment",
                                    "FilePath": "processing/*",
                                    "FileName": "*.parquet",
                                    "storage_account_name": {
                                        "value": "@pipeline().parameters.storage_account_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_archive_file_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folder_name": {
                                        "value": "@concat('archive/',pipeline().parameters.parent_runid)",
                                        "type": "Expression"
                                    },
                                    "storage_account_name": {
                                        "value": "@pipeline().parameters.storage_account_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "delete_files_from_processing_pre",
                        "description": "delete files from processing folder in adls",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "copy_files_to_archive_pre",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_archive_file_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folder_name": "processing",
                                    "storage_account_name": {
                                        "value": "@pipeline().parameters.storage_account_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "*.parquet",
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "truncate_contact_ref",
                        "description": "truncate table dbo.contact_ref\n",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "delete_files_from_processing_pre",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": "truncate table alignment.contact_ref"
                                }
                            ]
                        }
                    },
                    {
                        "name": "fetch_file_metadata",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "truncate_crm_rejcted_rows",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select mapping_id,account_name,purpose_name from audit.file_metadata where trim(response_id)='@{pipeline().parameters.response_id}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "file_metadata",
                                    "schemaname": "audit",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "copy_to_stg_update_crm_flag_historical",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "update_contact_base_crm_flag",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "stg_update_crm_flag",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "stg_update_crm_flag_historical",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "truncate_stg_update_crm_flag",
                        "description": "truncate table alignment.stg_update_crm_flag\n",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "truncate_contact_ref",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": "truncate table alignment.stg_update_crm_flag"
                                }
                            ]
                        }
                    },
                    {
                        "name": "check_if_contactbase_processed",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "fetch_file_metadata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": {
                                        "value": "declare @failed int,@processed int \n\nselect @failed=count(*) \nfrom audit.file_processing_log\nwhere response_id='@{pipeline().parameters.response_id}'\nand audit_id=606 \nand soft_delete=0\n\nselect @processed=count(*) \nfrom audit.file_processing_log\nwhere response_id='@{pipeline().parameters.response_id}'\nand  audit_id = 605\nand soft_delete=0\n\nif @failed > 0 or @processed = 0 \n    select  ('run contact base') as status\nelse \nbegin\n    select ('skip') as status\n    update alignment.contactbase\n    set crm_flag=1\n    where response_id='@{pipeline().parameters.response_id}'\nend",
                                        "type": "Expression"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "fail_audit_contactbase",
                        "description": "Doing File Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "upsert_contact",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "606",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "CRM_Contactbase",
                                "status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "row_count": "0",
                                "rejected_row": "0",
                                "error_description": {
                                    "value": "@activity('upsert_contact').error.message\r\n",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_audit_po_application",
                        "description": "Doing File Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "upsert_po_application",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "609",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "CRM_Po_Application",
                                "status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "row_count": "0",
                                "rejected_row": "0",
                                "error_description": {
                                    "value": "@activity('upsert_po_application').error.message\n",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_audit_po_id",
                        "description": "Doing File Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "upsert_po_id",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "615",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "CRM_Po_Idbase",
                                "status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "row_count": "0",
                                "rejected_row": "0",
                                "error_description": {
                                    "value": "@activity('upsert_po_id').error.message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_audit_po_interest",
                        "description": "Doing File Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "upsert_po_interest",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "618",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "CRM_Po_Interestbase",
                                "status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "row_count": "0",
                                "rejected_row": "0",
                                "error_description": {
                                    "value": "@activity('upsert_po_interest').error.message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_audit_po_race",
                        "description": "Doing File Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "upsert_po_race",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "612",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "CRM_Po_Race",
                                "status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "row_count": "0",
                                "rejected_row": "0",
                                "error_description": {
                                    "value": "@activity('upsert_po_race').error.message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_audit_po_schoolattendance",
                        "description": "Doing File Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "upsert_po_schoolattendance",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "621",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "CRM_Po_SchoolAttendance",
                                "status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "row_count": "0",
                                "rejected_row": "0",
                                "error_description": {
                                    "value": "@activity('upsert_po_schoolattendance').error.message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_audit_contact_relationship",
                        "description": "Doing File Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "upsert_contact_relationship",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "627",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_runid",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "CRM_Contact_relationship",
                                "status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].mapping_id",
                                    "type": "Expression"
                                },
                                "account_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].account_name",
                                    "type": "Expression"
                                },
                                "purpose_file_name": {
                                    "value": "@activity('fetch_file_metadata').output.value[0].purpose_name",
                                    "type": "Expression"
                                },
                                "row_count": "0",
                                "rejected_row": "0",
                                "error_description": {
                                    "value": "@activity('upsert_contact_relationship').error.message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "update_failed_crm_flag_application",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "fail_audit_po_application",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[alignment].[sp_update_failed_crm_flag]",
                            "storedProcedureParameters": {
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "update_failed_crm_flag_id",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "fail_audit_po_id",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[alignment].[sp_update_failed_crm_flag]",
                            "storedProcedureParameters": {
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "update_failed_crm_flag_interest",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "fail_audit_po_interest",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[alignment].[sp_update_failed_crm_flag]",
                            "storedProcedureParameters": {
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "update_failed_crm_flag_race",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "fail_audit_po_race",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[alignment].[sp_update_failed_crm_flag]",
                            "storedProcedureParameters": {
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "update_failed_crm_flag_schoolattendance",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "fail_audit_po_schoolattendance",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[alignment].[sp_update_failed_crm_flag]",
                            "storedProcedureParameters": {
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "update_failed_crm_flag_reationship",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "fail_audit_contact_relationship",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[alignment].[sp_update_failed_crm_flag]",
                            "storedProcedureParameters": {
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "update_failed_crm_flag_contact",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "fail_audit_contactbase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[alignment].[sp_update_failed_crm_flag]",
                            "storedProcedureParameters": {
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "update_contact_base_crm_flag",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "upsert_po_interest",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upsert_po_id",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upsert_po_application",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upsert_po_race",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upsert_po_schoolattendance",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "upsert_contact_relationship",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[alignment].[sp_update_crm_flag]",
                            "storedProcedureParameters": {
                                "table_name": {
                                    "value": "alignment.contactbase",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "truncate_crm_rejcted_rows",
                        "description": "truncate table alignment.stg_update_crm_flag\n",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "truncate_stg_update_crm_flag",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": "truncate table alignment.crm_rejcted_rows"
                                }
                            ]
                        }
                    },
                    {
                        "name": "copy_to_crm_rejcted_rows_historical",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "copy_to_stg_update_crm_flag_historical",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-copy-crm-rejcted-rows-historical",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "update_priority_file_run",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "delete_files_from_processing_post",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": {
                                        "value": "update alignment.priority_file_run\nset soft_delete=1,\n    modified_datetime=getdate(),\n    modified_by=suser_sname()\nwhere response_id='@{pipeline().parameters.response_id}'",
                                        "type": "Expression"
                                    }
                                }
                            ],
                            "scriptBlockExecutionTimeout": "02:00:00"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "parent_runid": {
                        "type": "string"
                    },
                    "azure_sql_server_name": {
                        "type": "string"
                    },
                    "azure_sql_database_name": {
                        "type": "string"
                    },
                    "crm_server_name": {
                        "type": "string"
                    },
                    "crm_database_name": {
                        "type": "string"
                    },
                    "is_log_on": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "storage_account_name": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "alignment-To-CRM"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-12T09:10:10Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-SearchVendor-UnZip-RollUp')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "FolderName Details",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "UnZip and add SourceCode",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_input",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "FilePath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "itemName"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "var FolderName Details",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "FolderName Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FolderName",
                            "value": {
                                "value": "@activity('FolderName Details').output.itemName",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Vendor LookUp Details",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "var FolderName Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT DISTINCT ResponseID from lkp.Vendor where Vendor='@{variables('FolderName')}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "vendor",
                                    "schemaname": "lkp",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_sql_db_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Zip File Details",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_input",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "FilePath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "UnZip and add SourceCode",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Filter Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Filter Files').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Unzip and SourceCode Column",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "var SourceCode",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "Source_Code",
                                                    "value": {
                                                        "value": "@variables('SourceCode')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@pipeline().parameters.InputFilePath",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings",
                                                "compressionProperties": {
                                                    "type": "ZipDeflateReadSettings",
                                                    "preserveZipFileNameAsFolder": false
                                                }
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_adls_input",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@pipeline().parameters.InputFilePath",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_withoutheader",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Container": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@concat(substring(item().name,0,add(length(item().name),-3)),'csv')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "var SourceCode",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "SourceCode",
                                        "value": {
                                            "value": "@string(substring(item().name,0,lastIndexOf(item().name,'-')))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "ETL Audit - Unzip and SourceCode Column",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Unzip and SourceCode Column",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTrigger",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Unzip and SourceCode Column').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Raw to Inbound folder and Metadata extraction",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Delete Processed Source Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-sftp-file-validation-raw-to-em_inbound",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SftpFileName": {
                                    "value": "@variables('NewFileName')",
                                    "type": "Expression"
                                },
                                "AccountID": {
                                    "value": "@pipeline().parameters.AccountID",
                                    "type": "Expression"
                                },
                                "ResponseID": {
                                    "value": "@variables('ResponseID')",
                                    "type": "Expression"
                                },
                                "AccountName": {
                                    "value": "@variables('AccountName')",
                                    "type": "Expression"
                                },
                                "PurposeName": {
                                    "value": "@variables('PurposeName')",
                                    "type": "Expression"
                                },
                                "ParentPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ParentPipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ParentPipelineTriggerName": {
                                    "value": "@pipeline().TriggerId",
                                    "type": "Expression"
                                },
                                "FiscalMonth": {
                                    "value": "@pipeline().parameters.CurrentMonth",
                                    "type": "Expression"
                                },
                                "FiscalYear": {
                                    "value": "@pipeline().parameters.CurrentYear",
                                    "type": "Expression"
                                },
                                "RowsRead": 1,
                                "RowsWritten": 1,
                                "OriginalName": {
                                    "value": "@variables('NewFileName')",
                                    "type": "Expression"
                                },
                                "source": "Search Vendor",
                                "NewResponseID": {
                                    "value": "@variables('NewResponseID')",
                                    "type": "Expression"
                                },
                                "NewFileUploadMappingID": {
                                    "value": "@variables('NewMappingID')",
                                    "type": "Expression"
                                },
                                "SchemaFilename": {
                                    "value": "@pipeline().parameters.SchemaFileName",
                                    "type": "Expression"
                                },
                                "adlsName": {
                                    "value": "@pipeline().parameters.adlsName",
                                    "type": "Expression"
                                },
                                "containerName": {
                                    "value": "@pipeline().parameters.ContainerName",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "EmailSuccess": {
                                    "value": "@pipeline().parameters.EmailSuccess",
                                    "type": "Expression"
                                },
                                "EmailFailure": {
                                    "value": "@pipeline().parameters.EmailFailure",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Set Modified FileName",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "var ResponseID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "NewFileName",
                            "value": {
                                "value": "@concat(variables('FolderName'),'_',variables('ResponseID'),'_',formatDateTime(utcnow(), 'MMddyyyy'),'.csv')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fetch AccountName",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set Modified FileName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select Name from AccountBase where AccountId='@{pipeline().parameters.AccountID}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set AccountName",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Fetch AccountName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "AccountName",
                            "value": {
                                "value": "@activity('Fetch AccountName').output.value[0].Name",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fetch PurposeName",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set Modified FileName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select pb.popb_name from popb_fileuploadmappingBase fb join popb_purposeBase pb\non fb.popb_purposeid=pb.popb_purposeId \nwhere fb.popb_responseid='@{variables('ResponseID')}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set PurposeName",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Fetch PurposeName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "PurposeName",
                            "value": {
                                "value": "@if(equals(length(activity('Fetch PurposeName').output.value),0),'',activity('Fetch PurposeName').output.value[0].popb_name)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Delete Source Staging Folder",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "If Condition",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_fetchFilesFromADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "filePath": {
                                        "value": "@pipeline().parameters.IntermediateFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "var ResponseID",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Vendor LookUp Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ResponseID",
                            "value": {
                                "value": "@activity('Vendor LookUp Details').output.value[0].ResponseID",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - File Ingestion Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Raw to Inbound folder and Metadata extraction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailSuccess",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"diafplus@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"Search vendor File Ingestion Successful!\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Filter Files",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Zip File Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Zip File Details').output.childItems",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().type,'File')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Move zip files to Archive",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Delete Source Staging Folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_fetchFilesFromADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "filePath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_fetchFilesFromADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "filePath": {
                                        "value": "@replace(pipeline().parameters.InputFilePath,'searchvendor','raw/raw_archived/EM/EM Search Vendor Data')\n",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Delete Processed Source Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Move zip files to Archive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_fetchFilesFromADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "filePath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "*",
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "If Condition",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Set New Fileuploadmappingid",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set New ResponseID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(variables('FolderName'),'College Board')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Roll Up and Rename",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings",
                                                "copyBehavior": "MergeFiles"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_adls_withoutheader",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Container": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "FileName": "*",
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_withoutheader",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Container": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@concat(pipeline().parameters.OutputFilepath,'/EM/EM Search Vendor Data/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/', variables('AccountName'))",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@variables('NewFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "File Audit - Roll Up and Rename",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Roll Up and Rename",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "101",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@variables('NewResponseID')",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@variables('PurposeName')",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@variables('AccountName')",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "Raw",
                                            "status": "Copied In Raw Folder",
                                            "row_count": {
                                                "value": "@string(activity('Roll Up and Rename').output.rowsRead)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "ETL Audit - Unzip and SourceCode Column_copy1",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Roll Up and Rename",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTrigger",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Roll Up and Rename').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Roll Up and Rename_College Board",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings",
                                                "copyBehavior": "MergeFiles"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_adls_withoutheader",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Container": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "FileName": "*",
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_withoutheader",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Container": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@concat(pipeline().parameters.IntermediateFilePath,'/staging')",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@variables('NewFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "File Audit - Roll Up and Rename_College Board",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Roll Up and Rename_College Board",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "101",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@variables('NewResponseID')",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@variables('PurposeName')",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@variables('AccountName')",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "Raw",
                                            "status": "Copied In Raw Folder",
                                            "row_count": {
                                                "value": "@string(activity('Roll Up and Rename_College Board').output.rowsRead)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "ETL Audit - Roll Up and Rename_College Board",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Roll Up and Rename_College Board",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTrigger",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Roll Up and Rename_College Board').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "dbn-merge-searchvendor-cb-file",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Roll Up and Rename_College Board",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/dbn-merge-searchvendor-cb-file",
                                        "baseParameters": {
                                            "FileName": {
                                                "value": "@variables('NewFileName')",
                                                "type": "Expression"
                                            },
                                            "adlsName": {
                                                "value": "@pipeline().parameters.adlsName",
                                                "type": "Expression"
                                            },
                                            "containerName": {
                                                "value": "@pipeline().parameters.ContainerName",
                                                "type": "Expression"
                                            },
                                            "mountPath": "/mnt/datalanding",
                                            "rawpath": {
                                                "value": "@concat(pipeline().parameters.IntermediateFilePath,'/staging')",
                                                "type": "Expression"
                                            },
                                            "destinationpath": {
                                                "value": "@concat(pipeline().parameters.OutputFilepath,'/EM/EM Search Vendor Data/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/', variables('AccountName'))",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set New ResponseID",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set AccountName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "NewResponseID",
                            "value": {
                                "value": "@guid()",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set New Fileuploadmappingid",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set PurposeName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "NewMappingID",
                            "value": {
                                "value": "@guid()",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ContainerName": {
                        "type": "string"
                    },
                    "InputFilePath": {
                        "type": "string",
                        "defaultValue": "em_search_vendor/2022/02/louisiana_state_em/college board"
                    },
                    "OutputFilepath": {
                        "type": "string",
                        "defaultValue": "raw"
                    },
                    "IntermediateFilePath": {
                        "type": "string",
                        "defaultValue": "em_search_vendor/intermediate_output"
                    },
                    "AccountID": {
                        "type": "string"
                    },
                    "CurrentMonth": {
                        "type": "string"
                    },
                    "CurrentYear": {
                        "type": "string"
                    },
                    "ParentPipelineRunID": {
                        "type": "string"
                    },
                    "ParentPipelineName": {
                        "type": "string"
                    },
                    "ParentPipelineTrigger": {
                        "type": "string"
                    },
                    "adlsName": {
                        "type": "string"
                    },
                    "SchemaFileName": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "EmailSuccess": {
                        "type": "string"
                    },
                    "EmailFailure": {
                        "type": "string"
                    }
                },
                "variables": {
                    "ResponseID": {
                        "type": "String"
                    },
                    "FolderName": {
                        "type": "String"
                    },
                    "SourceCode": {
                        "type": "String"
                    },
                    "NewFileName": {
                        "type": "String"
                    },
                    "AccountName": {
                        "type": "String"
                    },
                    "PurposeName": {
                        "type": "String"
                    },
                    "NewResponseID": {
                        "type": "String"
                    },
                    "NewMappingID": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Datalanding/SearchVendortoADLS"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-22T22:04:48Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-fplus-forward-flow')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "load-crm-to-crmsynapse-fplus",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - Start",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-master-crm-to-crmsynapse-fplus",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "CRM Extract and Axiom Data Update",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Get Dq Lookup from CRM",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-fqt-master-dataentry",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Distance Calculation",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "CRM Extract and Axiom Data Update",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-distance-calculation",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "DQ Checks - Master",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Distance Calculation",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_fplus_forwardflow_dqmaster",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Generate SAS XML Files",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "DQ Checks - Master",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_fplus_generate_xml_files",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "synapse_container": "prodcrmsynapse",
                                "adlsName": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "fplus_host": {
                                    "value": "@pipeline().parameters.fplus_host",
                                    "type": "Expression"
                                },
                                "fplus_username": {
                                    "value": "@pipeline().parameters.fplus_username",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Start",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1301",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - load-crm-to-crmsynapse-fplus",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "load-crm-to-crmsynapse-fplus",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1303",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('load-crm-to-crmsynapse-fplus').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - CRM Extract and Axiom Data Update",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "CRM Extract and Axiom Data Update",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1303",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('CRM Extract and Axiom Data Update').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Distance Calculation",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Distance Calculation",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1303",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('Distance Calculation').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Auidt - DQ Checks - Master",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "DQ Checks - Master",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1303",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('DQ Checks - Master').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Generate SAS XML Files",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Generate SAS XML Files",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1303",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - End",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Generate SAS XML Files",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1302",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email - load-crm-to-crmsynapse-fplus",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - load-crm-to-crmsynapse-fplus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-master-crm-to-crmsynapse-fplus' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - CRM Extract and Axiom Data Update",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - CRM Extract and Axiom Data Update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-fqt-master-dataentry' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - Distance Calculation",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - Distance Calculation",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-distance-calculation' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - DQ Checks - Master",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Auidt - DQ Checks - Master",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip_fplus_forwardflow_dqmaster' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - Generate SAS XML Files",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - Generate SAS XML Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-fplus-generate-xml-files' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - Fplus forward flow",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - End",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailSuccess",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"Fplus fowrard flow Successfull!\"\n}\n",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Get Dq Lookup from CRM",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "load-crm-to-crmsynapse-fplus",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_loaddetain_dqlookup",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": "10.200.0.22",
                                "crm_dbname": "RNLMAP_MSCRM",
                                "crm_username": "svc_az_ndp",
                                "vault_url": "https://rnlndp-prodkeyvault.vault.azure.net/",
                                "az_synapse_crm_server": "rnlndpprodcrmsynapse.sql.azuresynapse.net",
                                "az_synapse_crm_db": "NDPPRODCRMPL1"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "EmailSuccess": {
                        "type": "string",
                        "defaultValue": "https://prod-51.westus.logic.azure.com:443/workflows/5ebd1dba8bbb492e812b84f4e86ba426/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=1oKEwEZsA9W2ZHGi6e1ihm_4mpccHBle9UZjdW1uOkQ"
                    },
                    "EmailFailure": {
                        "type": "string",
                        "defaultValue": "https://prod-142.westus.logic.azure.com:443/workflows/5076b5f623944e73a73d414747a65c6f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QRg61OekEK1VZcXvQ400AcHr41s8V4BW3mqk5l_sNEM"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "fplus_host": {
                        "type": "string",
                        "defaultValue": "\\\\10.3.30.67\\SoftScore"
                    },
                    "fplus_username": {
                        "type": "string",
                        "defaultValue": "RNLWINSASCOMP1\\svc_prod_fqt"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-14T09:40:13Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-filecopy-blob-to-adls-master')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This pipeline copies the file present in Blob uploaded via client portal to ADLS raw location",
                "activities": [
                    {
                        "name": "ForEach",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetResponseID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetResponseID').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "check if response_id already processed",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSqlDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                            "az_sql_db": "NDPPRODSQLDB"
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "response_id",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@item().popb_responseid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": "declare @check_responseid VARCHAR(MAX)\r\nselect @check_responseid=response_id from audit.file_processing_log where response_id=@response_id \r\nand file_processing_stage='em_inbound' and status='Copied In em_inbound folder'\r\n\r\nif @check_responseid is null\r\nbegin\r\n\tselect 'No' as is_processed\r\nend\r\nelse\r\n\tselect 'Yes' as is_processed"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "if response_id not processed",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "check if response_id already processed",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('check if response_id already processed').output.resultSets[0].rows[0].is_processed,'No' )",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "File status update",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:10:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlServerSource",
                                                        "sqlReaderQuery": {
                                                            "value": "select popb_fileuploadmappingid,777250008 as statuscode,0 as statecode from popb_fileuploadmappingBase where popb_responseid='@{item().popb_responseid}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "DynamicsCrmSink",
                                                        "writeBatchSize": 10,
                                                        "writeBehavior": "upsert"
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "popb_fileuploadmappingid",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "popb_fileuploadmappingid",
                                                                    "type": "Guid"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "statecode",
                                                                    "type": "String",
                                                                    "physicalType": "varchar"
                                                                },
                                                                "sink": {
                                                                    "name": "statecode",
                                                                    "type": "Int32"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "statuscode",
                                                                    "type": "String",
                                                                    "physicalType": "varchar"
                                                                },
                                                                "sink": {
                                                                    "name": "statuscode",
                                                                    "type": "Int32"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_appboost_crm",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "crm_schema": "dbo",
                                                            "crm_table": "popb_fileuploadmappingBase",
                                                            "crm_servername": {
                                                                "value": "@pipeline().parameters.crm_servername",
                                                                "type": "Expression"
                                                            },
                                                            "crm_dbname": {
                                                                "value": "@pipeline().parameters.crm_dbname",
                                                                "type": "Expression"
                                                            },
                                                            "crm_username": {
                                                                "value": "@pipeline().parameters.crm_username",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_Fileuploadmapping",
                                                        "type": "DatasetReference",
                                                        "parameters": {}
                                                    }
                                                ]
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute blob to adls",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "pip-filecopy-blob-to-adls",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "ContainerName": {
                                                            "value": "@pipeline().parameters.ContainerName",
                                                            "type": "Expression"
                                                        },
                                                        "rawFilePath": {
                                                            "value": "@pipeline().parameters.rawFilePath",
                                                            "type": "Expression"
                                                        },
                                                        "Audit_Type_Pipeline": {
                                                            "value": "@pipeline().parameters.Audit_Type_Pipeline",
                                                            "type": "Expression"
                                                        },
                                                        "Audit_Type_File": {
                                                            "value": "@pipeline().parameters.Audit_Type_File",
                                                            "type": "Expression"
                                                        },
                                                        "Pipeline_Start_Status": {
                                                            "value": "@pipeline().parameters.Pipeline_Start_Status",
                                                            "type": "Expression"
                                                        },
                                                        "Pipeline_Complete_Status": {
                                                            "value": "@pipeline().parameters.Pipeline_Complete_Status",
                                                            "type": "Expression"
                                                        },
                                                        "Pipeline_Error_Status": {
                                                            "value": "@pipeline().parameters.Pipeline_Error_Status",
                                                            "type": "Expression"
                                                        },
                                                        "File_Location_Status_Blob_to_Raw": {
                                                            "value": "@pipeline().parameters.File_Location_Status_Blob_to_Raw",
                                                            "type": "Expression"
                                                        },
                                                        "File_Location_Status_Raw_to_Validated": {
                                                            "value": "@pipeline().parameters.File_Location_Status_Raw_to_Validated",
                                                            "type": "Expression"
                                                        },
                                                        "File_Location_Status_Raw_to_Raw_archive": {
                                                            "value": "@pipeline().parameters.File_Location_Status_Raw_to_Raw_archive",
                                                            "type": "Expression"
                                                        },
                                                        "File_Location_Status_Raw_to_Reject": {
                                                            "value": "@pipeline().parameters.File_Location_Status_Raw_to_Reject",
                                                            "type": "Expression"
                                                        },
                                                        "File_Location_Status_Validated_to_EMInbound": {
                                                            "value": "@pipeline().parameters.File_Location_Status_Validated_to_EMInbound",
                                                            "type": "Expression"
                                                        },
                                                        "File_Location_Status_Config_files_Copy": {
                                                            "value": "@pipeline().parameters.File_Location_Status_Config_files_Copy",
                                                            "type": "Expression"
                                                        },
                                                        "Area": {
                                                            "value": "@pipeline().parameters.Area",
                                                            "type": "Expression"
                                                        },
                                                        "InsertBy": {
                                                            "value": "@pipeline().parameters.InsertBy",
                                                            "type": "Expression"
                                                        },
                                                        "ValidatePath": {
                                                            "value": "@pipeline().parameters.ValidatePath",
                                                            "type": "Expression"
                                                        },
                                                        "RejectPath": {
                                                            "value": "@pipeline().parameters.RejectPath",
                                                            "type": "Expression"
                                                        },
                                                        "Raw_Archived": {
                                                            "value": "@pipeline().parameters.Raw_Archived",
                                                            "type": "Expression"
                                                        },
                                                        "Inbound": {
                                                            "value": "@pipeline().parameters.Inbound",
                                                            "type": "Expression"
                                                        },
                                                        "adlsName": {
                                                            "value": "@pipeline().parameters.adlsName",
                                                            "type": "Expression"
                                                        },
                                                        "schemaFilename": {
                                                            "value": "@pipeline().parameters.schemaFilename",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_server_name": {
                                                            "value": "@pipeline().parameters.az_sql_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db_name": {
                                                            "value": "@pipeline().parameters.az_sql_db_name",
                                                            "type": "Expression"
                                                        },
                                                        "OriginalFilename": {
                                                            "value": "@item().popb_uploadedfilename",
                                                            "type": "Expression"
                                                        },
                                                        "PurposeName": {
                                                            "value": "@item().popb_purposeidname",
                                                            "type": "Expression"
                                                        },
                                                        "ResponseID": {
                                                            "value": "@item().popb_responseid",
                                                            "type": "Expression"
                                                        },
                                                        "crm_servername": {
                                                            "value": "@pipeline().parameters.crm_servername",
                                                            "type": "Expression"
                                                        },
                                                        "crm_dbname": {
                                                            "value": "@pipeline().parameters.crm_dbname",
                                                            "type": "Expression"
                                                        },
                                                        "crm_username": {
                                                            "value": "@pipeline().parameters.crm_username",
                                                            "type": "Expression"
                                                        },
                                                        "vault_url": {
                                                            "value": "@pipeline().parameters.vault_url",
                                                            "type": "Expression"
                                                        },
                                                        "databricks_workspace_url": {
                                                            "value": "@pipeline().parameters.databricks_workspace_url",
                                                            "type": "Expression"
                                                        },
                                                        "databricks_clusterid": {
                                                            "value": "@pipeline().parameters.databricks_clusterid",
                                                            "type": "Expression"
                                                        },
                                                        "blobname": {
                                                            "value": "@pipeline().parameters.blobname",
                                                            "type": "Expression"
                                                        },
                                                        "EmailSuccess": {
                                                            "value": "@pipeline().parameters.EmailSuccess",
                                                            "type": "Expression"
                                                        },
                                                        "EmailFailure": {
                                                            "value": "@pipeline().parameters.EmailFailure",
                                                            "type": "Expression"
                                                        },
                                                        "FileUploadedBy": {
                                                            "value": "@item().FileUploadedBy",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetResponseID",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "start_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select f.popb_purposeid, f.popb_responseid,f.popb_fileuploadmappingid,\np.popb_name [popb_purposeidname], r.popb_name [popb_responseidname],f.popb_uploadedfilename ,\ncase when cb.fullname is null then 'System User'\nelse cb.fullname \nend  FileUploadedBy \nfrom popb_fileuploadmappingBase f\ninner join popb_responsesBase r on f.popb_responseid=r.popb_responsesid\ninner join popb_purposeBase p on f.popb_purposeid=p.popb_purposeid\nleft join dbo.contactbase  cb with (nolock) on cb.contactid = r.popb_contact\n where popb_processenddate is null \n and (r.popb_name not like 'From UNC Path%' or r.popb_name is null)\n and f.statuscode='777250002'\n and p.popb_name like 'EM%'\n   order by f.CreatedOn desc",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_fileuploadmappingBase",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "start_etl_audit",
                        "description": "starting ETL audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "101",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ContainerName": {
                        "type": "string",
                        "defaultValue": "datalanding"
                    },
                    "rawFilePath": {
                        "type": "string",
                        "defaultValue": "raw"
                    },
                    "Audit_Type_Pipeline": {
                        "type": "string",
                        "defaultValue": "ETL"
                    },
                    "Audit_Type_File": {
                        "type": "string",
                        "defaultValue": "File"
                    },
                    "Pipeline_Start_Status": {
                        "type": "string",
                        "defaultValue": "Started"
                    },
                    "Pipeline_Complete_Status": {
                        "type": "string",
                        "defaultValue": "Successful"
                    },
                    "Pipeline_Error_Status": {
                        "type": "string",
                        "defaultValue": "Failed"
                    },
                    "File_Location_Status_Blob_to_Raw": {
                        "type": "string",
                        "defaultValue": "In Data Landing- Raw"
                    },
                    "File_Location_Status_Raw_to_Validated": {
                        "type": "string",
                        "defaultValue": "In Data Landing- Validated"
                    },
                    "File_Location_Status_Raw_to_Raw_archive": {
                        "type": "string",
                        "defaultValue": "In Data Landing- Archived"
                    },
                    "File_Location_Status_Raw_to_Reject": {
                        "type": "string",
                        "defaultValue": "In Data Landing- Rejected"
                    },
                    "File_Location_Status_Validated_to_EMInbound": {
                        "type": "string",
                        "defaultValue": "In Data Landing- EMInbound(Filerenamed)"
                    },
                    "File_Location_Status_Config_files_Copy": {
                        "type": "string",
                        "defaultValue": "In Data Landing- Config files generated"
                    },
                    "Area": {
                        "type": "string",
                        "defaultValue": "DataLanding"
                    },
                    "InsertBy": {
                        "type": "string",
                        "defaultValue": "ADF_User"
                    },
                    "ValidatePath": {
                        "type": "string",
                        "defaultValue": "validated"
                    },
                    "RejectPath": {
                        "type": "string",
                        "defaultValue": "rejected"
                    },
                    "Raw_Archived": {
                        "type": "string",
                        "defaultValue": "raw_archived"
                    },
                    "Inbound": {
                        "type": "string",
                        "defaultValue": "em_inbound"
                    },
                    "adlsName": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "schemaFilename": {
                        "type": "string",
                        "defaultValue": "Schema.csv"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.26.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAPQA_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "blobname": {
                        "type": "string",
                        "defaultValue": "rnlprodblob"
                    },
                    "EmailSuccess": {
                        "type": "string",
                        "defaultValue": "https://prod-51.westus.logic.azure.com:443/workflows/5ebd1dba8bbb492e812b84f4e86ba426/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=1oKEwEZsA9W2ZHGi6e1ihm_4mpccHBle9UZjdW1uOkQ"
                    },
                    "EmailFailure": {
                        "type": "string",
                        "defaultValue": "https://prod-142.westus.logic.azure.com:443/workflows/5076b5f623944e73a73d414747a65c6f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QRg61OekEK1VZcXvQ400AcHr41s8V4BW3mqk5l_sNEM"
                    }
                },
                "variables": {
                    "RowNumMatch": {
                        "type": "Boolean"
                    },
                    "ResponseId": {
                        "type": "String"
                    },
                    "OriginalFileName": {
                        "type": "String"
                    },
                    "Filerowcount": {
                        "type": "String"
                    },
                    "ModifiedName": {
                        "type": "String"
                    },
                    "PurposeIdname": {
                        "type": "String"
                    },
                    "FileUploadMappingID": {
                        "type": "String"
                    },
                    "InstitutionName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Datalanding/BlobtoADLS"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-21T15:07:00Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-zeemee-forward-flow')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "default or adhoc flow",
                        "description": "If slugname not present from input parameter then it will execute default flow If slugname present zeemee adhoc flow  ",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.slugname,'UniversityName')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "zeemee_adhoc_pipeline",
                                    "description": "zeemee adhoc flow",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-zeemee-fw-adhoc-flow",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "windowStart": {
                                                "value": "@pipeline().parameters.windowStart",
                                                "type": "Expression"
                                            },
                                            "inputslug": {
                                                "value": "@pipeline().parameters.slugname",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "ParentTriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "crm_servername": {
                                                "value": "@pipeline().parameters.crm_servername",
                                                "type": "Expression"
                                            },
                                            "crm_dbname": {
                                                "value": "@pipeline().parameters.crm_dbname",
                                                "type": "Expression"
                                            },
                                            "crm_username": {
                                                "value": "@pipeline().parameters.crm_username",
                                                "type": "Expression"
                                            },
                                            "az_sql_server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            },
                                            "az_synapse_em_server": {
                                                "value": "@pipeline().parameters.az_synapse_em_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_db": {
                                                "value": "@pipeline().parameters.az_synapse_db",
                                                "type": "Expression"
                                            },
                                            "storageaccountname": {
                                                "value": "@pipeline().parameters.storageaccountname",
                                                "type": "Expression"
                                            },
                                            "zeemee_host": {
                                                "value": "@pipeline().parameters.zeemee_host",
                                                "type": "Expression"
                                            },
                                            "zeemee_username": {
                                                "value": "@pipeline().parameters.zeemee_username",
                                                "type": "Expression"
                                            },
                                            "containerName": {
                                                "value": "@pipeline().parameters.containerName",
                                                "type": "Expression"
                                            },
                                            "SuccessEmailURL": {
                                                "value": "@pipeline().parameters.SuccessEmailURL",
                                                "type": "Expression"
                                            },
                                            "FailureEmailURL": {
                                                "value": "@pipeline().parameters.FailureEmailURL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "zeemee_pipeline",
                                    "description": "zeemee default flow",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-zeemee-fw-default-flow",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "windowStart": {
                                                "value": "@pipeline().parameters.windowStart",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "ParentTriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "az_sql_server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "storageaccountname": {
                                                "value": "@pipeline().parameters.storageaccountname",
                                                "type": "Expression"
                                            },
                                            "containerName": {
                                                "value": "@pipeline().parameters.containerName",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            },
                                            "crm_servername": {
                                                "value": "@pipeline().parameters.crm_servername",
                                                "type": "Expression"
                                            },
                                            "crm_dbname": {
                                                "value": "@pipeline().parameters.crm_dbname",
                                                "type": "Expression"
                                            },
                                            "crm_username": {
                                                "value": "@pipeline().parameters.crm_username",
                                                "type": "Expression"
                                            },
                                            "az_synapse_em_server": {
                                                "value": "@pipeline().parameters.az_synapse_em_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_db": {
                                                "value": "@pipeline().parameters.az_synapse_db",
                                                "type": "Expression"
                                            },
                                            "zeemee_host": {
                                                "value": "@pipeline().parameters.zeemee_host",
                                                "type": "Expression"
                                            },
                                            "zeemee_username": {
                                                "value": "@pipeline().parameters.zeemee_username",
                                                "type": "Expression"
                                            },
                                            "SuccessEmailURL": {
                                                "value": "@pipeline().parameters.SuccessEmailURL",
                                                "type": "Expression"
                                            },
                                            "FailureEmailURL": {
                                                "value": "@pipeline().parameters.FailureEmailURL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "slugname": {
                        "type": "string"
                    },
                    "windowStart": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "az_synapse_em_server": {
                        "type": "string"
                    },
                    "az_synapse_db": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    },
                    "containerName": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "zeemee_host": {
                        "type": "string"
                    },
                    "zeemee_username": {
                        "type": "string"
                    },
                    "SuccessEmailURL": {
                        "type": "string"
                    },
                    "FailureEmailURL": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-12T05:12:24Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-campusesp-forward-flow')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "default or adhoc flow",
                        "description": "If slugname not present from input parameter then it will execute default flow If slugname present campusesp adhoc flow  ",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.slugname,'UniversityName')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "campusesp_adhoc_pipeline",
                                    "description": "campusesp adhoc flow",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-campusesp-fw-adhoc-flow",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "windowStart": {
                                                "value": "@pipeline().parameters.windowStart",
                                                "type": "Expression"
                                            },
                                            "inputslug": {
                                                "value": "@pipeline().parameters.slugname",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "ParentTriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "az_sql_server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "campuse_esp_host": {
                                                "value": "@pipeline().parameters.campuse_esp_host",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            },
                                            "storageaccountname": {
                                                "value": "@pipeline().parameters.storageaccountname",
                                                "type": "Expression"
                                            },
                                            "containerName": {
                                                "value": "@pipeline().parameters.containerName",
                                                "type": "Expression"
                                            },
                                            "crm_servername": {
                                                "value": "@pipeline().parameters.crm_servername",
                                                "type": "Expression"
                                            },
                                            "crm_dbname": {
                                                "value": "@pipeline().parameters.crm_dbname",
                                                "type": "Expression"
                                            },
                                            "crm_username": {
                                                "value": "@pipeline().parameters.crm_username",
                                                "type": "Expression"
                                            },
                                            "az_synapse_em_server": {
                                                "value": "@pipeline().parameters.az_synapse_em_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_db": {
                                                "value": "@pipeline().parameters.az_synapse_db",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "SuccessEmailURL": {
                                                "value": "@pipeline().parameters.SuccessEmailURL",
                                                "type": "Expression"
                                            },
                                            "FailureEmailURL": {
                                                "value": "@pipeline().parameters.FailureEmailURL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "campusesp_pipeline",
                                    "description": "campusesp default flow",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-campusesp-fw-default-flow",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "windowStart": {
                                                "value": "@pipeline().parameters.windowStart",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "ParentTriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "az_sql_server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "containerName": {
                                                "value": "@pipeline().parameters.containerName",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "crm_servername": {
                                                "value": "@pipeline().parameters.crm_servername",
                                                "type": "Expression"
                                            },
                                            "crm_dbname": {
                                                "value": "@pipeline().parameters.crm_dbname",
                                                "type": "Expression"
                                            },
                                            "crm_username": {
                                                "value": "@pipeline().parameters.crm_username",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            },
                                            "storageaccountname": {
                                                "value": "@pipeline().parameters.storageaccountname",
                                                "type": "Expression"
                                            },
                                            "campuse_esp_host": {
                                                "value": "@pipeline().parameters.campuse_esp_host",
                                                "type": "Expression"
                                            },
                                            "az_synapse_em_server": {
                                                "value": "@pipeline().parameters.az_synapse_em_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_db": {
                                                "value": "@pipeline().parameters.az_synapse_db",
                                                "type": "Expression"
                                            },
                                            "SuccessEmailURL": {
                                                "value": "@pipeline().parameters.SuccessEmailURL",
                                                "type": "Expression"
                                            },
                                            "FailureEmailURL": {
                                                "value": "@pipeline().parameters.FailureEmailURL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "slugname": {
                        "type": "string"
                    },
                    "windowStart": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "az_synapse_em_server": {
                        "type": "string"
                    },
                    "az_synapse_db": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    },
                    "containerName": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "campuse_esp_host": {
                        "type": "string"
                    },
                    "SuccessEmailURL": {
                        "type": "string"
                    },
                    "FailureEmailURL": {
                        "type": "string"
                    }
                },
                "variables": {
                    "childitem": {
                        "type": "String"
                    },
                    "name": {
                        "type": "String"
                    },
                    "nnp": {
                        "type": "String"
                    },
                    "sulgname": {
                        "type": "String",
                        "defaultValue": "null"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-12T12:35:30Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-SearchVendor-UnZip-RollUp_copy1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "FolderName Details",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "UnZip and add SourceCode",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_input",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "FilePath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "itemName"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "var FolderName Details",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "FolderName Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FolderName",
                            "value": {
                                "value": "@activity('FolderName Details').output.itemName",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Vendor LookUp Details",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "var FolderName Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT DISTINCT ResponseID from lkp.Vendor where Vendor='@{variables('FolderName')}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "vendor",
                                    "schemaname": "lkp",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_sql_db_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Zip File Details",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_input",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "FilePath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "UnZip and add SourceCode",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Filter Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Filter Files').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Unzip and SourceCode Column",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "var SourceCode",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "Source_Code",
                                                    "value": {
                                                        "value": "@variables('SourceCode')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@pipeline().parameters.InputFilePath",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings",
                                                "compressionProperties": {
                                                    "type": "ZipDeflateReadSettings",
                                                    "preserveZipFileNameAsFolder": false
                                                }
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_adls_input",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@pipeline().parameters.InputFilePath",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_withoutheader",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Container": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@concat(substring(item().name,0,add(length(item().name),-3)),'csv')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "var SourceCode",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "SourceCode",
                                        "value": {
                                            "value": "@string(substring(item().name,0,lastIndexOf(item().name,'-')))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Email - Unzip and SourceCode Failed",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "ETL Audit - Unzip and SourceCode Column",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@pipeline().parameters.EmailFailure",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"Unzip and SourceCode Failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"Unzip and SourceCode\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "ETL Audit - Unzip and SourceCode Column",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Unzip and SourceCode Column",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTrigger",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Unzip and SourceCode Column').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Raw to Inbound folder and Metadata extraction",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Delete Processed Source Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-sftp-file-validation-raw-to-em_inbound_bkp_06102022",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SftpFileName": {
                                    "value": "@variables('NewFileName')",
                                    "type": "Expression"
                                },
                                "AccountID": {
                                    "value": "@pipeline().parameters.AccountID",
                                    "type": "Expression"
                                },
                                "ResponseID": {
                                    "value": "@variables('ResponseID')",
                                    "type": "Expression"
                                },
                                "AccountName": {
                                    "value": "@variables('AccountName')",
                                    "type": "Expression"
                                },
                                "PurposeName": {
                                    "value": "@variables('PurposeName')",
                                    "type": "Expression"
                                },
                                "ParentPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ParentPipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ParentPipelineTriggerName": {
                                    "value": "@pipeline().TriggerId",
                                    "type": "Expression"
                                },
                                "FiscalMonth": {
                                    "value": "@pipeline().parameters.CurrentMonth",
                                    "type": "Expression"
                                },
                                "FiscalYear": {
                                    "value": "@pipeline().parameters.CurrentYear",
                                    "type": "Expression"
                                },
                                "RowsRead": 1,
                                "RowsWritten": 1,
                                "OriginalName": {
                                    "value": "@variables('NewFileName')",
                                    "type": "Expression"
                                },
                                "source": "Search Vendor",
                                "NewResponseID": {
                                    "value": "@variables('NewResponseID')",
                                    "type": "Expression"
                                },
                                "NewFileUploadMappingID": {
                                    "value": "@variables('NewMappingID')",
                                    "type": "Expression"
                                },
                                "SchemaFilename": {
                                    "value": "@pipeline().parameters.SchemaFileName",
                                    "type": "Expression"
                                },
                                "adlsName": {
                                    "value": "@pipeline().parameters.adlsName",
                                    "type": "Expression"
                                },
                                "containerName": {
                                    "value": "@pipeline().parameters.ContainerName",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "EmailSuccess": {
                                    "value": "@pipeline().parameters.EmailSuccess",
                                    "type": "Expression"
                                },
                                "EmailFailure": {
                                    "value": "@pipeline().parameters.EmailFailure",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Set Modified FileName",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "var ResponseID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "NewFileName",
                            "value": {
                                "value": "@concat(variables('FolderName'),'_',variables('ResponseID'),'_',formatDateTime(utcnow(), 'MMddyyyy'),'.csv')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fetch AccountName",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set Modified FileName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select Name from AccountBase where AccountId='@{pipeline().parameters.AccountID}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set AccountName",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Fetch AccountName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "AccountName",
                            "value": {
                                "value": "@activity('Fetch AccountName').output.value[0].Name",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fetch PurposeName",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set Modified FileName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "select pb.popb_name from popb_fileuploadmappingBase fb join popb_purposeBase pb\non fb.popb_purposeid=pb.popb_purposeId \nwhere fb.popb_responseid='@{variables('ResponseID')}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set PurposeName",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Fetch PurposeName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "PurposeName",
                            "value": {
                                "value": "@if(equals(length(activity('Fetch PurposeName').output.value),0),'',activity('Fetch PurposeName').output.value[0].popb_name)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Delete Source Staging Folder",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "If Condition",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_fetchFilesFromADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "filePath": {
                                        "value": "@pipeline().parameters.IntermediateFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "var ResponseID",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Vendor LookUp Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ResponseID",
                            "value": {
                                "value": "@activity('Vendor LookUp Details').output.value[0].ResponseID",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - File Ingestion Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Raw to Inbound folder and Metadata extraction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailSuccess",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"Search vendor File Ingestion Successful!\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Filter Files",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Zip File Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Zip File Details').output.childItems",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().type,'File')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Move zip files to Archive",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Delete Source Staging Folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_fetchFilesFromADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "filePath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_fetchFilesFromADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "filePath": {
                                        "value": "@replace(pipeline().parameters.InputFilePath,'searchvendor','raw/raw_archived/EM/EM Search Vendor Data')\n",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Delete Processed Source Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Move zip files to Archive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_fetchFilesFromADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "containerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "filePath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "*",
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "If Condition",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Set New Fileuploadmappingid",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set New ResponseID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(variables('FolderName'),'College Board')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Roll Up and Rename",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings",
                                                "copyBehavior": "MergeFiles"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_adls_withoutheader",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Container": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "FileName": "*",
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_withoutheader",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Container": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@concat(pipeline().parameters.OutputFilepath,'/EM/EM Search Vendor Data/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/', variables('AccountName'))",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@variables('NewFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "File Audit - Roll Up and Rename",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Roll Up and Rename",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "101",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@variables('NewResponseID')",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@variables('PurposeName')",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@variables('AccountName')",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "Raw",
                                            "status": "Copied In Raw Folder",
                                            "row_count": {
                                                "value": "@string(activity('Roll Up and Rename').output.rowsRead)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Email - Roll up and Rename",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "ETL Audit - Unzip and SourceCode Column_copy1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@pipeline().parameters.EmailFailure",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"Email - Roll up and Rename Failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"Roll up and Rename\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "ETL Audit - Unzip and SourceCode Column_copy1",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Roll Up and Rename",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTrigger",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Roll Up and Rename').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Roll Up and Rename_College Board",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings",
                                                "copyBehavior": "MergeFiles"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_adls_withoutheader",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Container": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "FileName": "*",
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_withoutheader",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Container": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@concat(pipeline().parameters.IntermediateFilePath,'/staging')",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@variables('NewFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Merge header and value_College Board",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [
                                        {
                                            "activity": "Roll Up and Rename_College Board",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "1.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "df_em_searchvendor_appendheader",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "DestinationFileName": {
                                                    "value": "'@{variables('NewFileName')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "Header": {
                                                    "Container": {
                                                        "value": "@pipeline().parameters.ContainerName",
                                                        "type": "Expression"
                                                    },
                                                    "FilePath": "searchvendor",
                                                    "FileName": "CollegeBoard_Header.csv",
                                                    "storageaccountname": {
                                                        "value": "@pipeline().parameters.adlsName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "Values": {
                                                    "Container": {
                                                        "value": "@pipeline().parameters.ContainerName",
                                                        "type": "Expression"
                                                    },
                                                    "FilePath": {
                                                        "value": "@concat(pipeline().parameters.IntermediateFilePath,'/staging')",
                                                        "type": "Expression"
                                                    },
                                                    "FileName": {
                                                        "value": "@variables('NewFileName')",
                                                        "type": "Expression"
                                                    },
                                                    "storageaccountname": {
                                                        "value": "@pipeline().parameters.adlsName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "Sink": {
                                                    "Container": {
                                                        "value": "@pipeline().parameters.ContainerName",
                                                        "type": "Expression"
                                                    },
                                                    "FilePath": {
                                                        "value": "@concat(pipeline().parameters.OutputFilepath,'/EM/EM Search Vendor Data/',formatDateTime(utcnow(), 'yyyy'),'/',formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'),'/', variables('AccountName'))",
                                                        "type": "Expression"
                                                    },
                                                    "FileName": {
                                                        "value": "@variables('NewFileName')",
                                                        "type": "Expression"
                                                    },
                                                    "storageaccountname": {
                                                        "value": "@pipeline().parameters.adlsName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "None",
                                        "cacheSinks": {
                                            "firstRowOnly": true
                                        }
                                    }
                                },
                                {
                                    "name": "File Audit - Roll Up and Rename_College Board",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Roll Up and Rename_College Board",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "101",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@variables('NewResponseID')",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@variables('PurposeName')",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@variables('AccountName')",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "Raw",
                                            "status": "Copied In Raw Folder",
                                            "row_count": {
                                                "value": "@string(activity('Roll Up and Rename_College Board').output.rowsRead)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Email - Roll Up and Rename_College Board",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "ETL Audit - Roll Up and Rename_College Board",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@pipeline().parameters.EmailFailure",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"Email - Roll up and Rename Failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"Roll up and Rename\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "ETL Audit - Roll Up and Rename_College Board",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Roll Up and Rename_College Board",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "107",
                                            "adf_run_id": {
                                                "value": "@pipeline().parameters.ParentPipelineRunID",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().parameters.ParentPipelineName",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().parameters.ParentPipelineTrigger",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "error_description": {
                                                "value": "@activity('Roll Up and Rename_College Board').output.errors[0].Message",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set New ResponseID",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set AccountName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "NewResponseID",
                            "value": {
                                "value": "@guid()",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set New Fileuploadmappingid",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set PurposeName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "NewMappingID",
                            "value": {
                                "value": "@guid()",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ContainerName": {
                        "type": "string"
                    },
                    "InputFilePath": {
                        "type": "string",
                        "defaultValue": "em_search_vendor/2022/02/louisiana_state_em/college board"
                    },
                    "OutputFilepath": {
                        "type": "string",
                        "defaultValue": "raw"
                    },
                    "IntermediateFilePath": {
                        "type": "string",
                        "defaultValue": "em_search_vendor/intermediate_output"
                    },
                    "AccountID": {
                        "type": "string"
                    },
                    "CurrentMonth": {
                        "type": "string"
                    },
                    "CurrentYear": {
                        "type": "string"
                    },
                    "ParentPipelineRunID": {
                        "type": "string"
                    },
                    "ParentPipelineName": {
                        "type": "string"
                    },
                    "ParentPipelineTrigger": {
                        "type": "string"
                    },
                    "adlsName": {
                        "type": "string"
                    },
                    "SchemaFileName": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "EmailSuccess": {
                        "type": "string"
                    },
                    "EmailFailure": {
                        "type": "string"
                    }
                },
                "variables": {
                    "ResponseID": {
                        "type": "String"
                    },
                    "FolderName": {
                        "type": "String"
                    },
                    "SourceCode": {
                        "type": "String"
                    },
                    "NewFileName": {
                        "type": "String"
                    },
                    "AccountName": {
                        "type": "String"
                    },
                    "PurposeName": {
                        "type": "String"
                    },
                    "NewResponseID": {
                        "type": "String"
                    },
                    "NewMappingID": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-06T21:03:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-fplus-forward-flow_azml')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "load-crm-to-crmsynapse-fplus",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - Start",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-master-crm-to-crmsynapse-fplus",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "CRM Extract and Axiom Data Update",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "load-crm-to-crmsynapse-fplus",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-fqt-master-dataentry",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Distance Calculation",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "CRM Extract and Axiom Data Update",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-distance-calculation",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "DQ Checks - Master",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Distance Calculation",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_fplus_forwardflow_dqmaster",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Generate SAS XML Files",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "DQ Checks - Master",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_fplus_generate_xml_files_azml",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_sql_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "synapse_container": "prodcrmsynapse",
                                "adlsName": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "fplus_host": {
                                    "value": "@pipeline().parameters.fplus_host",
                                    "type": "Expression"
                                },
                                "fplus_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Start",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1301",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - load-crm-to-crmsynapse-fplus",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "load-crm-to-crmsynapse-fplus",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1303",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('load-crm-to-crmsynapse-fplus').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - CRM Extract and Axiom Data Update",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "CRM Extract and Axiom Data Update",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1303",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('CRM Extract and Axiom Data Update').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Distance Calculation",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Distance Calculation",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1303",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('Distance Calculation').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Auidt - DQ Checks - Master",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "DQ Checks - Master",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1303",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('DQ Checks - Master').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Generate SAS XML Files",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Generate SAS XML Files",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1303",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - End",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Generate SAS XML Files",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "1302",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email - load-crm-to-crmsynapse-fplus",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - load-crm-to-crmsynapse-fplus",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-master-crm-to-crmsynapse-fplus' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - CRM Extract and Axiom Data Update",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - CRM Extract and Axiom Data Update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-fqt-master-dataentry' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - Distance Calculation",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - Distance Calculation",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-distance-calculation' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - DQ Checks - Master",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Auidt - DQ Checks - Master",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip_fplus_forwardflow_dqmaster' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - Generate SAS XML Files",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - Generate SAS XML Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailure",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-fplus-generate-xml-files' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Email - Fplus forward flow",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ETL Audit - End",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailSuccess",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"Fplus fowrard flow Successfull!\"\n}\n",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Wait 10 minutes for score  csv and start reverse flow",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "Email - Fplus forward flow",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 600
                        }
                    },
                    {
                        "name": "Execute fplus reverse flow",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Wait 10 minutes for score  csv and start reverse flow",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-fplus-reverse-flow_azml",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "EmailSuccess": {
                        "type": "string",
                        "defaultValue": "https://prod-51.westus.logic.azure.com:443/workflows/5ebd1dba8bbb492e812b84f4e86ba426/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=1oKEwEZsA9W2ZHGi6e1ihm_4mpccHBle9UZjdW1uOkQ"
                    },
                    "EmailFailure": {
                        "type": "string",
                        "defaultValue": "https://prod-142.westus.logic.azure.com:443/workflows/5076b5f623944e73a73d414747a65c6f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QRg61OekEK1VZcXvQ400AcHr41s8V4BW3mqk5l_sNEM"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.26.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAPQA_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "fplus_host": {
                        "type": "string",
                        "defaultValue": "\\\\10.3.30.67\\SoftScore"
                    },
                    "fplus_username": {
                        "type": "string",
                        "defaultValue": "RNLWINSASCOMP1\\svc_prod_fqt"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-27T12:24:35Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-campusesp-reverse-flow')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get contracted Account SlugName",
                        "description": "Get contracted Account SlugName",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "File Audit - sftp to adls started",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT Name,po_campusespslugname FROM [dbo].[AccountBase] WHERE po_campusespslugname is not null",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_RNLSTKDEVSQL_CampusESP",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "campusesp outbound to adls inbound",
                        "description": "copy sftp outbound to adls inbound",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get contracted Account SlugName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get contracted Account SlugName').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "foldername",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_pi_sftp_campusesp",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderName": {
                                                    "value": "@concat('outgoing','/')",
                                                    "type": "Expression"
                                                },
                                                "campuse_esp_host": {
                                                    "value": "@pipeline().parameters.campusesp_hostname",
                                                    "type": "Expression"
                                                },
                                                "campus_esp_username": "@item().po_campusespslugname",
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "exists"
                                        ],
                                        "storeSettings": {
                                            "type": "SftpReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false,
                                            "disableChunking": false
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "foldername",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('foldername').output.exists,true)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "campusesp outgoing to sftp inbound",
                                                "description": "Copy files to SFTP inbound ",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.10:00:00",
                                                    "retry": 5,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "SftpReadSettings",
                                                            "maxConcurrentConnections": 10,
                                                            "recursive": true,
                                                            "wildcardFolderPath": "outgoing",
                                                            "wildcardFileName": "*",
                                                            "enablePartitionDiscovery": false,
                                                            "disableChunking": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".csv"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_pi_sftp_campusesp",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "folderName": {
                                                                "value": "@concat('outgoing','/',item().po_campusespslugname,'.csv')",
                                                                "type": "Expression"
                                                            },
                                                            "campuse_esp_host": {
                                                                "value": "@pipeline().parameters.campusesp_hostname",
                                                                "type": "Expression"
                                                            },
                                                            "campus_esp_username": {
                                                                "value": "@item().po_campusespslugname",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_pi_adls",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": "datalanding",
                                                            "folderName": {
                                                                "value": "@concat('partnerintegration','/','campusesp','/','inbound','/',item().po_campusespslugname)",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.storageaccountname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Foreach file",
                        "description": "each file load into staging table ",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "folderpath",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('folderpath').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "AccountName",
                                    "description": "fetch AccountName",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT upper(accountid) as accountid,Name,po_campusespslugname FROM [dbo].[AccountBase] WHERE po_campusespslugname='@{item().name}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_RNLSTKDEVSQL_CampusESP",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                },
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "Lookup to campusesp staging",
                                    "description": "Lookup to campusesp staging",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "checking empty files",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "select [AccountName] as university_name,count(*) as TotalRecordCount,count([student_email]) as studentcount,count([email]) as parentcount from \n[dbo].[CampusESPtoRNL_Staging] where po_campusespslugname='@{item().name}'\ngroup by [AccountName]",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_appboost_crm",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_schema": "dbo",
                                                "crm_table": "CampusESPtoRNL_Staging",
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                },
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "campusesp partner data profiling",
                                    "description": "campusesp partner data profiling",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup to campusesp staging",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[etl].[insert_rows_partner]",
                                        "storedProcedureParameters": {
                                            "parent_count": {
                                                "value": {
                                                    "value": "@activity('Lookup to campusesp staging').output.firstRow['parentcount']",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "row_count": {
                                                "value": {
                                                    "value": "@activity('Lookup to campusesp staging').output.firstRow['TotalRecordCount']",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "student_count": {
                                                "value": {
                                                    "value": "@activity('Lookup to campusesp staging').output.firstRow['studentcount']",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "university_name": {
                                                "value": {
                                                    "value": "@activity('Lookup to campusesp staging').output.firstRow['university_name']",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "partner_name": {
                                                "value": "campusesp",
                                                "type": "String"
                                            },
                                            "flow_type": {
                                                "value": "reverse",
                                                "type": "String"
                                            },
                                            "university_file_name": {
                                                "value": {
                                                    "value": "@if(equals(item().name,'ncc'),'northcentralcollege.csv',concat(item().name,'.csv'))",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adf_run_id": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "org": {
                                                "value": {
                                                    "value": "@{item().name}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSqlDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                            "az_sql_db": "NDPPRODSQLDB"
                                        }
                                    }
                                },
                                {
                                    "name": "checking empty files",
                                    "description": "checking empty files if present then moved to reject folder",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "merge into campusesp stg table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('merge into campusesp stg table').output.rowsRead,0)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "moving file to reject folder",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": false,
                                                            "wildcardFolderPath": {
                                                                "value": "@concat('partnerintegration','/','campusesp','/','inbound','/',item().name)",
                                                                "type": "Expression"
                                                            },
                                                            "wildcardFileName": "*",
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".csv"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_pi_adls",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": "datalanding",
                                                            "folderName": {
                                                                "value": "@concat('partnerintegration','/','campusesp','/','inbound','/',item().name)",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.storageaccountname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_pi_adls",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": "datalanding",
                                                            "folderName": {
                                                                "value": "@concat('partnerintegration','/','campusesp','/','reject','/',item().name)",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.storageaccountname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Delete rejected files",
                                                "type": "Delete",
                                                "dependsOn": [
                                                    {
                                                        "activity": "moving file to reject folder",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataset": {
                                                        "referenceName": "ds_pi_adls",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": "datalanding",
                                                            "folderName": {
                                                                "value": "@concat('partnerintegration','/','campusesp','/','inbound','/',item().name)",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.storageaccountname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "logStorageSettings": {
                                                        "linkedServiceName": {
                                                            "referenceName": "ls_Azuredatalakegen2",
                                                            "type": "LinkedServiceReference",
                                                            "parameters": {
                                                                "storageaccountname": "rnlndpproddls"
                                                            }
                                                        },
                                                        "path": "datalanding/partnerintegration/log"
                                                    },
                                                    "enableLogging": true,
                                                    "storeSettings": {
                                                        "type": "AzureBlobFSReadSettings",
                                                        "recursive": true,
                                                        "enablePartitionDiscovery": false
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "merge into campusesp stg table",
                                    "description": "load data to campusesp stg table",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "AccountName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "AccountName",
                                                    "value": {
                                                        "value": "@activity('AccountName').output.firstRow.Name",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "po_campusespslugname",
                                                    "value": {
                                                        "value": "@activity('AccountName').output.firstRow.po_campusespslugname",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "AccountId",
                                                    "value": {
                                                        "value": "@activity('AccountName').output.firstRow.AccountId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "Relationship_to_Student",
                                                    "value": {
                                                        "value": "Parent",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@concat('partnerintegration','/','campusesp','/','inbound','/',item().name)",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlServerSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false
                                        },
                                        "enableStaging": true,
                                        "stagingSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "ls_Azuredatalakegen2",
                                                "type": "LinkedServiceReference",
                                                "parameters": {
                                                    "storageaccountname": "rnlndpproddls"
                                                }
                                            },
                                            "path": "datalanding/partnerintegration/log"
                                        },
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "AccountId",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "AccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "AccountName",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "AccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "po_campusespslugname",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "po_campusespslugname",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "id",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "CampusESP_Id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "External ID",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "user_id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "email",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "email",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "first_name",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "first_name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "last_name",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "last_name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "phone",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "phone",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "address1",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "address1",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "address2",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "address2",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "city",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "city",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "state",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "state",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "zip",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "zip",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "country_code",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "country_code",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "unconverted",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "unconverted",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "last_sign_in_at",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "last_sign_in_at",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "sign_in_count",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "sign_in_count",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "total_opens_unique",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "total_opens_unique",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "total_clicks_unique",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "total_clicks_unique",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "last_activity_at",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "last_activity_at",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "last_sign_in_ip",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "last_sign_in_ip",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Parent Promoter Score",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "parent_promoter_score",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "session_count",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "session_count",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "total_sends",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "total_sends",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "total_opens",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "total_opens",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "total_clicks",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "total_clicks",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "created_at",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "created_at",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Student ID Number",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "student_id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Student Email",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "student_email",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Student First Name",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "student_first_name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Student Last Name",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "student_last_name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Relationship_to_Student",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Relationship_to_Student",
                                                        "type": "String"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_pi_adls",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "datalanding",
                                                "folderName": "partnerintegration/campusesp/inbound",
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_appboost_crm",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_schema": "dbo",
                                                "crm_table": "CampusESPtoRNL_Staging",
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                },
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "folderpath",
                        "description": "get list of folders",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "File Audit - sftp to adls completed",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_pi_adls",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": "datalanding",
                                    "folderName": "partnerintegration/campusesp/inbound/",
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.storageaccountname",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "truncate staging table",
                        "description": "truncate table dbo.CampusESPtoRNL_Staging\nin CRM",
                        "type": "Script",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_RNLMAP_MSCRM",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "crm_servername": "10.200.0.22",
                                "crm_dbname": "RNLMAP_MSCRM",
                                "crm_username": "svc_az_ndp",
                                "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": "truncate table dbo.CampusESPtoRNL_Staging"
                                }
                            ]
                        }
                    },
                    {
                        "name": "Folder exists or not for archive",
                        "description": "check if folder exists",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "truncate staging table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_pi_adls",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": "datalanding",
                                    "folderName": "partnerintegration/campusesp/inbound",
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.storageaccountname",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "If exists archive",
                        "description": "archive folder",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Folder exists or not for archive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('Folder exists or not for archive').output.exists,true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Archive",
                                    "description": "arhive if folder present",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": "partnerintegration/campusesp/inbound",
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_pi_adls",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "datalanding",
                                                "folderName": "partnerintegration/campusesp/inbound",
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_pi_adls",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "datalanding",
                                                "folderName": {
                                                    "value": "@concat('partnerintegration','/','campusesp','/','archive','/','inbound','/',formatDateTime(pipeline().parameters.windowStart,'yyyy'),formatDateTime(pipeline().parameters.windowStart,'MM'),formatDateTime(pipeline().parameters.windowStart,'dd'))\n",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Delete Processed files after Archival",
                                    "description": "Delete Processed files after Archival",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "Archive",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_pi_adls",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "datalanding",
                                                "folderName": "partnerintegration/campusesp/inbound/",
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Execute contact upsert",
                        "description": "contact entity upsert",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Foreach file",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-campusesp-contact-upsert",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "windowStart": {
                                    "value": "@pipeline().parameters.windowStart",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "az_synapse_em_server": {
                                    "value": "@pipeline().parameters.az_synapse_em_server",
                                    "type": "Expression"
                                },
                                "az_synapse_em_db": {
                                    "value": "@pipeline().parameters.az_synapse_em_db",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute id upsert",
                        "description": "id entity upsert",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute contact upsert",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-campusesp-id-upsert",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File Audit - sftp to adls started",
                        "description": "File Audit - sftp to adls started",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "If exists archive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "913",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "campusesp adls inbound copy started",
                                "status": "Started",
                                "row_count": "0",
                                "rejected_row": "0",
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File Audit - sftp to adls completed",
                        "description": "File Audit - sftp to adls completed",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "campusesp outbound to adls inbound",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "914",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "campusesp adls inbound copy completed",
                                "status": "Completed",
                                "row_count": "0",
                                "rejected_row": "0",
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File Audit - sftp to adls failed",
                        "description": "File Audit - sftp to adls failed",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "campusesp outbound to adls inbound",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "915",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "campusesp adls inbound copy failed",
                                "status": "Failed",
                                "row_count": "0",
                                "rejected_row": "0",
                                "error_description": "zeemee adls inbound copy failed",
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "campusesp history table",
                        "description": "[[etl].[CampusESP_History]",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Execute id upsert",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Execute application upsert",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Execute application upsert_copy1",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "additionalColumns": [
                                    {
                                        "name": "RowInsertDateTime",
                                        "value": {
                                            "value": "@utcNow()",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "RowUpdateDateTime",
                                        "value": {
                                            "value": "@utcNow()",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "writeBehavior": "Insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": "rnlndpproddls"
                                    }
                                },
                                "path": "datalanding/partnerintegration/log"
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "CampusESP_Id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CampusESP_Id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "user_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "user_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "email",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "email",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "first_name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "first_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "last_name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "last_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "phone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "phone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "address1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "address1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "address2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "address2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "city",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "city",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "state",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "state",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "zip",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "zip",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "country_code",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "country_code",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "unconverted",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "unconverted",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "last_sign_in_at",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "last_sign_in_at",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "sign_in_count",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "sign_in_count",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "total_opens_unique",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "total_opens_unique",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "total_clicks_unique",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "total_clicks_unique",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "last_activity_at",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "last_activity_at",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "last_sign_in_ip",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "last_sign_in_ip",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "parent_promoter_score",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "parent_promoter_score",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "session_count",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "session_count",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "total_sends",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "total_sends",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "total_opens",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "total_opens",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "total_clicks",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "total_clicks",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "created_at",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "created_at",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "student_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "student_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "student_email",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "student_email",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "student_first_name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "student_first_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "student_last_name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "student_last_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Relationship_to_Student",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Relationship_to_Student",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RowInsertDateTime"
                                        },
                                        "sink": {
                                            "name": "RowInsertDateTime",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RowUpdateDateTime"
                                        },
                                        "sink": {
                                            "name": "RowUpdateDateTime",
                                            "type": "DateTime"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "CampusESPtoRNL_Staging",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_synapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "CampusESP_History",
                                    "schemaname": "etl",
                                    "az_synapse_em_server": {
                                        "value": "@pipeline().parameters.az_synapse_em_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_db": {
                                        "value": "@pipeline().parameters.az_synapse_em_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Execute application upsert",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute contact upsert",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-campusesp-application-upsert",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "windowStart": {
                                    "value": "@pipeline().parameters.windowStart",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute application upsert_copy1",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute contact upsert",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-campusesp-application-upsert_1",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "windowStart": {
                                    "value": "@pipeline().parameters.windowStart",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "string",
                        "defaultValue": "2022-11-22"
                    },
                    "server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "database_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "az_synapse_em_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodemdwsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_em_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODDWPL1"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "campusesp_hostname": {
                        "type": "string",
                        "defaultValue": "ftp.campusesp.com"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-23T08:55:43Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-SearchVendor-UnZip-RollUp_parallel')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Zip File Details",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_input",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": {
                                        "value": "@pipeline().parameters.ContainerName",
                                        "type": "Expression"
                                    },
                                    "FilePath": {
                                        "value": "@pipeline().parameters.InputFilePath",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.adlsName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "Filter Files",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Zip File Details",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Zip File Details').output.childItems",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().type,'File')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Check if zip files are present",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Filter Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('Filter Files').output.FilteredItemsCount,0)\n\n",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "No Zip files found",
                                    "type": "Fail",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "No Zip files found",
                                        "errorCode": "404"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "FolderName Details",
                                    "type": "GetMetadata",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute Pipeline- unzip and add sourcecode",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_adls_input",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "FilePath": {
                                                    "value": "@pipeline().parameters.InputFilePath",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "itemName"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "var FolderName Details",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "FolderName Details",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "FolderName",
                                        "value": {
                                            "value": "@activity('FolderName Details').output.itemName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Vendor LookUp Details",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "var FolderName Details",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT DISTINCT ResponseID from lkp.Vendor where Vendor='@{variables('FolderName')}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "vendor",
                                                "schemaname": "lkp",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_sql_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_sql_db_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Raw to Inbound folder and Metadata extraction",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Delete Processed Source Files",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-sftp-file-validation-raw-to-em_inbound",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "SftpFileName": {
                                                "value": "@variables('NewFileName')",
                                                "type": "Expression"
                                            },
                                            "AccountID": {
                                                "value": "@pipeline().parameters.AccountID",
                                                "type": "Expression"
                                            },
                                            "ResponseID": {
                                                "value": "@variables('ResponseID')",
                                                "type": "Expression"
                                            },
                                            "AccountName": {
                                                "value": "@variables('AccountName')",
                                                "type": "Expression"
                                            },
                                            "PurposeName": {
                                                "value": "@variables('PurposeName')",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "ParentPipelineTriggerName": {
                                                "value": "@pipeline().TriggerId",
                                                "type": "Expression"
                                            },
                                            "FiscalMonth": {
                                                "value": "@pipeline().parameters.CurrentMonth",
                                                "type": "Expression"
                                            },
                                            "FiscalYear": {
                                                "value": "@pipeline().parameters.CurrentYear",
                                                "type": "Expression"
                                            },
                                            "RowsRead": 1,
                                            "RowsWritten": 1,
                                            "OriginalName": {
                                                "value": "@variables('NewFileName')",
                                                "type": "Expression"
                                            },
                                            "source": "Search Vendor",
                                            "NewResponseID": {
                                                "value": "@variables('NewResponseID')",
                                                "type": "Expression"
                                            },
                                            "NewFileUploadMappingID": {
                                                "value": "@variables('NewMappingID')",
                                                "type": "Expression"
                                            },
                                            "SchemaFilename": {
                                                "value": "@pipeline().parameters.SchemaFileName",
                                                "type": "Expression"
                                            },
                                            "adlsName": {
                                                "value": "@pipeline().parameters.adlsName",
                                                "type": "Expression"
                                            },
                                            "containerName": {
                                                "value": "@pipeline().parameters.ContainerName",
                                                "type": "Expression"
                                            },
                                            "az_sql_server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            },
                                            "crm_servername": {
                                                "value": "@pipeline().parameters.crm_servername",
                                                "type": "Expression"
                                            },
                                            "crm_dbname": {
                                                "value": "@pipeline().parameters.crm_dbname",
                                                "type": "Expression"
                                            },
                                            "crm_username": {
                                                "value": "@pipeline().parameters.crm_username",
                                                "type": "Expression"
                                            },
                                            "EmailSuccess": {
                                                "value": "@pipeline().parameters.EmailSuccess",
                                                "type": "Expression"
                                            },
                                            "EmailFailure": {
                                                "value": "@pipeline().parameters.EmailFailure",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Set Modified FileName",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "var ResponseID",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "NewFileName",
                                        "value": {
                                            "value": "@concat(variables('FolderName'),'_',variables('ResponseID'),'_',formatDateTime(utcnow(), 'MMddyyyy'),'.csv')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fetch AccountName",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Modified FileName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "select Name from AccountBase where AccountId='@{pipeline().parameters.AccountID}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_appboostCRM_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                },
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Set AccountName",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Fetch AccountName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "AccountName",
                                        "value": {
                                            "value": "@activity('Fetch AccountName').output.value[0].Name",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fetch PurposeName",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Modified FileName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "select pb.popb_name from popb_fileuploadmappingBase fb join popb_purposeBase pb\non fb.popb_purposeid=pb.popb_purposeId \nwhere fb.popb_responseid='@{variables('ResponseID')}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_appboostCRM_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                },
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Set PurposeName",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Fetch PurposeName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PurposeName",
                                        "value": {
                                            "value": "@if(equals(length(activity('Fetch PurposeName').output.value),0),'',activity('Fetch PurposeName').output.value[0].popb_name)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Delete Source Staging Folder",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "pip-RollUp-Rename",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_fetchFilesFromADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "filePath": {
                                                    "value": "@pipeline().parameters.IntermediateFilePath",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                },
                                {
                                    "name": "var ResponseID",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Vendor LookUp Details",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ResponseID",
                                        "value": {
                                            "value": "@activity('Vendor LookUp Details').output.value[0].ResponseID",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Email - File Ingestion Success",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Raw to Inbound folder and Metadata extraction",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@pipeline().parameters.EmailSuccess",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"diafplus@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"Search vendor File Ingestion Successful!\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Move zip files to Archive",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Delete Source Staging Folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@pipeline().parameters.InputFilePath",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_fetchFilesFromADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "filePath": {
                                                    "value": "@pipeline().parameters.InputFilePath",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_fetchFilesFromADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "filePath": {
                                                    "value": "@replace(pipeline().parameters.InputFilePath,'searchvendor','raw/raw_archived/EM/EM Search Vendor Data')\n",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Delete Processed Source Files",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "Move zip files to Archive",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_fetchFilesFromADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.ContainerName",
                                                    "type": "Expression"
                                                },
                                                "filePath": {
                                                    "value": "@pipeline().parameters.InputFilePath",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.adlsName",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "wildcardFileName": "*",
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                },
                                {
                                    "name": "Set New ResponseID",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Set AccountName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "NewResponseID",
                                        "value": {
                                            "value": "@guid()",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set New Fileuploadmappingid",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Set PurposeName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "NewMappingID",
                                        "value": {
                                            "value": "@guid()",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Execute Pipeline- unzip and add sourcecode",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-SearchVendor-Unzip-addSourceCode",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ContainerName": {
                                                "value": "@pipeline().parameters.ContainerName",
                                                "type": "Expression"
                                            },
                                            "InputFilePath": {
                                                "value": "@pipeline().parameters.InputFilePath",
                                                "type": "Expression"
                                            },
                                            "storageaccountname": {
                                                "value": "@pipeline().parameters.adlsName",
                                                "type": "Expression"
                                            },
                                            "IntermediateFilePath": {
                                                "value": "@pipeline().parameters.IntermediateFilePath",
                                                "type": "Expression"
                                            },
                                            "adlsName": {
                                                "value": "@pipeline().parameters.adlsName",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            },
                                            "UnZipaddSoucreCode": {
                                                "value": "@activity('Filter Files').output.value",
                                                "type": "Expression"
                                            },
                                            "az_sql_server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "pip-RollUp-Rename",
                                    "description": "RollUp-Rename based on vendor names",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Set New Fileuploadmappingid",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Set New ResponseID",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-SearchVendor-Rollup-Rename",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "VendorFolderName": {
                                                "value": "@variables('FolderName')",
                                                "type": "Expression"
                                            },
                                            "ContainerName": {
                                                "value": "@pipeline().parameters.ContainerName",
                                                "type": "Expression"
                                            },
                                            "InputFilePath": {
                                                "value": "@pipeline().parameters.InputFilePath",
                                                "type": "Expression"
                                            },
                                            "storageaccountname": {
                                                "value": "@pipeline().parameters.adlsName",
                                                "type": "Expression"
                                            },
                                            "IntermediateFilePath": {
                                                "value": "@pipeline().parameters.IntermediateFilePath",
                                                "type": "Expression"
                                            },
                                            "adlsName": {
                                                "value": "@pipeline().parameters.adlsName",
                                                "type": "Expression"
                                            },
                                            "NewFileName": {
                                                "value": "@variables('NewFileName')",
                                                "type": "Expression"
                                            },
                                            "OutputFilepath": {
                                                "value": "@pipeline().parameters.OutputFilepath",
                                                "type": "Expression"
                                            },
                                            "AccountName": {
                                                "value": "@variables('AccountName')",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            },
                                            "az_sql_server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "PurposeName": {
                                                "value": "@variables('PurposeName')",
                                                "type": "Expression"
                                            },
                                            "NewResponseID": {
                                                "value": "@variables('NewResponseID')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ContainerName": {
                        "type": "string"
                    },
                    "InputFilePath": {
                        "type": "string"
                    },
                    "OutputFilepath": {
                        "type": "string",
                        "defaultValue": "raw"
                    },
                    "IntermediateFilePath": {
                        "type": "string"
                    },
                    "AccountID": {
                        "type": "string"
                    },
                    "CurrentMonth": {
                        "type": "string"
                    },
                    "CurrentYear": {
                        "type": "string"
                    },
                    "ParentPipelineRunID": {
                        "type": "string"
                    },
                    "ParentPipelineName": {
                        "type": "string"
                    },
                    "ParentPipelineTrigger": {
                        "type": "string"
                    },
                    "adlsName": {
                        "type": "string"
                    },
                    "SchemaFileName": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "EmailSuccess": {
                        "type": "string"
                    },
                    "EmailFailure": {
                        "type": "string"
                    }
                },
                "variables": {
                    "ResponseID": {
                        "type": "String"
                    },
                    "FolderName": {
                        "type": "String"
                    },
                    "SourceCode": {
                        "type": "String"
                    },
                    "NewFileName": {
                        "type": "String"
                    },
                    "AccountName": {
                        "type": "String"
                    },
                    "PurposeName": {
                        "type": "String"
                    },
                    "NewResponseID": {
                        "type": "String"
                    },
                    "NewMappingID": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Datalanding/SearchVendortoADLS/Parallel"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-28T23:00:28Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-zeemee-reverse-flow')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Foreach file",
                        "description": "each file load into staging table ",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get filenames",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get filenames').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get files metadata",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_pi_sourcefile_zeemee11",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "datalanding",
                                                "FilePath": {
                                                    "value": "@concat('partnerintegration','/','zeemee','/','inbound','/',split(item().name,'_')[0])",
                                                    "type": "Expression"
                                                },
                                                "Filename": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "size",
                                            "itemName"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "Get contracted Account SlugName",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Get files metadata",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT Name,po_zeemeeslugname FROM [dbo].[AccountBase] WHERE po_zeemeeslugname='@{split(item().name,'_')[0]}'\n\n\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "RNLSTKDEVSQL1144",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                },
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "merge into zeemee stg table",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Get contracted Account SlugName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "AccountName",
                                                    "value": {
                                                        "value": "@activity('Get contracted Account SlugName').output.firstRow.Name",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "po_zeemeeslugname",
                                                    "value": {
                                                        "value": "@activity('Get contracted Account SlugName').output.firstRow.po_zeemeeslugname",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@concat('partnerintegration','/','zeemee','/','inbound','/',split(item().name,'_')[0])",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlServerSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "AccountName",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "AccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "po_zeemeeslugname",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "po_zeemeeslugname",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "ZeeMee.ID",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "ZeeMee.ID",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Student.ID.PartnerCSV",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Student.ID.PartnerCSV",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "In.CSV.File",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "In.CSV.File",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Student.Name",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Student.Name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "First.Name",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "First.Name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Last.Name",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Last.Name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Email",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Email",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Phone.Number",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Phone.Number",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Partner.Institution",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Partner.Institution",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Entry.Term.ZM",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Entry.Term.ZM",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Entry.Term.PartnerCSV",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Entry.Term.PartnerCSV",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Entry.Year.ZM",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Entry.Year.ZM",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Entry.Year.PartnerCSV",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Entry.Year.PartnerCSV",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Student.Type.ZM",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Student.Type.ZM",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Student.Type.PartnerCSV",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Student.Type.PartnerCSV",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "CEEB.Code.PartnerCSV",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "CEEB.Code.PartnerCSV",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "HS.on.ZM",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "HS.on.ZM",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "HS.in.PartnerCSV",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "HS.in.PartnerCSV",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Community.Join.Date",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Community.Join.Date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Community.Join.Stage",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Community.Join.Stage",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Community.Match",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Community.Match",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Public.Private.Profile",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Public.Private.Profile",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Interested",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Interested",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Accepted.Community",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Accepted.Community",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Room.Mate.Quiz",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Room.Mate.Quiz",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Friend.Finder",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Friend.Finder",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Going",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Going",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Schools.Followed",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Schools.Followed",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Chats.Sent",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Chats.Sent",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Chats.Viewed",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Chats.Viewed",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Videos.Liked",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Videos.Liked",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Videos.Viewed.Unique",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Videos.Viewed.Unique",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Total.Partner.Videos",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Total.Partner.Videos",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Last.Login.Date",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Last.Login.Date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Last.Engaged.Date",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Last.Engaged.Date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Engaged.Any",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "Engaged.Any",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "ZM.Major.1",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "ZM.Major.1",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "ZM.Major.2",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "ZM.Major.2",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "ZeeMee.Engagement.Score",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "ZeeMee.Engagement.Score",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "ZeeMee.Engagement.Index",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "ZeeMee.Engagement.Index",
                                                        "type": "String"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_pi_adls",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "datalanding",
                                                "folderName": "partnerintegration/zeemee/inbound",
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_crm_Dynamic3",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_schema": "dbo",
                                                "crm_table": "ZeemeetoRNL_Staging",
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                },
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Lookup to zeemee staging",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "checking empty files",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "select [AccountName] as university_name,count(*) as TotalRecordCount,count([First.Name]) as studentcount, 0 as parentcount from \ndbo.ZeemeetoRNL_Staging where [po_zeemeeslugname]= '@{split(item().name,'_')[0]}'\ngroup by [AccountName]",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_crm_Dynamic3",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_schema": "dbo",
                                                "crm_table": "ZeemeetoRNL_Staging",
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                },
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "zeemee partner data profiling",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup to zeemee staging",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[etl].[insert_rows_partner]",
                                        "storedProcedureParameters": {
                                            "parent_count": {
                                                "value": {
                                                    "value": "@activity('Lookup to zeemee staging').output.firstRow['parentcount']",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "row_count": {
                                                "value": {
                                                    "value": "@activity('Lookup to zeemee staging').output.firstRow['TotalRecordCount']",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "student_count": {
                                                "value": {
                                                    "value": "@activity('Lookup to zeemee staging').output.firstRow['studentcount']",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "university_name": {
                                                "value": {
                                                    "value": "@activity('Lookup to zeemee staging').output.firstRow['university_name']",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "partner_name": {
                                                "value": "zeemee",
                                                "type": "String"
                                            },
                                            "flow_type": {
                                                "value": "reverse",
                                                "type": "String"
                                            },
                                            "university_file_name": {
                                                "value": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adf_run_id": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "org": {
                                                "value": {
                                                    "value": "@{split(item().name,'_')[0]}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSqlDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                            "az_sql_db": "NDPPRODSQLDB"
                                        }
                                    }
                                },
                                {
                                    "name": "checking empty files",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "merge into zeemee stg table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('merge into zeemee stg table').output.rowsRead,0)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "moving file to reject folder",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": false,
                                                            "wildcardFolderPath": {
                                                                "value": "@concat('partnerintegration','/','zeemee','/','inbound','/',split(item().name,'_')[0])",
                                                                "type": "Expression"
                                                            },
                                                            "wildcardFileName": "*",
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".csv"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_pi_adls",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": "datalanding",
                                                            "folderName": {
                                                                "value": "@concat('partnerintegration','/','zeemee','/','inbound','/',split(item().name,'_')[0])",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.storageaccountname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_pi_adls",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": "datalanding",
                                                            "folderName": {
                                                                "value": "@concat('partnerintegration','/','zeemee','/','reject','/',split(item().name,'_')[0])",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.storageaccountname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Delete rejected files",
                                                "type": "Delete",
                                                "dependsOn": [
                                                    {
                                                        "activity": "moving file to reject folder",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataset": {
                                                        "referenceName": "ds_pi_adls",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": "datalanding",
                                                            "folderName": {
                                                                "value": "@concat('partnerintegration','/','zeemee','/','inbound','/',split(item().name,'_')[0])",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.storageaccountname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "logStorageSettings": {
                                                        "linkedServiceName": {
                                                            "referenceName": "ls_Azuredatalakegen2",
                                                            "type": "LinkedServiceReference",
                                                            "parameters": {
                                                                "storageaccountname": "rnlndpproddls"
                                                            }
                                                        },
                                                        "path": "datalanding/partnerintegration/log"
                                                    },
                                                    "enableLogging": true,
                                                    "storeSettings": {
                                                        "type": "AzureBlobFSReadSettings",
                                                        "recursive": true,
                                                        "enablePartitionDiscovery": false
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get filenames",
                        "description": "get  list of files",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "File Audit - sftp to adls completed",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_pi_adls",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": "datalanding",
                                    "folderName": "partnerintegration/zeemee/inbound/*/",
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.storageaccountname",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "truncate staging table",
                        "description": "truncate table dbo.ZeemeetoRNL_Staging \nin CRM",
                        "type": "Script",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_RNLMAP_MSCRM",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "crm_servername": "10.200.0.22",
                                "crm_dbname": "RNLMAP_MSCRM",
                                "crm_username": "svc_az_ndp",
                                "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": "truncate table dbo.ZeemeetoRNL_Staging"
                                }
                            ]
                        }
                    },
                    {
                        "name": "zeemee outbound to adls inbound",
                        "description": "Copy files from sftp to adls inbound",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "File Audit - sftp to adls started",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "Outbound",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".csv"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_pi_sftp",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": "Zeemee/Outbound",
                                    "zeemee_host": {
                                        "value": "@pipeline().parameters.Zeemee_hostname",
                                        "type": "Expression"
                                    },
                                    "zeemee_username": {
                                        "value": "@pipeline().parameters.Zeemee_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_adls",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": "datalanding",
                                    "folderName": "partnerintegration/zeemee/inbound",
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.storageaccountname",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "File Audit - sftp to adls started",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "If exists archive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "907",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "zeemee adls inbound copy started",
                                "status": "Started",
                                "row_count": "0",
                                "rejected_row": "0",
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File Audit - sftp to adls completed",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "zeemee outbound to adls inbound",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "908",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "zeemee adls inbound copy completed",
                                "status": "Completed",
                                "row_count": "0",
                                "rejected_row": "0",
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File Audit - sftp to adls failed",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "zeemee outbound to adls inbound",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "909",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "zeemee adls inbound copy failed",
                                "status": "Failed",
                                "row_count": "0",
                                "rejected_row": "0",
                                "error_description": "zeemee adls inbound copy failed",
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Folder exists or not for archive",
                        "description": "check if folder exists",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "truncate staging table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_pi_adls",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": "datalanding",
                                    "folderName": "partnerintegration/zeemee/inbound",
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.storageaccountname",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "If exists archive",
                        "description": "archive folder",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Folder exists or not for archive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('Folder exists or not for archive').output.exists,true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Archive",
                                    "description": "arhive if folder present",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": "partnerintegration/zeemee/inbound",
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_pi_adls",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "datalanding",
                                                "folderName": "partnerintegration/zeemee/inbound",
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_pi_adls",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "datalanding",
                                                "folderName": {
                                                    "value": "@concat('partnerintegration','/','zeemee','/','archive','/','inbound','/',formatDateTime(pipeline().parameters.windowStart,'yyyy'),formatDateTime(pipeline().parameters.windowStart,'MM'),formatDateTime(pipeline().parameters.windowStart,'dd'))",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Delete Processed files after Archival",
                                    "description": "Delete Processed files after Archival",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "Archive",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_pi_adls",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "datalanding",
                                                "folderName": "partnerintegration/zeemee/inbound/",
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Execute contact upsert",
                        "description": "contact entity upsert",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Foreach file",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-zeemee-contact-upsert",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "windowStart": {
                                    "value": "@pipeline().parameters.windowStart",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "az_synapse_em_server": {
                                    "value": "@pipeline().parameters.az_synapse_em_server",
                                    "type": "Expression"
                                },
                                "az_synapse_em_db": {
                                    "value": "@pipeline().parameters.az_synapse_em_db",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute id upsert",
                        "description": "id entity upsert",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute contact upsert",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-zeemee-id-upsert",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute application upsert",
                        "description": "application entity upsert",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute contact upsert",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-zeemee-application-upsert",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "windowStart": {
                                    "value": "@pipeline().parameters.windowStart",
                                    "type": "Expression"
                                },
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                },
                                "az_synapse_em_server": {
                                    "value": "@pipeline().parameters.az_synapse_em_server",
                                    "type": "Expression"
                                },
                                "az_synapse_db": {
                                    "value": "@pipeline().parameters.az_synapse_em_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "zeemee outbound to Outbound_Processed",
                        "description": "move files to Outbound_Processed",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "zeemee history table",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "Outbound",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "SftpWriteSettings",
                                    "operationTimeout": "01:00:00",
                                    "useTempFileRename": true
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".csv"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_pi_sftp11",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": "Outbound",
                                    "zeemee_host": {
                                        "value": "@pipeline().parameters.Zeemee_hostname",
                                        "type": "Expression"
                                    },
                                    "zeemee_username": "Ruffalo-NL",
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_sftp11",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": "Outbound_Processed",
                                    "zeemee_host": {
                                        "value": "@pipeline().parameters.Zeemee_hostname",
                                        "type": "Expression"
                                    },
                                    "zeemee_username": "Ruffalo-NL",
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get Outbound_Processed filenames",
                        "description": "Get Outbound_Processed filenames",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "zeemee outbound to Outbound_Processed",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_pi_sftp11",
                                "type": "DatasetReference",
                                "parameters": {
                                    "folderName": "Outbound/*/",
                                    "zeemee_host": {
                                        "value": "@pipeline().parameters.Zeemee_hostname",
                                        "type": "Expression"
                                    },
                                    "zeemee_username": "Ruffalo-NL",
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "SftpReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false,
                                "disableChunking": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "description": "each outbound processed files",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Outbound_Processed filenames",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Outbound_Processed filenames').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Delete outbound processed files",
                                    "description": "Delete outbound processed files",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_pi_sftp_outbound",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderName": {
                                                    "value": "@concat('Outbound','/',split(item().name,'_')[0])",
                                                    "type": "Expression"
                                                },
                                                "fileName": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "zeemee_host": {
                                                    "value": "@pipeline().parameters.Zeemee_hostname",
                                                    "type": "Expression"
                                                },
                                                "zeemee_username": "Ruffalo-NL",
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "SftpReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false,
                                            "disableChunking": false
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "zeemee history table",
                        "description": "etl.Zeemee_History",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Execute id upsert",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Execute application upsert",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "additionalColumns": [
                                    {
                                        "name": "RowInsertDateTime",
                                        "value": {
                                            "value": "@utcNow()",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "RowUpdateDateTime",
                                        "value": {
                                            "value": "@utcNow()",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "writeBehavior": "Insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": "rnlndpproddls"
                                    }
                                },
                                "path": "datalanding/partnerintegration/log"
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ZeeMee.ID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ZeeMee.ID",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Student.ID.PartnerCSV",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Student.ID.PartnerCSV",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In.CSV.File",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In.CSV.File",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Student.Name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Student.Name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "First.Name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "First.Name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Last.Name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Last.Name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Email",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Email",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Phone.Number",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Phone.Number",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Partner.Institution",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Partner.Institution",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Entry.Term.ZM",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Entry.Term.ZM",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Entry.Term.PartnerCSV",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Entry.Term.PartnerCSV",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Entry.Year.ZM",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Entry.Year.ZM",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Entry.Year.PartnerCSV",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Entry.Year.PartnerCSV",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Student.Type.ZM",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Student.Type.ZM",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Student.Type.PartnerCSV",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Student.Type.PartnerCSV",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CEEB.Code.PartnerCSV",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CEEB.Code.PartnerCSV",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HS.on.ZM",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "HS.on.ZM",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HS.in.PartnerCSV",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "HS.in.PartnerCSV",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Community.Join.Date",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Community.Join.Date",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Community.Join.Stage",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Community.Join.Stage",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Community.Match",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Community.Match",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Public.Private.Profile",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Public.Private.Profile",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Interested",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Interested",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Accepted.Community",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Accepted.Community",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Room.Mate.Quiz",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Room.Mate.Quiz",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Friend.Finder",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Friend.Finder",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Going",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Going",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Schools.Followed",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Schools.Followed",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Chats.Sent",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Chats.Sent",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Chats.Viewed",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Chats.Viewed",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Videos.Liked",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Videos.Liked",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Videos.Viewed.Unique",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Videos.Viewed.Unique",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Total.Partner.Videos",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Total.Partner.Videos",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Last.Login.Date",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Last.Login.Date",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Last.Engaged.Date",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Last.Engaged.Date",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Engaged.Any",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EngagedAny",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ZM.Major.1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ZM.Major.1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ZM.Major.2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ZM.Major.2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ZeeMee.Engagement.Score",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ZeeMee.Engagement.Score",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ZeeMee.Engagement.Index",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ZeeMee.Engagement.Index",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RowInsertDateTime"
                                        },
                                        "sink": {
                                            "name": "RowInsertDateTime",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RowUpdateDateTime"
                                        },
                                        "sink": {
                                            "name": "RowUpdateDateTime",
                                            "type": "DateTime"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_crm_Dynamic82",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "ZeemeetoRNL_Staging",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_synapse15",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Zeemee_History",
                                    "schemaname": "etl",
                                    "az_synapse_em_server": {
                                        "value": "@pipeline().parameters.az_synapse_em_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_db": {
                                        "value": "@pipeline().parameters.az_synapse_em_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "string",
                        "defaultValue": "2022-11-22"
                    },
                    "server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "database_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "az_synapse_em_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodemdwsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_em_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODDWPL1"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "Zeemee_hostname": {
                        "type": "string",
                        "defaultValue": "zeemee.exavault.com"
                    },
                    "Zeemee_username": {
                        "type": "string",
                        "defaultValue": "Ruffalo-NL"
                    }
                },
                "variables": {
                    "filename": {
                        "type": "String"
                    },
                    "accname": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "lastPublishTime": "2022-12-06T13:09:06Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-blob-to-adls')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-filecopy-blob-to-adls-master",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "ContainerName": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_ContainerName')]",
                        "rawFilePath": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_rawFilePath')]",
                        "Audit_Type_Pipeline": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_Audit_Type_Pipeline')]",
                        "Audit_Type_File": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_Audit_Type_File')]",
                        "Pipeline_Start_Status": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_Pipeline_Start_Status')]",
                        "Pipeline_Complete_Status": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_Pipeline_Complete_Status')]",
                        "Pipeline_Error_Status": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_Pipeline_Error_Status')]",
                        "File_Location_Status_Blob_to_Raw": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Blob_to_Raw')]",
                        "File_Location_Status_Raw_to_Validated": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Raw_to_Validated')]",
                        "File_Location_Status_Raw_to_Raw_archive": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Raw_to_Raw_archive')]",
                        "File_Location_Status_Raw_to_Reject": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Raw_to_Reject')]",
                        "File_Location_Status_Validated_to_EMInbound": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Validated_to_EMInbound')]",
                        "File_Location_Status_Config_files_Copy": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_File_Location_Status_Config_files_Copy')]",
                        "Area": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_Area')]",
                        "InsertBy": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_InsertBy')]",
                        "ValidatePath": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_ValidatePath')]",
                        "RejectPath": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_RejectPath')]",
                        "Raw_Archived": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_Raw_Archived')]",
                        "Inbound": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_Inbound')]",
                        "adlsName": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_adlsName')]",
                        "schemaFilename": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_schemaFilename')]",
                        "az_sql_server_name": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_az_sql_server_name')]",
                        "az_sql_db_name": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_az_sql_db_name')]",
                        "databricks_workspace_url": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_databricks_clusterid')]",
                        "crm_servername": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_crm_servername')]",
                        "crm_dbname": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_crm_dbname')]",
                        "crm_username": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_crm_username')]",
                        "vault_url": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_vault_url')]",
                        "blobname": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_blobname')]",
                        "EmailSuccess": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_EmailSuccess')]",
                        "EmailFailure": "[parameters('trg-blob-to-adls_properties_pipeline_parameters_EmailFailure')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 5,
                    "startTime": "2022-08-09T19:32:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pip-filecopy-blob-to-adls-master')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-fplus-forward-reverse-flow')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pip-fplus-forward-flow",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "databricks_workspace_url": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_databricks_workspace_url')]",
                        "databricks_clusterid": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_databricks_clusterid')]",
                        "vault_url": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_vault_url')]",
                        "az_sql_server_name": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_az_sql_server_name')]",
                        "az_sql_db_name": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_az_sql_db_name')]",
                        "EmailSuccess": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_EmailSuccess')]",
                        "EmailFailure": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_EmailFailure')]",
                        "crm_servername": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_crm_servername')]",
                        "crm_dbname": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_crm_dbname')]",
                        "crm_username": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_crm_username')]",
                        "storageaccountname": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_storageaccountname')]",
                        "az_synapse_crm_server": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_az_synapse_crm_server')]",
                        "az_synapse_crm_db": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_az_synapse_crm_db')]",
                        "fplus_host": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_fplus_host')]",
                        "fplus_username": "[parameters('trg-fplus-forward-reverse-flow_properties_pipeline_parameters_fplus_username')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 60,
                    "startTime": "2022-09-01T16:16:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pip-fplus-forward-flow')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-campusep-reverse-flow')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pip-campusesp-reverse-flow",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "windowStart": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_windowStart')]",
                            "server_name": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_server_name')]",
                            "database_name": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_database_name')]",
                            "crm_servername": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_crm_servername')]",
                            "crm_dbname": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_crm_dbname')]",
                            "crm_username": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_crm_username')]",
                            "vault_url": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_vault_url')]",
                            "az_synapse_em_server": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_az_synapse_em_server')]",
                            "az_synapse_em_db": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_az_synapse_em_db')]",
                            "storageaccountname": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_storageaccountname')]",
                            "databricks_workspace_url": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_databricks_workspace_url')]",
                            "databricks_clusterid": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_databricks_clusterid')]",
                            "campusesp_hostname": "[parameters('trg-campusep-reverse-flow_properties_pip-campusesp-reverse-flow_parameters_campusesp_hostname')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Week",
                        "interval": 1,
                        "startTime": "2022-11-16T19:00:00",
                        "timeZone": "Central Standard Time",
                        "schedule": {
                            "minutes": [
                                0
                            ],
                            "hours": [
                                19
                            ],
                            "weekDays": [
                                "Wednesday"
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pip-campusesp-reverse-flow')]"
            ]
        }
    ]
}