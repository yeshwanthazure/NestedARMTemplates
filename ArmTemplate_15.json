{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "RNLADFNDPPROD"
        },
        "trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_crm_servername": {
            "type": "string",
            "defaultValue": "10.200.0.22"
        },
        "trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_crm_dbname": {
            "type": "string",
            "defaultValue": "RNLMAP_MSCRM"
        },
        "trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_crm_username": {
            "type": "string",
            "defaultValue": "svc_az_ndp"
        },
        "trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_az_sql_server_name": {
            "type": "string",
            "defaultValue": "rnlndpprodazsql01.database.windows.net"
        },
        "trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_az_sql_db_name": {
            "type": "string",
            "defaultValue": "NDPPRODSQLDB"
        },
        "trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_vault_url": {
            "type": "string",
            "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/pip-copy-crm-to-ads')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From CRM to ADLS",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select *\nfrom dbo.contactbase with(nolock)",
                                "queryTimeout": "06:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "writeBatchSize": 100000,
                                "allowCopyCommand": true,
                                "copyCommandSettings": {},
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": "rnlndpproddls"
                                    }
                                },
                                "path": "crmtoads/temp/Synapse_data",
                                "enableCompression": true
                            },
                            "parallelCopies": 100
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": "10.200.0.22",
                                    "crm_dbname": "RNLMAP_MSCRM",
                                    "crm_username": "svc_az_ndp",
                                    "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": "stg_ContactBase_test_2",
                                    "az_synapse_crm_server": "rnlndpprodcrmsynapse.sql.azuresynapse.net",
                                    "az_synapse_crm_db": "NDPPRODCRMPL1"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-10T05:10:57Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-campusesp-id-upsert')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Parent id upsert in crm",
                        "description": "id entity upsert in crm",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "additionalColumns": [
                                    {
                                        "name": "IdType",
                                        "value": {
                                            "value": "E5DC9396-C45D-EC11-A9D7-000D3A062608",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "select\nib.po_idid,\ncb.[po_contactnumber],\ncb.[ContactId],\ncesp.CampusESP_ID,\ncesp.user_id\nfrom [dbo].[CampusESPtoRNL_Staging] cesp\ninner join dbo.contactbase cb\non cesp.user_id = cb.po_contactnumber\nleft join dbo.po_idbase ib\non cb.contactid=ib.po_contactid and ib.po_lookupid='E5DC9396-C45D-EC11-A9D7-000D3A062608' and ib.po_name=cesp.CampusESP_Id\nwhere (cesp.[email] !='' or cesp.[email] != NULL or cesp.[email] is not null)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DynamicsCrmSink",
                                "writeBatchSize": 10,
                                "writeBehavior": "upsert"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ContactId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_contactid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_idid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_idid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IdType"
                                        },
                                        "sink": {
                                            "name": "po_lookupid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CampusESP_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_name",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "CampusESPtoRNL_Staging",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_entity_id",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Student id upsert in crm",
                        "description": "id entity upsert in crm",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "additionalColumns": [
                                    {
                                        "name": "IdType",
                                        "value": {
                                            "value": "E5DC9396-C45D-EC11-A9D7-000D3A062608\n",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "select distinct\ncb.po_contactnumber,\nib.po_idid,\ncb.[ContactId],\ncesp.CampusESP_ID,\ncesp.student_id\nfrom [dbo].[CampusESPtoRNL_Staging] cesp\ninner join dbo.contactbase cb\non cesp.student_id = cb.po_contactnumber\nleft join dbo.po_idbase ib\non cb.contactid=ib.po_contactid and ib.po_lookupid='E5DC9396-C45D-EC11-A9D7-000D3A062608' and ib.po_name=cesp.CampusESP_Id\nwhere (len(ltrim(cesp.[student_first_name])) * len(ltrim(cesp.[student_last_name]))*len(ltrim(cesp.[student_email]))) IS NOT NULL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DynamicsCrmSink",
                                "writeBatchSize": 10,
                                "writeBehavior": "upsert"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ContactId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_contactid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_idid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_idid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IdType"
                                        },
                                        "sink": {
                                            "name": "po_lookupid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CampusESP_ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_name",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "CampusESPtoRNL_Staging",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_entity_id",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-24T09:41:59Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-campusesp-contact-upsert')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Update ContactNumber in CRM",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "student contact upsert in crm",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "parent contact upsert in crm",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "If Student contact found duplicate",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "If Parent contact found duplicate",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_RNLMAP_MSCRM",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "crm_servername": "10.200.0.22",
                                "crm_dbname": "RNLMAP_MSCRM",
                                "crm_username": "svc_az_ndp",
                                "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": {
                                        "value": "update \ndbo.contactbase \nset po_contactnumber=dbo.[fn_URLSeed](ABS(CAST(CAST(NEWID() AS VARBINARY) AS INT)),contactId),\nModifiedOn = GETDATE()\nwhere po_contactnumber is null and po_vendor='CampusESP'",
                                        "type": "Expression"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "parent contact upsert in crm",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "additionalColumns": [
                                    {
                                        "name": "po_vendor",
                                        "value": {
                                            "value": "CampusESP",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "po_contactype",
                                        "value": {
                                            "value": "936710001",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "SELECT \ncb.ContactId as ContactId_source,\nstg.user_id,\nstg.first_name,\nstg.last_name,\nstg.email,\ncb.EMailAddress1,\nstg.phone,\nstg.Relationship_to_Student,\nstg.address1,\nstg.address2,\nstg.city,\nstg.state,\nstg.zip,\nstg.country_code FROM [dbo].[CampusESPtoRNL_Staging] stg\nleft join  dbo.contactbase cb\non stg.[user_id]=cb.po_contactnumber and stg.[email]=cb.EMailAddress1\nwhere (stg.[email] !='' or stg.[email] != NULL or stg.[email] IS NOT NULL)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DynamicsCrmSink",
                                "writeBatchSize": 10,
                                "writeBehavior": "upsert"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ContactId_source",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "contactid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "city",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "address1_city",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "country_code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "address1_county",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "address1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "address1_line1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "address2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "address2_line2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "zip",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "address1_postalcode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "state",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "address1_stateorprovince",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "email",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "emailaddress1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "first_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "firstname",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "last_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "lastname",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "phone",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "mobilephone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "user_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_contactnumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_contactype"
                                        },
                                        "sink": {
                                            "name": "po_contacttype",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Relationship_to_Student",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_relationshiprole",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_vendor"
                                        },
                                        "sink": {
                                            "name": "po_vendor",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "CampusESPtoRNL_Staging",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_entity_contact",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "student contact upsert in crm",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "additionalColumns": [
                                    {
                                        "name": "po_vendor",
                                        "value": {
                                            "value": "CampusESP",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "po_contactype",
                                        "value": {
                                            "value": "936710000",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "parentcustomerid@EntityReference",
                                        "value": {
                                            "value": "account",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "parentcustomertype",
                                        "value": {
                                            "value": "account",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "SELECT distinct\ncb.ContactId as ContactId_source,\nstg.accountid,\nstg.student_id,\nstg.student_first_name,\nstg.student_last_name,\nstg.student_email\nFROM [dbo].[CampusESPtoRNL_Staging] stg\nleft join  dbo.contactbase cb \non stg.[student_id]=cb.po_contactnumber and stg.[student_email]=cb.EMailAddress1\nwhere (len(ltrim(stg.[student_first_name])) * len(ltrim(stg.[student_last_name]))*len(ltrim(stg.[student_email]))) IS NOT NULL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DynamicsCrmSink",
                                "writeBatchSize": 10,
                                "writeBehavior": "upsert"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ContactId_source",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "contactid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "student_email",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "emailaddress1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "student_first_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "firstname",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "student_last_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "lastname",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "accountid",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "parentcustomerid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "parentcustomertype"
                                        },
                                        "sink": {
                                            "name": "parentcustomeridtype",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "student_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_contactnumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_contactype"
                                        },
                                        "sink": {
                                            "name": "po_contacttype",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_vendor"
                                        },
                                        "sink": {
                                            "name": "po_vendor",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "parentcustomerid@EntityReference"
                                        },
                                        "sink": {
                                            "name": "parentcustomerid@EntityReference"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "CampusESPtoRNL_Staging",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_entity_contact",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Update Contactnumber in PartnerDB",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Update ContactNumber in CRM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_UpdateContactNumberStudentParentInPartnerDB]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_RNLMAP_MSCRM",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "crm_servername": "10.200.0.22",
                                "crm_dbname": "RNLMAP_MSCRM",
                                "crm_username": "svc_az_ndp",
                                "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                            }
                        }
                    },
                    {
                        "name": "Update Parent record with Student Contact",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Update Contactnumber in PartnerDB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "additionalColumns": [
                                    {
                                        "name": "Type",
                                        "value": {
                                            "value": "contact",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "parentcustomerid@EntityReference",
                                        "value": {
                                            "value": "contact",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "SELECT distinct\na.user_id,\nb.contactid,\ncb.contactid as parentid,\nb.firstname,b.lastname\nFROM [dbo].[CampusESPtoRNL_Staging] a\ninner join dbo.Contactbase  b\non a.student_id COLLATE DATABASE_DEFAULT=b.po_contactnumber COLLATE DATABASE_DEFAULT\ninner join dbo.Contactbase  cb\non a.user_id COLLATE DATABASE_DEFAULT=cb.po_contactnumber COLLATE DATABASE_DEFAULT\nwhere (a.user_id!='' or a.user_id IS NOT NULL) and (a.[student_first_name] !='' or a.[student_first_name] != NULL) and\n(a.[student_last_name] !='' or a.[student_last_name] != NULL) and\n(a.[student_email] !='' or a.[student_email] != NULL or a.[student_email] IS NOT NULL)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DynamicsCrmSink",
                                "writeBatchSize": 10,
                                "writeBehavior": "upsert"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "parentid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "contactid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "contactid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "parentcustomerid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "parentcustomerid@EntityReference"
                                        },
                                        "sink": {
                                            "name": "parentcustomerid@EntityReference"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Type"
                                        },
                                        "sink": {
                                            "name": "parentcustomeridtype",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "CampusESPtoRNL_Staging",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_entity_contact",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Update Parent record with  Account",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Update Contactnumber in PartnerDB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "additionalColumns": [
                                    {
                                        "name": "Type",
                                        "value": {
                                            "value": "account",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "parentcustomerid@EntityReference",
                                        "value": {
                                            "value": "account",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "SELECT distinct\na.user_id,\na.student_id,\na.first_name,\na.last_name,\na.student_first_name,\na.AccountId,\nb.contactid\nFROM [dbo].[CampusESPtoRNL_Staging] a  \ninner join dbo.Contactbase  b\non a.user_id COLLATE DATABASE_DEFAULT=b.po_contactnumber COLLATE DATABASE_DEFAULT\nwhere (a.user_id!='' or a.user_id!=NULL) and  (a.student_id IS NULL or a.student_id='')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DynamicsCrmSink",
                                "writeBatchSize": 10,
                                "writeBehavior": "upsert"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "contactid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "contactid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "parentcustomerid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Type"
                                        },
                                        "sink": {
                                            "name": "parentcustomeridtype",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "parentcustomerid@EntityReference"
                                        },
                                        "sink": {
                                            "name": "parentcustomerid@EntityReference"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "CampusESPtoRNL_Staging",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_entity_contact",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "If Student contact found duplicate",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "student contact upsert in crm",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@contains(activity('student contact upsert in crm').output.errors[0].Message,' Duplicates found !!!')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "delete contacts for CampusESP currentdate",
                                    "description": "delete record which is created for today for campusesp if upsert activity fails in between",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_RNLMAP_MSCRM",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "crm_servername": "10.200.0.22",
                                            "crm_dbname": "RNLMAP_MSCRM",
                                            "crm_username": "svc_az_ndp",
                                            "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "type": "Query",
                                                "text": {
                                                    "value": "delete from dbo.ContactBase  \nwhere \n po_vendor='CampusESP' AND\nCAST(CreatedOn AS DATE)=\n'@{concat(formatDateTime(pipeline().parameters.windowStart,'yyyy'),'-',formatDateTime(pipeline().parameters.windowStart,'MM'),'-',formatDateTime(pipeline().parameters.windowStart,'dd'))}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "CRM Duplicate found",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 1
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "If Parent contact found duplicate",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "parent contact upsert in crm",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@contains(activity('parent contact upsert in crm').output.errors[0].Message,' Duplicates found !!!')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "delete contacts for CampusESP currentdate_copy1",
                                    "description": "delete record which is created for today for campusesp if upsert activity fails in between",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_RNLMAP_MSCRM",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "crm_servername": "10.200.0.22",
                                            "crm_dbname": "RNLMAP_MSCRM",
                                            "crm_username": "svc_az_ndp",
                                            "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "type": "Query",
                                                "text": {
                                                    "value": "delete from dbo.ContactBase  \nwhere \n po_vendor='CampusESP' AND\nCAST(CreatedOn AS DATE)=\n'@{concat(formatDateTime(pipeline().parameters.windowStart,'yyyy'),'-',formatDateTime(pipeline().parameters.windowStart,'MM'),'-',formatDateTime(pipeline().parameters.windowStart,'dd'))}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "CRM Duplicate Found",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 1
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "az_synapse_em_server": {
                        "type": "string"
                    },
                    "az_synapse_em_db": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-25T09:31:50Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-melissa-addressenrichment-EMScoring_Parallel_Lookup')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Melissa AccessKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT (ROW_NUMBER() Over (Order by (select null))) % 7 rnk,\nsource_key,Line1,Line2,City,StateOrProvince,Country,PostalCode,Firstname,Lastname,Telephone2\nFrom (\nSelect top 3000 a.source_key,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Country,'''') as Country,Replace(isnull(a.ZIP,''''),'''''''','''') as PostalCode,a.response_id,cb.Firstname,cb.Lastname,cb.telephone2\nFROM alignment.customer_address_base a\nJoin alignment.contactbase cb on cb.response_id=a.response_id and cb.source_key=a.source_key\nLeft Join (\nSelect distinct trim(response_id) response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1) b on a.response_id = b.response_id\nWHERE md_flag=''DIA Approved''\nAND b.purpose_name = ''EM Scoring''\nAND a.response_id=''',pipeline().parameters.response_id,'''',') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "1 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {},
                                        "httpRequestTimeout": ""
                                    }
                                },
                                {
                                    "name": "1 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('1 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('1 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('1 Rank Melissa REST API').output.Records[0].PostalCode,activity('1 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Melissa AccessKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.MelissaAccessKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "6 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('6 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('6 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('6 Rank Melissa REST API').output.Records[0].PostalCode,activity('6 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "5 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('5 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('5 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('5 Rank Melissa REST API').output.Records[0].PostalCode,activity('5 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "3 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('3 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('3 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('3 Rank Melissa REST API').output.Records[0].PostalCode,activity('3 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "2 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('2 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('2 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('2 Rank Melissa REST API').output.Records[0].PostalCode,activity('2 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "4 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('4 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('4 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('4 Rank Melissa REST API').output.Records[0].PostalCode,activity('4 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "0 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('0 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('0 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('0 Rank Melissa REST API').output.Records[0].PostalCode,activity('0 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "5 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "1 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "505",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Scoring"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "504",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Scoring"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "valueToBeReplaced": {
                        "type": "String",
                        "defaultValue": "'"
                    },
                    "replaceWith": {
                        "type": "String",
                        "defaultValue": "''"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Melissa"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-14T01:04:46Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-melissa-addressenrichment-EMScoring_Parallel_usp')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Melissa AccessKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT (ROW_NUMBER() Over (Order by (select null))) % 5 rnk,\nsource_key,Line1,Line2,City,StateOrProvince,Country,PostalCode\nFrom (\nSelect top 3000 a.source_key,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Country,'''') as Country,Replace(isnull(a.ZIP,''''),'''''''','''') as PostalCode,a.response_id\nFROM alignment.customer_address_base a\nLeft Join (\nSelect distinct trim(response_id) response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1) b on a.response_id = b.response_id\nWHERE md_flag=''DIA Approved''\nAND b.purpose_name = ''EM Scoring''\nAND a.response_id=''',pipeline().parameters.response_id,'''',') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "1 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "1 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('1 Rank Melissa REST API').output.Records[0].PostalCode,activity('1 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "1 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Melissa AccessKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.MelissaAccessKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "3 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "3 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('3 Rank Melissa REST API').output.Records[0].PostalCode,activity('3 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "3 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "2 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "2 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('2 Rank Melissa REST API').output.Records[0].PostalCode,activity('2 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "2 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "4 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "4 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('4 Rank Melissa REST API').output.Records[0].PostalCode,activity('4 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "4 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "0 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "0 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('0 Rank Melissa REST API').output.Records[0].PostalCode,activity('0 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "0 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "1 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "505",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Scoring"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "504",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Scoring"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "valueToBeReplaced": {
                        "type": "String",
                        "defaultValue": "'"
                    },
                    "replaceWith": {
                        "type": "String",
                        "defaultValue": "''"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Melissa"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-14T01:04:46Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-flag-fplus-inquiry-files')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Inquiry model Fplus files which reached till CRM",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select distinct acc.name as po_accountName,cstord.po_responseid\r\nfrom [dbo].[po_fqtcustomerorderBase] as cstord\r\nleft join [dbo].[po_accountmodelBase] as accmod\r\non cstord.[po_accountmodel] = accmod.[po_accountmodelId]\r\nleft join [dbo].[AccountBase] as acc\r\non cstord.[po_account] = acc.AccountId\r\nleft join dbo.[po_fqtcustomerorderstatusbase] as cststat\r\non cstord.po_orderstatus=cststat.po_fqtcustomerorderstatusId\r\nleft join [dbo].[po_scoringmodelBase] as scmod\r\non accmod.po_modeltype = scmod.[po_scoringmodelId]\r\n--where cstord.po_uploaddetailid In (152199)\r\nwhere ((cststat.[po_name] = 'Received for Modeling'  or cststat.[po_name] = 'Received for Scoring')\r\nand (scmod.[po_name] = 'Inquiry' )) \r\n--and po_responseid='890337CD-99ED-EC11-A824-000D3A6F3F31'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE dbo.flag_fplus_files",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "po_fqtcutomerorderbase",
                                    "crm_servername": "10.200.0.22",
                                    "crm_dbname": "RNLMAP_MSCRM",
                                    "crm_username": "svc_az_ndp",
                                    "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "flag_fplus_files",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-19T11:51:04Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-flag-fplus-prospect-files')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Prospect model Fplus files which reached till CRM",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select  distinct  acc.name as po_accountName,cstord.po_responseid\r\nfrom [dbo].[po_fqtcustomerorderBase] as cstord\r\nleft join [dbo].[po_accountmodelBase] as accmod\r\non cstord.[po_accountmodel] = accmod.[po_accountmodelId]\r\nleft join [dbo].[AccountBase] as acc\r\non cstord.[po_account] = acc.AccountId\r\nleft join dbo.[po_fqtcustomerorderstatusBase] as cststat\r\non cstord.po_orderstatus=cststat.po_fqtcustomerorderstatusId\r\nleft join [dbo].[po_scoringmodelBase] as scmod\r\non accmod.po_modeltype = scmod.[po_scoringmodelId]\r\nwhere ((cststat.[po_name] = 'Received for Modeling' \r\nor cststat.[po_name] = 'Received for Scoring') and ( scmod.po_name =  'Prospect'))\r\n--and cstord.po_responseid='d551db9e-f4ed-ec11-a824-000d3a6f3f31'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE dbo.flag_fplus_files",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "po_fqtcutomerorderbase",
                                    "crm_servername": "10.200.0.22",
                                    "crm_dbname": "RNLMAP_MSCRM",
                                    "crm_username": "svc_az_ndp",
                                    "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "flag_fplus_files",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-14T03:42:17Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-flag-fplus-admit-applicant-files')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get AdmitApp model Fplus files which reached till CRM",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select  distinct acc.name as po_accountName,cstord.po_responseid\r\nfrom [dbo].[po_fqtcustomerorderBase] as cstord\r\nleft join [dbo].[po_accountmodelBase] as accmod\r\non cstord.[po_accountmodel] = accmod.[po_accountmodelId]\r\nleft join [dbo].[AccountBase] as acc\r\non cstord.[po_account] = acc.AccountId\r\nleft join dbo.[po_fqtcustomerorderstatusbase] as cststat\r\non cstord.po_orderstatus=cststat.po_fqtcustomerorderstatusId\r\nleft join [dbo].[po_scoringmodelBase] as scmod\r\non accmod.po_modeltype = scmod.[po_scoringmodelId]\r\n--where cstord.po_uploaddetailid=152251\r\nwhere ((cststat.[po_name] = 'Received for Modeling'  or cststat.[po_name] = 'Received for Scoring')\r\nand (scmod.[po_name] = 'Admit' or  scmod.po_name = 'Applicant')) \r\n--and cstord.po_responseid='0baa4571-34b0-46e4-9555-d95b7a53cf08'\r\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE dbo.flag_fplus_files",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "po_fqtcutomerorderbase",
                                    "crm_servername": "10.200.0.22",
                                    "crm_dbname": "RNLMAP_MSCRM",
                                    "crm_username": "svc_az_ndp",
                                    "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "flag_fplus_files",
                                    "schemaname": "dbo",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-19T11:49:57Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_DIA_Enrichment_Alignment_ADS_view_Test')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_Alignment_ADS",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "Select \n c.source_key\n,c.FirstName\n,c.LastName\n,c.Telephone1\n,c.STUDENTID\n,c.EMailAddress1\n,c.Telephone2\n,c.BirthDate\n,a.Line1\n,a.Line2\n,a.City\n,a.StateOrProvince\n,a.PostalCode\n,a.Country\n,a.address_key\n,a.county_fips\n,a.County\n,a.Latitude\n,a.Longitude\n,a.ZIP\n,a.md_flag\n,a.md_received_date\n,c.pe_flag\n,c.pe_received_date\n,c.account_id as account_id \n,coalesce(c.accountNumber,a.accountNumber) as accountNumber\n,Coalesce(c.account_name,a.account_name) as account_name\n,a.modified_filename\nFROM alignment.customer_address_base a \nJOIN alignment.contactbase c \nON  a.response_id = c.response_id\nand a.source_key = c.source_key\n --on b.modified_filename = c.modified_filename\nWHERE a.md_flag = 'DIA Approved'\nand a.response_id in \n('5639f196-7d5a-ed11-a9dd-000d3a062608'\n,'5000fa04-1165-ed11-a9dd-000d3a062608'\n,'f24de469-d960-ed11-a9d4-000d3a0627fb'\n,'d1c1e6f3-d860-ed11-a9d4-000d3a0627fb'\n,'c18680a1-bc5e-ed11-a86b-000d3a075a33'\n,'b81a98c8-d159-ed11-a9dd-000d3a062608'\n,'0b8e2408-885e-ed11-a86b-000d3a075a33'\n,'f9778b98-f860-ed11-a9d4-000d3a0627fb'\n,'2c7f61ad-385f-ed11-a86b-000d3a075a33'\n,'4de2f32f-475f-ed11-a86b-000d3a075a33'\n,'a71dbc1c-395c-ed11-a86b-000d3a075a33'\n,'bd48e741-3d5f-ed11-a86b-000d3a075a33'\n,'2404fcd0-9f61-ed11-a86b-000d3a075a33'\n,'32365781-cb53-ed11-a86b-000d3a075a33')",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "preCopyScript": "Truncate table dia.PreStg_AlignmentDIAReview",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {},
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "dataenrichment/Staging_ADS"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "PreStg_AlignmentDIAReview",
                                    "schemaname": "dia",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "SP_ADS_Review_Comparision",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy_Alignment_ADS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dia].[usp_DIAReview_ADS_Comparison]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Copy_ADS_Alignment",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SP_ADS_Review_Comparision",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "Select * \r\nfrom dia.AlignmentADSReference \r\n--where modified_filename in (select distinct modified_filename from dia.PreStg_AlignmentDIAReview) and\r\n --(PE_ADS_Reference = 1 \r\n--or MD_ADS_Reference = 1)\r\n--where PE_ADS_Reference = 1 \r\n--or MD_ADS_Reference = 1",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "Truncate table dia.AlignmentADSReference",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "source_key",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "source_key",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FirstName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "FirstName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "LastName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Telephone1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "STUDENTID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "STUDENTID",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EMailAddress1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Telephone2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BirthDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "BirthDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Line1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Line1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Line2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Line2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "City",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "City",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StateOrProvince",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "StateOrProvince",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostalCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PostalCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Country",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Country",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "address_key",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "address_key",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "county_fips",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "county_fips",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Latitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "Latitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Longitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "Longitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ZIP",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ZIP",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Telephone1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Telephone1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Line1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Line1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Line2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Line2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_City",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_City",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_StateOrProvince",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_StateOrProvince",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Country",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Country",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_PostalCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_PostalCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Latitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "ADS_Latitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Longitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "ADS_Longitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentCustomerId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ParentCustomerId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "md_flag",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "md_flag",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "md_received_date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "md_received_date",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "pe_flag",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "pe_flag",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "pe_received_date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "pe_received_date",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "account_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "accountNumber",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "accountNumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "modified_filename",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "modified_filename",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PE_ADS_Reference",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "PE_ADS_Reference",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MD_ADS_Reference",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "MD_ADS_Reference",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_FirstName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_FirstName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_LastName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_LastName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_EMailAddress1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_EMailAddress1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_homephone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_homephone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_BirthDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "In_ADS_BirthDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Matched_Count",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Matched_Count",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Contact_Record_Count",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Contact_Record_Count",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Telephone2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Telephone2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "County",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "County",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_County",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_County",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_county_fips",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_county_fips",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "AlignmentADSReference",
                                    "schemaname": "dia",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "AlignmentADSReference",
                                    "schemaname": "dia",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "az_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_database_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    }
                },
                "folder": {
                    "name": "DIA"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-17T20:12:04Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-copy-ads-to-az-sql')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "select *\r\nfrom [archive].[alignment_contact_ref_historical]\r\nwhere response_id='3ab22cbb-b65f-ed11-a86b-000d3a075a33'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADS_Enrichment_reference1",
                                "type": "DatasetReference",
                                "parameters": {
                                    "schema": "archive",
                                    "TableName": "alignment_contact_ref_historical",
                                    "az_synapse_crm_server": "rnlndpprodcrmsynapse.sql.azuresynapse.net",
                                    "az_synapse_crm_db": "NDPPRODCRMPL1"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contact_ref_historical_prod_fix",
                                    "schemaname": "alignment",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-18T20:09:00Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-contactSync')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "upsert_contactbase",
                        "description": "Upsert data from parquet files to contactbase table in crm",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 60,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "additionalColumns": [
                                    {
                                        "name": "parentcustomerid@EntityReference",
                                        "value": "account"
                                    }
                                ],
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DynamicsSink",
                                "writeBatchSize": 9,
                                "writeBehavior": "upsert",
                                "ignoreNullValues": true
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": true,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Warning",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "ls_Azuredatalakegen2",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "storageaccountname": {
                                                "value": "rnlndpproddls",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "path": {
                                        "value": "@concat('crmalignment/log/','123/','5ed88eb7-b224-42d0-8990-afe5357112ba')",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADS_Enrichment_reference1",
                                "type": "DatasetReference",
                                "parameters": {
                                    "schema": "archive",
                                    "TableName": "contact_sync",
                                    "az_synapse_crm_server": "rnlndpprodcrmsynapse.sql.azuresynapse.net",
                                    "az_synapse_crm_db": "NDPPRODCRMPL1"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_dynamics_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "EntityName": "contact"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-12-04T17:21:08Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-zeemee-id-upsert')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "id upsert",
                "activities": [
                    {
                        "name": "id upsert in crm",
                        "description": "id entity upsert in crm",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "additionalColumns": [
                                    {
                                        "name": "po_idtype",
                                        "value": {
                                            "value": "E586D2D5-C45D-EC11-A820-000D3AF5A11D",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "select distinct\nib.po_idid,\ncb.[po_contactnumber],\ncb.[ContactId],\nzs.[ZeeMee.ID],\nzs.[School.ID2] \nfrom [dbo].[ZeemeetoRNL_Staging] zs\nleft join dbo.contactbase cb\non zs.[School.ID2]=cb.po_contactnumber\nleft join dbo.po_idbase ib \non cb.contactid=ib.po_contactid \nwhere (len(ltrim(zs.[First.Name])) * len(ltrim(ZS.[Last.Name]))*len(ltrim(zs.[Phone.Number]))) IS NOT NULL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DynamicsCrmSink",
                                "writeBatchSize": 10,
                                "writeBehavior": "upsert",
                                "ignoreNullValues": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "po_idid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_idid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ContactId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_contactid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ZeeMee.ID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_idtype"
                                        },
                                        "sink": {
                                            "name": "po_lookupid",
                                            "type": "Guid"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_crm_Dynamic3",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "ZeemeetoRNL_Staging",
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    },
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_entity_id1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "lastPublishTime": "2022-12-06T11:03:04Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-zeemee-contact-upsert')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "contact upsert",
                "activities": [
                    {
                        "name": "contact upsert in crm",
                        "description": "contact entity upsert in crm",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "additionalColumns": [
                                    {
                                        "name": "po_vendor",
                                        "value": {
                                            "value": "Zeemee",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "type",
                                        "value": {
                                            "value": "account",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "parentcustomerid@EntityReference",
                                        "value": {
                                            "value": "account",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "po_contacttype",
                                        "value": {
                                            "value": "936710000",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "sqlReaderQuery": {
                                    "value": "with cte1 as (\nselect  cb.ContactId as ContactId_source,\nab.accountid as accountid,\nzs.[School.ID2],\nzs.[Student.ID.PartnerCSV],\nzs.[First.Name],\nZS.[Last.Name],\nzs.[Email],\nzs.[Phone.Number]\nfrom [dbo].[ZeemeetoRNL_Staging] zs\nleft join  dbo.contactbase cb \non zs.[School.ID2]=cb.po_contactnumber \nleft join dbo.accountbase ab\non zs.[Partner.Institution]=ab.po_zeemeeslugname\nwhere (len(ltrim(zs.[First.Name])) * len(ltrim(ZS.[Last.Name]))*len(ltrim(zs.[Phone.Number]))) IS NOT NULL ),\n cte2 as (\n select  cb.ContactId as ContactId_source,\nab.accountid as accountid,\nzs.[School.ID2],\nzs.[Student.ID.PartnerCSV],\nzs.[First.Name],\nZS.[Last.Name],\nzs.[Email],\nzs.[Phone.Number]\nfrom [dbo].[ZeemeetoRNL_Staging] zs\nleft join dbo.po_idBase id\non id.po_name=zs.[Student.ID.PartnerCSV]\nleft join  dbo.contactbase cb \non id.[po_contactid]=cb.ContactId \nleft join dbo.accountbase ab\non zs.[Partner.Institution]=ab.po_zeemeeslugname\nwhere (len(ltrim(zs.[First.Name])) * len(ltrim(ZS.[Last.Name]))*len(ltrim(zs.[Phone.Number]))) IS NOT NULL and zs.[School.ID2] is null )\n\nSelect * From cte1\nUNION\nSELECT *\nFROM  cte2",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DynamicsCrmSink",
                                "writeBatchSize": 10,
                                "writeBehavior": "upsert"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ContactId_source",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "contactid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Email",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "emailaddress1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "First.Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "firstname",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Last.Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "lastname",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Phone.Number",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "mobilephone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "accountid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "parentcustomerid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "parentcustomerid@EntityReference"
                                        },
                                        "sink": {
                                            "name": "parentcustomerid@EntityReference"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "type"
                                        },
                                        "sink": {
                                            "name": "parentcustomeridtype",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "School.ID2",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "po_contactnumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_vendor"
                                        },
                                        "sink": {
                                            "name": "po_vendor",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_contacttype"
                                        },
                                        "sink": {
                                            "name": "po_contacttype",
                                            "type": "Int32"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_crm_Dynamic5",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "ZeemeetoRNL_Staging",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_pi_entity_contact1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Update ContactNumber in CRM",
                        "description": "update contact number in crm ",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "contact upsert in crm",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AppboostCrmSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": {
                                        "value": "update \ndbo.contactbase \nset po_contactnumber=dbo.[fn_URLSeed](ABS(CAST(CAST(NEWID() AS VARBINARY) AS INT)),contactId),\nModifiedOn = GETDATE()\nwhere po_contactnumber is null and po_vendor='Zeemee'\n",
                                        "type": "Expression"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Update StudentID in PartnerDB",
                        "description": "update StudentID in zeemee staging table",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Update ContactNumber in CRM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_UpdateContactNumberInPartnerDB]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AppboostCrmSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "delete contacts for Zeemee currentdate",
                        "description": "delete record which is created for today for zeemee if upsert activity fails in between",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "contact upsert in crm",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AppboostCrmSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": {
                                        "value": "delete from dbo.ContactBase  \nwhere \n po_vendor='Zeemee' AND\nCAST(CreatedOn AS DATE)=\n'@{concat(formatDateTime(pipeline().parameters.windowStart,'yyyy'),'-',formatDateTime(pipeline().parameters.windowStart,'MM'),'-',formatDateTime(pipeline().parameters.windowStart,'dd'))}'",
                                        "type": "Expression"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "windowStart": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "az_synapse_em_server": {
                        "type": "string"
                    },
                    "az_synapse_em_db": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "lastPublishTime": "2022-12-06T11:03:05Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trg-sync-config-data-from-crm')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pip-copy-config-from-CRM-to-azSQL",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "crm_servername": "[parameters('trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_crm_servername')]",
                            "crm_dbname": "[parameters('trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_crm_dbname')]",
                            "crm_username": "[parameters('trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_crm_username')]",
                            "az_sql_server_name": "[parameters('trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_az_sql_server_name')]",
                            "az_sql_db_name": "[parameters('trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_az_sql_db_name')]",
                            "vault_url": "[parameters('trg-sync-config-data-from-crm_properties_pip-copy-config-from-CRM-to-azSQL_parameters_vault_url')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2022-10-15T09:00:00",
                        "timeZone": "India Standard Time"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_PIFileCopy')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "FilesToRename",
                                "type": "DatasetReference"
                            },
                            "name": "FileSource"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "FilesToRename",
                                "type": "DatasetReference"
                            },
                            "name": "FileDestination"
                        }
                    ],
                    "transformations": [],
                    "script": "parameters{\n\tDestinationfilename as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> FileSource\nFileSource sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[($Destinationfilename)],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tpartitionBy('hash', 1)) ~> FileDestination"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_em_searchvendor_appendheader')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SearchVendortoADLS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_adls_withoutheader",
                                "type": "DatasetReference"
                            },
                            "name": "Header"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_adls_withoutheader",
                                "type": "DatasetReference"
                            },
                            "name": "Values"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_adls_withoutheader",
                                "type": "DatasetReference"
                            },
                            "name": "Sink"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "HeaderSurrogateKey"
                        },
                        {
                            "name": "ValuesSurrogateKey"
                        },
                        {
                            "name": "Union"
                        },
                        {
                            "name": "SortByRowNo"
                        },
                        {
                            "name": "Select"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     DestinationFileName as string",
                        "}",
                        "source(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> Header",
                        "source(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> Values",
                        "Header keyGenerate(output(Row_No as long),",
                        "     startAt: 1L,",
                        "     stepValue: 1L) ~> HeaderSurrogateKey",
                        "Values keyGenerate(output(Row_No as long),",
                        "     startAt: 2L,",
                        "     stepValue: 1L) ~> ValuesSurrogateKey",
                        "HeaderSurrogateKey, ValuesSurrogateKey union(byName: true)~> Union",
                        "Union sort(asc(Row_No, true)) ~> SortByRowNo",
                        "SortByRowNo select(mapColumn(",
                        "          each(match(name!=toString('Row_No')))",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> Select",
                        "Select sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:[($DestinationFileName)],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> Sink"
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/PIFileCopy20')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "FilesToRename156",
                                "type": "DatasetReference"
                            },
                            "name": "FileSource"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "FilesToRename156",
                                "type": "DatasetReference"
                            },
                            "name": "FileDestination"
                        }
                    ],
                    "transformations": [],
                    "script": "parameters{\n\tDestinationfilename as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> FileSource\nFileSource sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[($Destinationfilename)],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tpartitionBy('hash', 1)) ~> FileDestination"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_zeemee_segregated_slugwise')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "partner-Integration"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_pi_synapse",
                                "type": "DatasetReference"
                            },
                            "name": "src"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_pi_adls",
                                "type": "DatasetReference"
                            },
                            "name": "sink"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "Filename"
                        }
                    ],
                    "script": "source(output(\n\t\tAccountId as string,\n\t\t{Account Name} as string,\n\t\t{Slug Name} as string,\n\t\t{First Name} as string,\n\t\t{Last Name} as string,\n\t\tEmail as string,\n\t\t{Cell Phone} as string,\n\t\t{ID Number} as string,\n\t\t{Entry Year} as string,\n\t\t{Entry Term} as string,\n\t\t{Student Type} as string,\n\t\t{Middle Initial} as string,\n\t\t{Email Opt Out} as string,\n\t\tAddress1 as string,\n\t\tCity as string,\n\t\t{State/Province} as string,\n\t\t{Zip Code} as string,\n\t\tCountry as string,\n\t\t{Home Phone} as string,\n\t\t{SMS/Text Opt Out} as string,\n\t\t{Current Status} as string,\n\t\t{Date of Birth} as string,\n\t\t{Race/Ethnicity} as string,\n\t\t{First Gen Flag} as string,\n\t\tGender as string,\n\t\t{Date of Initial Contact} as string,\n\t\t{Initial Source Code} as string,\n\t\t{College Counselor Name/Code} as string,\n\t\t{College Counselor Email} as string,\n\t\t{Initial Visit Type} as string,\n\t\t{Initial Visit Date} as string,\n\t\t{Application Date} as string,\n\t\t{Application Completed Date} as string,\n\t\t{Waitlisted Date} as string,\n\t\t{Denied Date} as string,\n\t\t{Accepted Date} as string,\n\t\t{Committed Date} as string,\n\t\t{Withdrawal Date} as string,\n\t\t{HS CEEB Code} as string,\n\t\t{HS Name} as string,\n\t\tClientID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> src\nsrc derive(filename = 'partnerintegration/'+'zeemee/'+'outbound/'+{Slug Name}+'/'+{Slug Name}+'_'+toString(currentDate(),'yyyyMMdd')+'.csv') ~> Filename\nFilename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'filename',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tid = {ID Number},\n\t\tFirstName = {First Name},\n\t\tLastName = {Last Name},\n\t\tEMail = Email,\n\t\t{Cell Phone},\n\t\t{Entry Year},\n\t\t{Entry Term},\n\t\t{Student Type},\n\t\t{Middle Initial},\n\t\t{Email Opt Out},\n\t\tAddress1,\n\t\tCity,\n\t\t{State/Province},\n\t\t{Zip Code},\n\t\tCountry,\n\t\t{Home Phone},\n\t\t{SMS/Text Opt Out},\n\t\tBirthDate = {Date of Birth},\n\t\t{Race/Ethnicity},\n\t\t{First Gen Flag},\n\t\tGender,\n\t\t{Date of Initial Contact},\n\t\t{Initial Source Code},\n\t\t{College Counselor Name/Code},\n\t\t{College Counselor Email},\n\t\t{Initial Visit Type},\n\t\tCurrentStatus = {Current Status},\n\t\t{Initial Visit Date},\n\t\t{Application Date},\n\t\t{Application Completed Date},\n\t\t{Waitlisted Date},\n\t\t{Denied Date},\n\t\t{Accepted Date},\n\t\t{Commited Date} = {Committed Date},\n\t\t{Withdrawal Date},\n\t\t{HS CEEB Code},\n\t\t{HS Name},\n\t\tClientID,\n\t\tfilename\n\t)) ~> sink"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_zeemee_segregated_slugwise1')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "test"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_pi_sourcefile_zeemee1",
                                "type": "DatasetReference"
                            },
                            "name": "src"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_pi_adls1",
                                "type": "DatasetReference"
                            },
                            "name": "sink"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "Filename"
                        }
                    ],
                    "script": "source(output(\n\t\tid as string,\n\t\t{Account Name} as string,\n\t\tzeemeeslugname as string,\n\t\tAccountId as string,\n\t\tContactId as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tEMail as string,\n\t\t{Cell Phone} as string,\n\t\t{Entry Year} as string,\n\t\t{Entry Term} as string,\n\t\t{Student Type} as string,\n\t\t{Middle Initial} as string,\n\t\t{Email Opt Out} as string,\n\t\tAddress1 as string,\n\t\tCity as string,\n\t\t{State/Province} as string,\n\t\t{Zip Code} as string,\n\t\tCountry as string,\n\t\t{Home Phone} as string,\n\t\t{SMS/Text Opt Out} as string,\n\t\tBirthDate as string,\n\t\t{Race/Ethnicity} as string,\n\t\t{First Gen Flag} as string,\n\t\tGender as string,\n\t\t{Date of Initial Contact} as string,\n\t\t{Initial Source Code} as string,\n\t\t{College Counselor Name/Code} as string,\n\t\t{College Counselor Email} as string,\n\t\t{Initial Visit Type} as string,\n\t\tCurrentStatus as string,\n\t\t{Initial Visit Date} as string,\n\t\t{Application Date} as string,\n\t\t{Application Completed Date} as string,\n\t\t{Waitlisted Date} as string,\n\t\t{Denied Date} as string,\n\t\t{Accepted Date} as string,\n\t\t{Commited Date} as string,\n\t\t{Withdrawal Date} as string,\n\t\t{HS CEEB Code} as string,\n\t\t{HS Name} as string,\n\t\tClientID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> src\nsrc derive(filename = 'partnerintegration/'+'zeemee/'+'outbound/'+zeemeeslugname+'/'+zeemeeslugname+'_'+toString(currentDate(),'yyyyMMdd')+'.csv') ~> Filename\nFilename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'filename',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tid,\n\t\tFirstName,\n\t\tLastName,\n\t\tEMail,\n\t\t{Cell Phone},\n\t\t{Entry Year},\n\t\t{Entry Term},\n\t\t{Student Type},\n\t\t{Middle Initial},\n\t\t{Email Opt Out},\n\t\tAddress1,\n\t\tCity,\n\t\t{State/Province},\n\t\t{Zip Code},\n\t\tCountry,\n\t\t{Home Phone},\n\t\t{SMS/Text Opt Out},\n\t\tBirthDate,\n\t\t{Race/Ethnicity},\n\t\t{First Gen Flag},\n\t\tGender,\n\t\t{Date of Initial Contact},\n\t\t{Initial Source Code},\n\t\t{College Counselor Name/Code},\n\t\t{College Counselor Email},\n\t\t{Initial Visit Type},\n\t\tCurrentStatus,\n\t\t{Initial Visit Date},\n\t\t{Application Date},\n\t\t{Application Completed Date},\n\t\t{Waitlisted Date},\n\t\t{Denied Date},\n\t\t{Accepted Date},\n\t\t{Commited Date},\n\t\t{Withdrawal Date},\n\t\t{HS CEEB Code},\n\t\t{HS Name},\n\t\tClientID,\n\t\tfilename\n\t)) ~> sink"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_zeemee_segregated_slugwise2')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "test"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_pi_sourcefile_zeemee2",
                                "type": "DatasetReference"
                            },
                            "name": "src"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_pi_adls2",
                                "type": "DatasetReference"
                            },
                            "name": "sink"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "Filename"
                        }
                    ],
                    "script": "source(output(\n\t\tid as string,\n\t\t{Account Name} as string,\n\t\tzeemeeslugname as string,\n\t\tAccountId as string,\n\t\tContactId as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tEMail as string,\n\t\t{Cell Phone} as string,\n\t\t{Entry Year} as string,\n\t\t{Entry Term} as string,\n\t\t{Student Type} as string,\n\t\t{Middle Initial} as string,\n\t\t{Email Opt Out} as string,\n\t\tAddress1 as string,\n\t\tCity as string,\n\t\t{State/Province} as string,\n\t\t{Zip Code} as string,\n\t\tCountry as string,\n\t\t{Home Phone} as string,\n\t\t{SMS/Text Opt Out} as string,\n\t\tBirthDate as string,\n\t\t{Race/Ethnicity} as string,\n\t\t{First Gen Flag} as string,\n\t\tGender as string,\n\t\t{Date of Initial Contact} as string,\n\t\t{Initial Source Code} as string,\n\t\t{College Counselor Name/Code} as string,\n\t\t{College Counselor Email} as string,\n\t\t{Initial Visit Type} as string,\n\t\tCurrentStatus as string,\n\t\t{Initial Visit Date} as string,\n\t\t{Application Date} as string,\n\t\t{Application Completed Date} as string,\n\t\t{Waitlisted Date} as string,\n\t\t{Denied Date} as string,\n\t\t{Accepted Date} as string,\n\t\t{Commited Date} as string,\n\t\t{Withdrawal Date} as string,\n\t\t{HS CEEB Code} as string,\n\t\t{HS Name} as string,\n\t\tClientID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> src\nsrc derive(filename = 'partnerintegration/'+'zeemee/'+'outbound/'+zeemeeslugname+'/'+zeemeeslugname+'_'+toString(currentDate(),'yyyyMMdd')+'.csv') ~> Filename\nFilename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'filename',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tid,\n\t\tFirstName,\n\t\tLastName,\n\t\tEMail,\n\t\t{Cell Phone},\n\t\t{Entry Year},\n\t\t{Entry Term},\n\t\t{Student Type},\n\t\t{Middle Initial},\n\t\t{Email Opt Out},\n\t\tAddress1,\n\t\tCity,\n\t\t{State/Province},\n\t\t{Zip Code},\n\t\tCountry,\n\t\t{Home Phone},\n\t\t{SMS/Text Opt Out},\n\t\tBirthDate,\n\t\t{Race/Ethnicity},\n\t\t{First Gen Flag},\n\t\tGender,\n\t\t{Date of Initial Contact},\n\t\t{Initial Source Code},\n\t\t{College Counselor Name/Code},\n\t\t{College Counselor Email},\n\t\t{Initial Visit Type},\n\t\tCurrentStatus,\n\t\t{Initial Visit Date},\n\t\t{Application Date},\n\t\t{Application Completed Date},\n\t\t{Waitlisted Date},\n\t\t{Denied Date},\n\t\t{Accepted Date},\n\t\t{Commited Date},\n\t\t{Withdrawal Date},\n\t\t{HS CEEB Code},\n\t\t{HS Name},\n\t\tClientID,\n\t\tfilename\n\t)) ~> sink"
                }
            },
            "dependsOn": []
        }
    ]
}