{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "RNLADFNDPPROD"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment_EMSearchVendorData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('DROP TABLE IF EXISTS #temp_PE\nSELECT DISTINCT (ROW_NUMBER() Over (Order by (select null))) % 7 rnk,c.source_key\n,c.LastName\n,a.Line1\n,a.Line2\n,a.City\n,a.StateOrProvince\n,a.PostalCode\n,c.AccountNumber\ninto #temp_PE\nFROM alignment.customer_address_base a \nJOIN alignment.contactbase c \nON a.source_key = c.source_key\nLeft Join config.Enrichment b on a.source_key = b.source_key \nLeft Join (\nSelect distinct response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1\n)d on a.response_id = d.response_id\nWHERE c.pe_flag = ''DIA Approved''\nAND c.crm_flag =2\nAND a.md_flag in (''Enriched'', ''ADS Referenced'', ''No Enrichment'', ''Not Enriched'')\nAND b.source_key is null\nAND d.purpose_name = ''',pipeline().parameters.purpose_name,'''\nAND d.response_id = ''',pipeline().parameters.response_id,'''',\n\n'Insert Into config.Enrichment\nSelect source_key,''Sequence'',''',pipeline().parameters.purpose_name,''' from #temp_PE\n\nSelect * from #temp_PE')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Audit_Update",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "--ContactBase Audit Update\nDROP TABLE IF EXISTS #temp\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #temp\nfrom alignment.contactbase a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #temp AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'contactbase'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\n--customer_address_base Audit Update\nDROP TABLE IF EXISTS #tempc\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #tempc\nfrom alignment.customer_address_base a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #tempc AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'customer_address_base'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\nSELECT 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "6 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('6 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('6 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP - Alignment History Sync",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Audit_Update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Update]",
                            "storedProcedureParameters": {
                                "Enrichment": {
                                    "value": "PacificEast",
                                    "type": "String"
                                },
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string",
                        "defaultValue": "EM Search Vendor Data"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-19T06:43:06Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment_EMMarketing')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('DROP TABLE IF EXISTS #temp_PE\nSELECT DISTINCT (ROW_NUMBER() Over (Order by (select null))) % 7 rnk,c.source_key\n,c.LastName\n,a.Line1\n,a.Line2\n,a.City\n,a.StateOrProvince\n,a.PostalCode\n,c.AccountNumber\ninto #temp_PE\nFROM alignment.customer_address_base a \nJOIN alignment.contactbase c \nON a.source_key = c.source_key\nLeft Join config.Enrichment b on a.source_key = b.source_key \nLeft Join (\nSelect distinct response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1\n)d on a.response_id = d.response_id\nWHERE c.pe_flag = ''DIA Approved''\nAND c.crm_flag =2\nAND a.md_flag in (''Enriched'', ''ADS Referenced'', ''No Enrichment'', ''Not Enriched'')\nAND b.source_key is null\nAND d.purpose_name = ''',pipeline().parameters.purpose_name,'''\nAND d.response_id = ''',pipeline().parameters.response_id,'''',\n\n'Insert Into config.Enrichment\nSelect source_key,''Sequence'',''',pipeline().parameters.purpose_name,''' from #temp_PE\n\nSelect * from #temp_PE')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Audit_Update",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "--ContactBase Audit Update\nDROP TABLE IF EXISTS #temp\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #temp\nfrom alignment.contactbase a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #temp AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'contactbase'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\n--customer_address_base Audit Update\nDROP TABLE IF EXISTS #tempc\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #tempc\nfrom alignment.customer_address_base a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #tempc AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'customer_address_base'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\nSELECT 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "6 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('6 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('6 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP - Alignment History Sync",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Audit_Update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Update]",
                            "storedProcedureParameters": {
                                "Enrichment": {
                                    "value": "PacificEast",
                                    "type": "String"
                                },
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string",
                        "defaultValue": "EM Marketing"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-19T06:43:05Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment_EMScoring')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('DROP TABLE IF EXISTS #temp_PE\nSELECT DISTINCT (ROW_NUMBER() Over (Order by (select null))) % 7 rnk,c.source_key\n,c.LastName\n,a.Line1\n,a.Line2\n,a.City\n,a.StateOrProvince\n,a.PostalCode\n,c.AccountNumber\ninto #temp_PE\nFROM alignment.customer_address_base a \nJOIN alignment.contactbase c \nON a.source_key = c.source_key\nLeft Join config.Enrichment b on a.source_key = b.source_key \nLeft Join (\nSelect distinct response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1\n)d on a.response_id = d.response_id\nWHERE c.pe_flag = ''DIA Approved''\nAND c.crm_flag =2\nAND a.md_flag in (''Enriched'', ''ADS Referenced'', ''No Enrichment'', ''Not Enriched'')\nAND b.source_key is null\nAND d.purpose_name = ''',pipeline().parameters.purpose_name,'''\nAND d.response_id = ''',pipeline().parameters.response_id,'''',\n\n'Insert Into config.Enrichment\nSelect source_key,''Sequence'',''',pipeline().parameters.purpose_name,''' from #temp_PE\n\nSelect * from #temp_PE')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('INSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Audit_Update",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "--ContactBase Audit Update\nDROP TABLE IF EXISTS #temp\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #temp\nfrom alignment.contactbase a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #temp AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'contactbase'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\n--customer_address_base Audit Update\nDROP TABLE IF EXISTS #tempc\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #tempc\nfrom alignment.customer_address_base a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #tempc AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'customer_address_base'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\nSELECT 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('INSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('INSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('INSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('INSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('INSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "6 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('6 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('6 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('INSERT INTO dbo.Enrichment_PacificEast([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP - Alignment History Sync",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Audit_Update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Update]",
                            "storedProcedureParameters": {
                                "Enrichment": {
                                    "value": "PacificEast",
                                    "type": "String"
                                },
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string",
                        "defaultValue": "EM Scoring"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-19T06:43:05Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment_EMSuppression')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('DROP TABLE IF EXISTS #temp_PE\nSELECT DISTINCT (ROW_NUMBER() Over (Order by (select null))) % 7 rnk,c.source_key\n,c.LastName\n,a.Line1\n,a.Line2\n,a.City\n,a.StateOrProvince\n,a.PostalCode\n,c.AccountNumber\ninto #temp_PE\nFROM alignment.customer_address_base a \nJOIN alignment.contactbase c \nON a.source_key = c.source_key\nLeft Join config.Enrichment b on a.source_key = b.source_key \nLeft Join (\nSelect distinct response_id, purpose_name from (\nSelect response_id, purpose_name\n,row_number() over (partition by response_id order by insert_datetime desc) rnk\nfrom audit.file_metadata\n) Drv where rnk =1\n)d on a.response_id = d.response_id\nWHERE c.pe_flag = ''DIA Approved''\nAND c.crm_flag =2\nAND a.md_flag in (''Enriched'', ''ADS Referenced'', ''No Enrichment'', ''Not Enriched'')\nAND b.source_key is null\nAND d.purpose_name = ''',pipeline().parameters.purpose_name,'''\nAND d.response_id = ''',pipeline().parameters.response_id,'''',\n\n'Insert Into config.Enrichment\nSelect source_key,''Sequence'',''',pipeline().parameters.purpose_name,''' from #temp_PE\n\nSelect * from #temp_PE')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Audit_Update",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "--ContactBase Audit Update\nDROP TABLE IF EXISTS #temp\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #temp\nfrom alignment.contactbase a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #temp AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'contactbase'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\n--customer_address_base Audit Update\nDROP TABLE IF EXISTS #tempc\nselect distinct  response_id\n                ,mapping_id\n                ,account_name\n                ,modified_fileName\n                --,max(md_received_date) as max_md_received_date\n                ,count(*) RecordCount\n                ,pe_flag\nINTO #tempc\nfrom alignment.customer_address_base a\n--where md_flag in ('Enriched','Not Enriched')\nwhere pe_flag not in ('No Enrichment')\nand not exists (Select 'X' from audit.dia_manual b\n                where a.response_id = b.response_id\n                and a.mapping_id = b.mapping_id\n                and Process_Layer = 'Enrichment'\n                and dia_status = 'DE_Completed')\ngroup by response_id, mapping_id, account_name, modified_fileName,pe_flag\n\nMERGE audit.data_Enrichment AS TARGET\nUSING #tempc AS SOURCE\nON TARGET.response_id = SOURCE.response_id\nAnd TARGET.mapping_id = SOURCE.mapping_id\nAND TARGET.flags = SOURCE.pe_flag\nWHEN MATCHED AND TARGET.Count_PE <> SOURCE.RecordCount\nTHEN UPDATE SET TARGET.Count_PE = SOURCE.RecordCount\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (response_id\n            ,mapping_id\n            ,account_name\n            ,modified_fileName\n            ,table_name\n            ,process_layer\n            ,count_PE\n            ,flags\n            ,placed_by\n            ,actions_taken\n            ,insert_datetime\n            ,insert_by)\nVALUES (    \n             SOURCE.response_id\n             ,SOURCE.mapping_id\n             ,SOURCE.account_name\n             ,SOURCE.modified_fileName\n             ,'customer_address_base'\n             ,'Enrichment'\n             ,SOURCE.RecordCount\n             ,SOURCE.pe_flag\n             ,'External Platform'\n             ,'Enrichment'\n             ,format(getdate(),'yyyy-MM-dd HH:mm:ss')\n             ,'PacificEast Pipeline');\n\nSELECT 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "6 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://dev-api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('6 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('6 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "6 Rank Update Contactbase - TelePhone2_onfailure",
                                    "description": "Update pe_flag='Not Enriched' in case of error",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP - Alignment History Sync",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Audit_Update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Update]",
                            "storedProcedureParameters": {
                                "Enrichment": {
                                    "value": "PacificEast",
                                    "type": "String"
                                },
                                "response_id": {
                                    "value": {
                                        "value": "@pipeline().parameters.response_id",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string",
                        "defaultValue": "EM Suppression"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-19T06:43:05Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-static-tables')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "popb_questionnairreBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "po_accountmodelBase",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": true,
                                    "keys": [
                                        "popb_questionnairreId"
                                    ]
                                },
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "popb_questionnairreId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "popb_questionnairreId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "statecode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "statecode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "statuscode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "statuscode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "popb_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_data",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "popb_data",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_questionnairetypes",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "popb_questionnairetypes",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_recordnumber",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "popb_recordnumber",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_category",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "popb_category",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_categoryid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "popb_categoryid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_questionnairreBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "popb_questionnairreBase"
                                }
                            }
                        ]
                    },
                    {
                        "name": "popb_accountbase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "popb_questionnairreBase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": true,
                                    "keys": [
                                        "AccountId"
                                    ]
                                },
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "AccountId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "AccountId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountCategoryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "AccountCategoryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TerritoryId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "TerritoryId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DefaultPriceLevelId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "DefaultPriceLevelId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CustomerSizeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "CustomerSizeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredContactMethodCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PreferredContactMethodCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CustomerTypeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "CustomerTypeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountRatingCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "AccountRatingCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IndustryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "IndustryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TerritoryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TerritoryCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountClassificationCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "AccountClassificationCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BusinessTypeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "BusinessTypeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OriginatingLeadId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OriginatingLeadId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PaymentTermsCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PaymentTermsCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ShippingMethodCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ShippingMethodCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PrimaryContactId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "PrimaryContactId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParticipatesInWorkflow",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "ParticipatesInWorkflow",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountNumber",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "AccountNumber",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Revenue",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Revenue",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "NumberOfEmployees",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "NumberOfEmployees",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Description",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Description",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SIC",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "SIC",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnershipCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OwnershipCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MarketCap",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "MarketCap",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SharesOutstanding",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "SharesOutstanding",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TickerSymbol",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TickerSymbol",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StockExchange",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "StockExchange",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WebSiteURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "WebSiteURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FtpSiteURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "FtpSiteURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EMailAddress1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EMailAddress2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress3",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EMailAddress3",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotPhone",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotPhone",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotFax",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotFax",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Telephone1",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotEMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotEMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Telephone2",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Fax",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Fax",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone3",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Telephone3",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotPostalMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotPostalMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotBulkEMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotBulkEMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotBulkPostalMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotBulkPostalMail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditLimit",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "CreditLimit",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditOnHold",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "CreditOnHold",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsPrivate",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsPrivate",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentAccountId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ParentAccountId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging30",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging30",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StateCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "StateCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging60",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging60",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StatusCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "StatusCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging90",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging90",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredAppointmentDayCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PreferredAppointmentDayCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredSystemUserId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "PreferredSystemUserId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredAppointmentTimeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PreferredAppointmentTimeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Merged",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "Merged",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotSendMM",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DoNotSendMM",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MasterId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "MasterId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastUsedInCampaign",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastUsedInCampaign",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredServiceId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "PreferredServiceId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredEquipmentId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "PreferredEquipmentId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ExchangeRate",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 23
                                        },
                                        "sink": {
                                            "name": "ExchangeRate",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 23
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TransactionCurrencyId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "TransactionCurrencyId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditLimit_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "CreditLimit_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging30_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging30_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Revenue_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Revenue_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging90_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging90_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MarketCap_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "MarketCap_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging60_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Aging60_Base",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YomiName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "YomiName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "StageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProcessId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ProcessId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EntityImageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "EntityImageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TraversedPath",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TraversedPath",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenDeals",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OpenDeals",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenRevenue",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "OpenRevenue",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 38
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenDeals_State",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OpenDeals_State",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenRevenue_State",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OpenRevenue_State",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenRevenue_Date",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OpenRevenue_Date",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenRevenue_Base",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "OpenRevenue_Base",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 38
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OpenDeals_Date",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OpenDeals_Date",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PrimarySatoriId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "PrimarySatoriId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedByExternalParty",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedByExternalParty",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedByExternalParty",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedByExternalParty",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PrimaryTwitterId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "PrimaryTwitterId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FollowEmail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "FollowEmail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MarketingOnly",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "MarketingOnly",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastOnHoldTime",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastOnHoldTime",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OnHoldTime",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OnHoldTime",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeSpentByMeOnEmailAndMeetings",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TimeSpentByMeOnEmailAndMeetings",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SLAInvokedId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "SLAInvokedId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SLAId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "SLAId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AppSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_AppSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_FriendlyName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_FriendlyName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_InquirySMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_InquirySMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_InstitutionControl",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "po_InstitutionControl",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_InstitutionType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "po_InstitutionType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_OrgName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_OrgName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SearchSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_SearchSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_YieldSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_YieldSMSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_accountscore",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "cdi_accountscore",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_allowtextmessages",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "cdi_allowtextmessages",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CRM2011OrgName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_CRM2011OrgName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_GenerateCSVFile",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_GenerateCSVFile",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_GeneratePDFReport",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_GeneratePDFReport",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ParchmentClient",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_ParchmentClient",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_fiscalyear",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "po_fiscalyear",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_behavioralscoringenabled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_behavioralscoringenabled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_purge",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_purge",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_instkey",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_instkey",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_enable_p2p_txt",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_enable_p2p_txt",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_enable_thankview",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_enable_thankview",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_p2p_txt_api_key",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_p2p_txt_api_key",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_p2p_txt_api_secret",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_p2p_txt_api_secret",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_p2p_txt_custom_fields",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_p2p_txt_custom_fields",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_p2p_txt_department_code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_p2p_txt_department_code",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_rnlengagedb",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_rnlengagedb",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_StateDoNotCall",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_StateDoNotCall",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_telesense",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "po_telesense",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_thankview_campaign_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_thankview_campaign_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_thankview_client_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_thankview_client_id",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_thankview_client_secret",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_thankview_client_secret",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_thankview_sftp_password",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_thankview_sftp_password",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_thankview_sftp_username",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_thankview_sftp_username",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_campusespslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_campusespslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_conduitslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_conduitslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_zeemeeslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_zeemeeslugname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "AccountBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "AccountBase"
                                }
                            }
                        ]
                    },
                    {
                        "name": "SystemUserBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "MailboxBase",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": false,
                                    "keys": [
                                        "SystemUserId"
                                    ]
                                },
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "SystemUserId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "SystemUserId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TerritoryId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "TerritoryId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OrganizationId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OrganizationId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BusinessUnitId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "BusinessUnitId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentSystemUserId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ParentSystemUserId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FirstName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "FirstName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Salutation",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Salutation",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MiddleName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "MiddleName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "LastName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PersonalEMailAddress",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "PersonalEMailAddress",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FullName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "FullName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "NickName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "NickName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Title",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Title",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "InternalEMailAddress",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "InternalEMailAddress",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "JobTitle",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "JobTitle",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MobileAlertEMail",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "MobileAlertEMail",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredEmailCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PreferredEmailCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HomePhone",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "HomePhone",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MobilePhone",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "MobilePhone",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredPhoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PreferredPhoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredAddressCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PreferredAddressCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PhotoUrl",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "PhotoUrl",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DomainName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "DomainName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PassportLo",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PassportLo",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PassportHi",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PassportHi",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DisabledReason",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "DisabledReason",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EmployeeId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EmployeeId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsDisabled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsDisabled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GovernmentId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "GovernmentId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Skills",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Skills",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DisplayInServiceViews",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DisplayInServiceViews",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CalendarId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CalendarId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ActiveDirectoryGuid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ActiveDirectoryGuid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SetupUser",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "SetupUser",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SiteId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "SiteId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WindowsLiveID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "WindowsLiveID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IncomingEmailDeliveryMethod",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "IncomingEmailDeliveryMethod",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OutgoingEmailDeliveryMethod",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OutgoingEmailDeliveryMethod",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccessMode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "AccessMode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "InviteStatusCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "InviteStatusCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsActiveDirectoryUser",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsActiveDirectoryUser",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YomiFullName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "YomiFullName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YomiLastName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "YomiLastName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YomiMiddleName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "YomiMiddleName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YomiFirstName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "YomiFirstName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ExchangeRate",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 23
                                        },
                                        "sink": {
                                            "name": "ExchangeRate",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 10,
                                            "precision": 23
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsIntegrationUser",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsIntegrationUser",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EmailRouterAccessApproval",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "EmailRouterAccessApproval",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DefaultFiltersPopulated",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "DefaultFiltersPopulated",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CALType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "CALType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "QueueId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "QueueId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TransactionCurrencyId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "TransactionCurrencyId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YammerEmailAddress",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "YammerEmailAddress",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsSyncWithDirectory",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsSyncWithDirectory",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DefaultMailbox",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "DefaultMailbox",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProcessId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ProcessId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UserLicenseType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "UserLicenseType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsEmailAddressApprovedByO365Admin",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsEmailAddressApprovedByO365Admin",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YammerUserId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "YammerUserId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EntityImageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "EntityImageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsLicensed",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsLicensed",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "StageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PositionId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "PositionId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TraversedPath",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "TraversedPath",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MobileOfflineProfileId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "MobileOfflineProfileId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DefaultOdbFolderName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "DefaultOdbFolderName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SharePointEmailAddress",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "SharePointEmailAddress",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ApplicationIdUri",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "ApplicationIdUri",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AzureActiveDirectoryObjectId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "AzureActiveDirectoryObjectId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ApplicationId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ApplicationId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LatestUpdateTime",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LatestUpdateTime",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UserPuid",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "UserPuid",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "msdyn_gdproptout",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "msdyn_gdproptout",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "SystemUserBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "SystemUserBase"
                                }
                            }
                        ]
                    },
                    {
                        "name": "MailboxBase",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": false,
                                    "keys": [
                                        "MailboxId"
                                    ]
                                },
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ProcessingStateCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ProcessingStateCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ACTDeliveryMethod",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ACTDeliveryMethod",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OutgoingEmailDeliveryMethod",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OutgoingEmailDeliveryMethod",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "NoEmailCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "NoEmailCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MailboxId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "MailboxId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EnabledForIncomingEmail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "EnabledForIncomingEmail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "NoACTCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "NoACTCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EmailAddress",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EmailAddress",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ReceivingPostponedUntil",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ReceivingPostponedUntil",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OutgoingEmailStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OutgoingEmailStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OrganizationId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OrganizationId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MailboxProcessingContext",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "MailboxProcessingContext",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EmailRouterAccessApproval",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "EmailRouterAccessApproval",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IncomingEmailDeliveryMethod",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "IncomingEmailDeliveryMethod",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostponeTestEmailConfigurationUntil",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "PostponeTestEmailConfigurationUntil",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EmailServerProfile",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "EmailServerProfile",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EnabledForACT",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "EnabledForACT",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TestMailboxAccessCompletedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "TestMailboxAccessCompletedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StateCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "StateCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProcessEmailReceivedAfter",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ProcessEmailReceivedAfter",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostponeMailboxProcessingUntil",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "PostponeMailboxProcessingUntil",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastActiveOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastActiveOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastAutoDiscoveredOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastAutoDiscoveredOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TestEmailConfigurationScheduled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "TestEmailConfigurationScheduled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsEmailAddressApprovedByO365Admin",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsEmailAddressApprovedByO365Admin",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Password",
                                            "type": "Byte[]",
                                            "physicalType": "varbinary"
                                        },
                                        "sink": {
                                            "name": "Password",
                                            "type": "Byte[]",
                                            "physicalType": "varbinary"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ExchangeSyncStateXml",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "ExchangeSyncStateXml",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProcessAndDeleteEmails",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "ProcessAndDeleteEmails",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RegardingObjectId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "RegardingObjectId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EntityImageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "EntityImageId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StatusCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "StatusCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ReceivingPostponedUntilForACT",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ReceivingPostponedUntilForACT",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UndeliverableFolder",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "UndeliverableFolder",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsForwardMailbox",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsForwardMailbox",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostponeSendingUntil",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "PostponeSendingUntil",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TestEmailConfigurationRetryCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TestEmailConfigurationRetryCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AllowEmailConnectorToUseCredentials",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "AllowEmailConnectorToUseCredentials",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HostId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "HostId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastMessageId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "LastMessageId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IncomingEmailStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "IncomingEmailStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Username",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Username",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EWSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "EWSURL",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TransientFailureCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TransientFailureCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsACTSyncOrgFlagSet",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsACTSyncOrgFlagSet",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ACTStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ACTStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EnabledForOutgoingEmail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "EnabledForOutgoingEmail",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RegardingObjectIdName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "RegardingObjectIdName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RegardingObjectTypeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "RegardingObjectTypeCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastSuccessfulSyncCompletedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastSuccessfulSyncCompletedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProcessedTimes",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ProcessedTimes",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AverageTotalDuration",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "AverageTotalDuration",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastSyncErrorOccurredOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastSyncErrorOccurredOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ItemsFailedForLastSync",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ItemsFailedForLastSync",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastSyncErrorMachineName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "LastSyncErrorMachineName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastSyncErrorCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "LastSyncErrorCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ItemsProcessedForLastSync",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ItemsProcessedForLastSync",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastSyncStartedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastSyncStartedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastSyncError",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "LastSyncError",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastSyncErrorCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "LastSyncErrorCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OrgMarkedAsPrimaryForExchangeSync",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "OrgMarkedAsPrimaryForExchangeSync",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastDuration",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "LastDuration",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ForcedUnlockCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ForcedUnlockCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProcessingLastAttemptedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ProcessingLastAttemptedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsServiceAccount",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsServiceAccount",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "VerboseLoggingEnabled",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "VerboseLoggingEnabled",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FolderHierarchy",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "FolderHierarchy",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastMailboxForcedUnlockOccurredOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastMailboxForcedUnlockOccurredOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OfficeAppsDeploymentCompleteOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OfficeAppsDeploymentCompleteOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostponeOfficeAppsDeploymentUntil",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "PostponeOfficeAppsDeploymentUntil",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OfficeAppsDeploymentScheduled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "OfficeAppsDeploymentScheduled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MailboxStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "MailboxStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OfficeAppsDeploymentError",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "OfficeAppsDeploymentError",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OfficeAppsDeploymentStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OfficeAppsDeploymentStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsExchangeContactsImportScheduled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsExchangeContactsImportScheduled",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ExchangeContactsImportCompletedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ExchangeContactsImportCompletedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ExchangeContactsImportStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ExchangeContactsImportStatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CredentialInfo",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "CredentialInfo",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DataEncryptionKey",
                                            "type": "Byte[]",
                                            "physicalType": "varbinary"
                                        },
                                        "sink": {
                                            "name": "DataEncryptionKey",
                                            "type": "Byte[]",
                                            "physicalType": "varbinary"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "MailboxBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "MailboxBase"
                                }
                            }
                        ]
                    },
                    {
                        "name": "po_accountmodelBase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SystemUserBase",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": false,
                                    "keys": [
                                        "po_accountmodelId"
                                    ]
                                },
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "po_accountmodelId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_accountmodelId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "CreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "statecode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "statecode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "statuscode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "statuscode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_academicyear",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "po_academicyear",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_account",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_account",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_availablevariables",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "po_availablevariables",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dependentvariable",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "po_dependentvariable",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_entryterm",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "po_entryterm",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_modelnumber",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_modelnumber",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ModelNumberLookupId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_ModelNumberLookupId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_modelstatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "po_modelstatus",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_modeltype",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_modeltype",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_notes",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_notes",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_statistician",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "po_statistician",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_subgroup",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_subgroup",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_accountmodelname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_accountmodelname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_dsc_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "po_accountmodelBase"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ndp_crm_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "po_accountmodelBase"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "parallel-Run"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-12T16:15:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment_EM_SearchVendorData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('\nSELECT (ROW_NUMBER() Over (Order by (select null))) % 6 rnk,\nsource_key,LastName,Line1,Line2,City,StateOrProvince,PostalCode,AccountNumber\nFrom (\nSELECT Top 2500 c.source_key,c.LastName,isnull(replace(a.Line1,''#'',''''),'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Zip,'''') as PostalCode,a.response_id ,c.AccountNumber\nFROM alignment.customer_address_base a\nJOIN alignment.contactbase c\nON  a.response_id = c.response_id\nAnd a.source_key = c.source_key\nWHERE c.pe_flag = ''DIA Approved''\nAND c.response_id = ''',pipeline().parameters.response_id,''') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData ([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData ([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_Fail",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy1",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy3",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy4",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy5",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSearchVendorData([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "2 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "511",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Pacific East Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "510",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Pacific East Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string",
                        "defaultValue": "EM Search Vendor Data"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Pacific East"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-30T23:31:17Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment_EM_Scoring')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('\nSELECT (ROW_NUMBER() Over (Order by (select null))) % 6 rnk,\nsource_key,LastName,Line1,Line2,City,StateOrProvince,PostalCode,AccountNumber\nFrom (\nSELECT Top 2500 c.source_key,c.LastName,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Zip,'''') as PostalCode,a.response_id ,c.AccountNumber\nFROM alignment.customer_address_base a\nJOIN alignment.contactbase c\nON  a.response_id = c.response_id\nAnd a.source_key = c.source_key\nLeft Join \n(Select distinct trim(response_id) response_id, purpose_name \n\tfrom (Select response_id\n\t\t\t\t,purpose_name\n\t\t        ,row_number() over (partition by response_id order by insert_datetime desc) rnk\n\t\t\t\tfrom audit.file_metadata\n\t\t ) Drv \n\twhere rnk =1\n) d \non a.response_id = d.response_id\nWHERE c.pe_flag = ''DIA Approved''\nAND c.crm_flag = 2\nAND d.purpose_name = ''',pipeline().parameters.purpose_name,''' AND d.response_id = ''',pipeline().parameters.response_id,''') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''No Enrichment'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy1",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''No Enrichment'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''No Enrichment'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy3",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''No Enrichment'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy4",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''No Enrichment'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy5",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmScoring([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''No Enrichment'')','SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "511",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Pacific East Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "510",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Pacific East Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_database_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string",
                        "defaultValue": "EM Scoring"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Pacific East"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-04T17:46:02Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment_EM_Marketing')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('\nSELECT (ROW_NUMBER() Over (Order by (select null))) % 6 rnk,\nsource_key,LastName,Line1,Line2,City,StateOrProvince,PostalCode,AccountNumber\nFrom (\nSELECT Top 2500 c.source_key,c.LastName,isnull(replace(a.Line1,''#'',''''),'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Zip,'''') as PostalCode,a.response_id ,c.AccountNumber\nFROM alignment.customer_address_base a\nJOIN alignment.contactbase c\nON  a.response_id = c.response_id\nAnd a.source_key = c.source_key\nWHERE c.pe_flag = ''DIA Approved''\nAND c.response_id = ''',pipeline().parameters.response_id,''') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy1",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy3",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy4",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy5",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmMarketing([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "2 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "511",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Pacific East Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "510",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Pacific East Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string",
                        "defaultValue": "EM Marketing"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Pacific East"
                },
                "annotations": [],
                "lastPublishTime": "2022-12-01T00:01:05Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment_EM_GO')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('\nSELECT (ROW_NUMBER() Over (Order by (select null))) % 6 rnk,\nsource_key,LastName,Line1,Line2,City,StateOrProvince,PostalCode,AccountNumber\nFrom (\nSELECT Top 2500 c.source_key,c.LastName,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Zip,'''') as PostalCode,a.response_id ,c.AccountNumber\nFROM alignment.customer_address_base a\nJOIN alignment.contactbase c\nON  a.response_id = c.response_id\nAnd a.source_key = c.source_key\nLeft Join \n(Select distinct trim(response_id) response_id, purpose_name \n\tfrom (Select response_id\n\t\t\t\t,purpose_name\n\t\t        ,row_number() over (partition by response_id order by insert_datetime desc) rnk\n\t\t\t\tfrom audit.file_metadata\n\t\t ) Drv \n\twhere rnk =1\n) d \non a.response_id = d.response_id\nWHERE c.pe_flag = ''DIA Approved''\nAND c.crm_flag = 2\nAND d.purpose_name = ''',pipeline().parameters.purpose_name,''' AND d.response_id = ''',pipeline().parameters.response_id,''') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy1",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy3",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy4",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy5",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmGo([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "511",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Pacific East Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "510",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Pacific East Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string",
                        "defaultValue": "EM GO"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Pacific East"
                },
                "annotations": [],
                "lastPublishTime": "2022-12-01T00:16:36Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-pacificeast-enrichment_EM_Suppression')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "fpa - forward phone addend",
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where pe_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast AccountKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('\nSELECT (ROW_NUMBER() Over (Order by (select null))) % 6 rnk,\nsource_key,LastName,Line1,Line2,City,StateOrProvince,PostalCode,AccountNumber\nFrom (\nSELECT Top 2500 c.source_key,c.LastName,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Zip,'''') as PostalCode,a.response_id ,c.AccountNumber\nFROM alignment.customer_address_base a\nJOIN alignment.contactbase c\nON  a.response_id = c.response_id\nAnd a.source_key = c.source_key\nLeft Join \n(Select distinct trim(response_id) response_id, purpose_name \n\tfrom (Select response_id\n\t\t\t\t,purpose_name\n\t\t        ,row_number() over (partition by response_id order by insert_datetime desc) rnk\n\t\t\t\tfrom audit.file_metadata\n\t\t ) Drv \n\twhere rnk =1\n) d \non a.response_id = d.response_id\nWHERE c.pe_flag = ''DIA Approved''\nAND c.crm_flag = 2\nAND d.purpose_name = ''',pipeline().parameters.purpose_name,''' AND d.response_id = ''',pipeline().parameters.response_id,''') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "1 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('1 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression ([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSuppression ([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('1 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "PacificEast AccountKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.PacificEastAccountKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "0 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "0 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('0 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('0 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy1",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "2 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('2 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('2 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "3 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('3 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('3 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy3",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "4 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('4 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('4 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy4",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank Forward Phone Append - FPA Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "5 Rank PacificEast REST API",
                                    "description": "Dynamic API generation for the PacificEast Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://api.idicia.com/Services/Forward/Append/1_0/Append.svc/0?accountKey=',activity('PacificEast AccountKey').output.value,'&jobCode=',item().AccountNumber,\n'&queryType=2',\n'&address=',item().Line1,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&lastName=',item().LastName\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Contactbase - TelePhone2",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(equals(int(activity('5 Rank PacificEast REST API').output.contactsFound),0),\nconcat('\t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,[response_id] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \nconcat('\n        INSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t\t[Telephone2]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[pe_flag]  ,\n\t\t\t\t[pe_received_date])\n\t\t\tVALUES (''',item().source_key,''',','\n\t\t\t''',activity('5 Rank PacificEast REST API').output.contacts[0].phoneInformation.phoneNumber,''',','\n\t\t\t''',pipeline().parameters.response_id,''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "1 Rank Update Contactbase - TelePhone2_copy1_copy5",
                                    "description": "Telephone2(HOME_PONE) update in contactbase",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank PacificEast REST API",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('\n       \t\tINSERT INTO dbo.Enrichment_PacificEast_EmSuppression([source_key] ,\n\t\t\t[pe_received_date]  ,\n\t\t\t[pe_flag],\n\t\t\t[response_id]\n\t\t\t)\n\t\tVALUES (''',item().source_key,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'',''',pipeline().parameters.response_id,''')',' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contactbase",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "2 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "1 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "0 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "3 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "4 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "5 Rank Forward Phone Append - FPA Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "511",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Pacific East Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "510",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Pacific East Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": {
                                    "value": "@pipeline().parameters.purpose_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string",
                        "defaultValue": "EM Suppression"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "PE_Enriched_addressbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_addressbase": {
                        "type": "String"
                    },
                    "PE_Enriched_contactbase": {
                        "type": "String"
                    },
                    "PE_NotEnriched_contactbase": {
                        "type": "String"
                    },
                    "max_pe_address_audit_date": {
                        "type": "String"
                    },
                    "max_pe_contact_audit_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Pacific East"
                },
                "annotations": [],
                "lastPublishTime": "2022-12-01T00:21:04Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-powerbi-load-static-table')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select  * from dbo.studentlist_contact_completed with (nolock)",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "writeBehavior": "Insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_powerbi",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_powerbi_crm_synapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": {
                                        "value": "@pipeline().parameters.tablename",
                                        "type": "Expression"
                                    },
                                    "schemaname": {
                                        "value": "@pipeline().parameters.schemaname",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "tablename": {
                        "type": "string"
                    },
                    "schemaname": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-09T05:10:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-fplus-historical-load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select top 1  * from dbo.student_finalver with (NOLOCK)",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "writeBehavior": "Insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_fqt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "servername": {
                                        "value": "@pipeline().parameters.servername",
                                        "type": "Expression"
                                    },
                                    "dbname": {
                                        "value": "@pipeline().parameters.dbname",
                                        "type": "Expression"
                                    },
                                    "username": {
                                        "value": "@pipeline().parameters.username",
                                        "type": "Expression"
                                    },
                                    "vaultUrl": {
                                        "value": "@pipeline().parameters.vaultUrl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.53"
                    },
                    "dbname": {
                        "type": "string",
                        "defaultValue": "FQT_Prod"
                    },
                    "username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vaultUrl": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2022-09-02T11:19:24Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-copy-datain--account-from-uncfoldebase')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": " select  distinct po_name,po_accountid,po_accountname,'NDP_Uploads' as subfolder,\n 'active' as [status]\n  from dbo.po_sftp_unc_folderBase  ",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "truncate table lkp.account",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "po_accountname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "accountname",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "folder",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "subfolder",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "subfolder",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_accountid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "accountid",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "status",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "status",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "po_sftp_unc_folderBase",
                                    "crm_servername": "10.26.0.22",
                                    "crm_dbname": "RNLMAPQA_MSCRM",
                                    "crm_username": "svc_az_ndp",
                                    "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "account",
                                    "schemaname": "lkp",
                                    "az_server_name": "rnlndpprodazsql01.database.windows.net",
                                    "az_sql_db": "NDPPRODSQLDB"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-02T19:45:39Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-inside-for-each-entity-crmsynapse-powerbi-load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From CRM to ADLS",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@concat(\r\n\tif(\r\n\t\tequals(toUpper(pipeline().parameters.SrcObjectType),'QUERY'),\r\n\t\tif(\r\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\r\n\t\t\t\tpipeline().parameters.SrcObjectName,\r\n\t\t\t\tif(\r\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\r\n\t\t\t\t\tpipeline().parameters.SrcObjectName,\r\n\t\t\t\t\tconcat(pipeline().parameters.SrcObjectName, ' AND ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\r\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\r\n\t\t\t\t\t,'''',')'\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t),\r\n\t\tconcat('SELECT * FROM ',pipeline().parameters.SrcObjectName,\r\n\t\t\tif(\r\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\r\n\t\t\t\t'',\r\n\t\t\t\tif(\r\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\r\n\t\t\t\t\t'',\r\n\t\t\t\t\tconcat(' WITH(NOLOCK) WHERE ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\r\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\r\n\t\t\t\t\t,'''',')'\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "06:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "writeBatchSize": 1000000,
                                "preCopyScript": {
                                    "value": "@{concat('truncate table ',pipeline().parameters.stg_table_name)}",
                                    "type": "Expression"
                                },
                                "allowCopyCommand": true,
                                "copyCommandSettings": {},
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmtoads/temp/Synapse_data",
                                "enableCompression": true
                            },
                            "parallelCopies": 100
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_crm_Dynamic10",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": {
                                        "value": "@pipeline().parameters.Schema",
                                        "type": "Expression"
                                    },
                                    "crm_table": {
                                        "value": "@pipeline().parameters.SourceTableName",
                                        "type": "Expression"
                                    },
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vaulturl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": {
                                        "value": "@pipeline().parameters.stg_table_name",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "UPDATE SUCCESS",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ExecuteSP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get CDC date value",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[sp_update_load_status_crmtoads]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "S",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@formatDateTime(string(activity('Get CDC date value').output.firstRow.maxDeltaDate))",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_FAILURE",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ExecuteSP",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[sp_update_load_status_crmtoads]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "F",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get CDC date value",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CDC_Source_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@variables('CDC_Source_Query')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": {
                                        "value": "@pipeline().parameters.stg_table_name",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecuteSP",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CDC_Source_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('DECLARE @row_count int, @reject_row  int exec sp_stag_to_ads ''',pipeline().parameters.stg_table_name,''',''',pipeline().parameters.DestinationTableName,''',''',pipeline().parameters.PrimaryKey,''',''',pipeline().parameters.CDC_Key,''', @row_count OUTPUT, @reject_row OUTPUT SELECT @row_count as row_count,@reject_row as reject_row')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": ".",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Data-profliing-for-crm-to-crmsynapse",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE SUCCESS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-insert-crm-ads-crm-data-profiling-log",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "log_type": "CRM_to_ADS",
                                "data_flow": "CRM to ADS",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_run_id",
                                    "type": "Expression"
                                },
                                "source_table_name": {
                                    "value": "@pipeline().parameters.SourceTableName",
                                    "type": "Expression"
                                },
                                "target_table_name": {
                                    "value": "@concat(pipeline().parameters.Schema,'.',pipeline().parameters.DestinationTableName)",
                                    "type": "Expression"
                                },
                                "source_row_count": {
                                    "value": "@string(activity('From CRM to ADLS').output.rowsRead)",
                                    "type": "Expression"
                                },
                                "target_row_count": {
                                    "value": "@string(activity('ExecuteSP').output.firstRow.row_count)",
                                    "type": "Expression"
                                },
                                "rejected_rows": {
                                    "value": "@string(activity('ExecuteSP').output.firstRow.reject_row)",
                                    "type": "Expression"
                                },
                                "database_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "load_start_date": {
                                    "value": "@pipeline().parameters.Load_Start_Date",
                                    "type": "Expression"
                                },
                                "load_end_date": {
                                    "value": "@string(utcnow())",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "CDC_Source_Query",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "From CRM to ADLS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "CDC_Source_Query",
                            "value": {
                                "value": "@if(equals(pipeline().parameters.SourceDeltaColumn,''),concat('select ','''1900-01-01''',' as maxDeltaDate'),concat('select isnull(max(',pipeline().parameters.SourceDeltaColumn,'),','''19000101''',') as maxDeltaDate from dbo.',pipeline().parameters.stg_table_name))",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "DestinationTableName": {
                        "type": "string"
                    },
                    "stg_table_name": {
                        "type": "string"
                    },
                    "FilePath": {
                        "type": "string"
                    },
                    "PrimaryKey": {
                        "type": "string"
                    },
                    "CDC_Key": {
                        "type": "string"
                    },
                    "Schema": {
                        "type": "string"
                    },
                    "SourceTableName": {
                        "type": "string"
                    },
                    "SrcObjectType": {
                        "type": "string"
                    },
                    "LoadType": {
                        "type": "string"
                    },
                    "SourceDeltaColumn": {
                        "type": "string"
                    },
                    "LastSuccessDate": {
                        "type": "string"
                    },
                    "SrcObjectName": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "Load_Start_Date": {
                        "type": "string"
                    },
                    "parent_run_id": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "variables": {
                    "Delta_Load_Date": {
                        "type": "String"
                    },
                    "PrimaryKey": {
                        "type": "String"
                    },
                    "CDC_Source_Query": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "crm-To-Crmsynapse-Powerbi"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-06T11:27:28Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-melissa-addressenrichment-EMScoring_Parallel_1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Melissa AccessKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT (ROW_NUMBER() Over (Order by (select null))) % 7 rnk,\nsource_key,Line1,Line2,City,StateOrProvince,Country,PostalCode,Firstname,Lastname,Telephone2\nFrom (\nSelect top 2500 a.source_key,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Country,'''') as Country,Replace(isnull(a.ZIP,''''),'''''''','''') as PostalCode,a.response_id,cb.Firstname,cb.Lastname,cb.telephone2\nFROM alignment.customer_address_base (nolock) a\nJoin alignment.contactbase (nolock) cb on cb.response_id=a.response_id and cb.source_key=a.source_key\nWHERE md_flag=''DIA Approved''\nAND a.response_id=''',pipeline().parameters.response_id,'''',') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "1 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {},
                                        "httpRequestTimeout": ""
                                    }
                                },
                                {
                                    "name": "1 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('1 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('1 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('1 Rank Melissa REST API').output.Records[0].PostalCode,activity('1 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Melissa AccessKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.MelissaAccessKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "6 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('6 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('6 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('6 Rank Melissa REST API').output.Records[0].PostalCode,activity('6 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "5 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('5 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('5 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('5 Rank Melissa REST API').output.Records[0].PostalCode,activity('5 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "3 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('3 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('3 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('3 Rank Melissa REST API').output.Records[0].PostalCode,activity('3 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "2 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('2 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('2 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('2 Rank Melissa REST API').output.Records[0].PostalCode,activity('2 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "4 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('4 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('4 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('4 Rank Melissa REST API').output.Records[0].PostalCode,activity('4 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "0 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring_Parallel([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',activity('0 Rank Melissa REST API').output.Records[0].State,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('0 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('0 Rank Melissa REST API').output.Records[0].PostalCode,activity('0 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "5 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "1 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "505",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Scoring"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "504",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Scoring"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "valueToBeReplaced": {
                        "type": "String",
                        "defaultValue": "'"
                    },
                    "replaceWith": {
                        "type": "String",
                        "defaultValue": "''"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Melissa"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-17T22:49:41Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-melissa-addressenrichment-EMScoring_Parallel_2')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Melissa AccessKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT (ROW_NUMBER() Over (Order by (select null))) % 5 rnk,\nsource_key,Line1,Line2,City,StateOrProvince,Country,PostalCode,Firstname,Lastname,Telephone2\nFrom (\nSelect top 2500 a.source_key,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Country,'''') as Country,Replace(isnull(a.ZIP,''''),'''''''','''') as PostalCode,a.response_id,cb.Firstname,cb.Lastname,cb.telephone2\nFROM alignment.customer_address_base (nolock) a\nJoin alignment.contactbase (nolock) cb on cb.response_id=a.response_id and cb.source_key=a.source_key\nWHERE md_flag=''DIA Approved''\nAND a.response_id=''',pipeline().parameters.response_id,'''',') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "1 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "1 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "1 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('1 Rank Melissa REST API').output.Records[0].PostalCode,activity('1 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('1 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "1 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Melissa AccessKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.MelissaAccessKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "3 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "3 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('3 Rank Melissa REST API').output.Records[0].PostalCode,activity('3 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('3 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "3 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "2 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "2 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('2 Rank Melissa REST API').output.Records[0].PostalCode,activity('2 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('2 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "2 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "4 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "4 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('4 Rank Melissa REST API').output.Records[0].PostalCode,activity('4 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('4 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "4 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "0 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank If Condition",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,' '))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "0 Rank SP Insert Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].AddressKey",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].City",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].CountyName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].CountyFIPS",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].Latitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].AddressLine1",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].AddressLine2",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].Longitude",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": {
                                                                "value": "@concat(activity('0 Rank Melissa REST API').output.Records[0].PostalCode,activity('0 Rank Melissa REST API').output.Records[0].Plus4)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": {
                                                                "value": "@activity('0 Rank Melissa REST API').output.Records[0].State",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "0 Rank SP Insert Not Enriched",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_DE_Insert_Intermediate_EmScoring_Parallel]",
                                                    "storedProcedureParameters": {
                                                        "Address_Key": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "City": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "County": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "county_fips": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "DE_Type": {
                                                            "value": "Not Enriched",
                                                            "type": "String"
                                                        },
                                                        "Latitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line1": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Line2": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "Longitude": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "PostalCode": {
                                                            "value": "X",
                                                            "type": "String"
                                                        },
                                                        "response_id": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.response_id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "source_key": {
                                                            "value": {
                                                                "value": "@item().Source_Key",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StateorProvince": {
                                                            "value": "X",
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.az_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.az_database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "1 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "505",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Scoring"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "504",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Scoring"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "valueToBeReplaced": {
                        "type": "String",
                        "defaultValue": "'"
                    },
                    "replaceWith": {
                        "type": "String",
                        "defaultValue": "''"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Melissa"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-17T22:49:41Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-melissa-addressenrichment-EMScoring')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data for Enrichment",
                        "description": "Get all the records from the Alignment tables where md_flag='DIA Approved'",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Melissa AccessKey",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT (ROW_NUMBER() Over (Order by (select null))) % 7 rnk,\nsource_key,Line1,Line2,City,StateOrProvince,Country,PostalCode,Firstname,Lastname,Telephone2\nFrom (\nSelect top 2500 a.source_key,isnull(a.Line1,'''') as Line1,isnull(a.Line2,'''') as Line2,isnull(a.City,'''') as City\n,isnull(a.StateOrProvince,'''') as StateOrProvince,isnull(a.Country,'''') as Country,Replace(isnull(a.ZIP,''''),'''''''','''') as PostalCode,a.response_id,cb.Firstname,cb.Lastname,cb.telephone2\nFROM alignment.customer_address_base (nolock) a\nJoin alignment.contactbase (nolock) cb on cb.response_id=a.response_id and cb.source_key=a.source_key\nWHERE md_flag=''DIA Approved''\nAND a.response_id=''',pipeline().parameters.response_id,'''',') DRV')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "1 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "1 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('1 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "1 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:01:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {},
                                        "httpRequestTimeout": ""
                                    }
                                },
                                {
                                    "name": "1 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "1 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('1 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',replace(activity('1 Rank Melissa REST API').output.Records[0].State,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('1 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('1 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('1 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('1 Rank Melissa REST API').output.Records[0].PostalCode,activity('1 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Melissa AccessKey",
                        "description": "Fetching AccountKey from AzureKeyVault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.MelissaAccessKeyKeyVaultURL",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "1 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,1 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "2 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,2 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,6 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "5 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,5 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "4 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,4 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "3 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,3 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "6 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "6 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('6 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "6 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:01:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "6 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "6 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('6 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',replace(activity('6 Rank Melissa REST API').output.Records[0].State,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('6 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('6 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('6 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('6 Rank Melissa REST API').output.Records[0].PostalCode,activity('6 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "5 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "5 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('5 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "5 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:01:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "5 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "5 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('5 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',replace(activity('5 Rank Melissa REST API').output.Records[0].State,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('5 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('5 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('5 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('5 Rank Melissa REST API').output.Records[0].PostalCode,activity('5 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "3 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "3 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('3 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "3 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:01:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "3 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "3 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('3 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',replace(activity('3 Rank Melissa REST API').output.Records[0].State,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('3 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('3 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('3 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('3 Rank Melissa REST API').output.Records[0].PostalCode,activity('3 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "2 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "2 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('2 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "2 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:01:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "2 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "2 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('2 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',replace(activity('2 Rank Melissa REST API').output.Records[0].State,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('2 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('2 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('2 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('2 Rank Melissa REST API').output.Records[0].PostalCode,activity('2 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "4 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "4 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('4 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "4 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:01:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "4 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "4 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('4 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',replace(activity('4 Rank Melissa REST API').output.Records[0].State,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('4 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('4 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('4 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('4 Rank Melissa REST API').output.Records[0].PostalCode,activity('4 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank Address Enrichment",
                        "description": "Send each record for Enrichment",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "0 Rank",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('0 Rank').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "0 Rank Melissa REST API",
                                    "description": "Dynamic API generation for the Melissa Input",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:01:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@{concat('\nhttps://personator.melissadata.net/v3/WEB/ContactVerify/doContactVerify?t=&format=JSON&id=',activity('Melissa AccessKey').output.value,'&act=Check,Verify&cols=Plus4,CountyFIPS,Latitude,Longitude,CountyName&a1=',item().Line1,\n'&a2=',item().Line2,\n'&city=',item().City,\n'&state=',item().StateOrProvince,\n'&postal=',item().PostalCode,\n'&ctry=',item().Country,\n'&last=',item().Lastname,\n'&first=',item().Firstname,\n'&phone=',item().Telephone2\n)}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "RNLNDPPRODSHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "GET",
                                        "headers": {}
                                    }
                                },
                                {
                                    "name": "0 Rank Update Address",
                                    "description": "address details update in customer_address_base",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "0 Rank Melissa REST API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:05:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@{if(or(equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,'00000000000'),equals(activity('0 Rank Melissa REST API').output.Records[0].AddressKey,' ')),\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,[response_id] ,\n\t\t\t[md_received_date]  ,\n\t\t\t[md_flag])\n\t\tVALUES (''',item().source_key,''',''',pipeline().parameters.response_id,''',''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''',''Not Enriched'')',''),\n        \n\nconcat('\t\tINSERT INTO dbo.Enrichment_Melissa_EmScoring([source_key] ,\n\t\t\t\t[StateorProvince]  ,\n\t\t\t\t[Longitude]  ,\n\t\t\t\t[Latitude]  ,\n\t\t\t\t[county_fips]  ,\n\t\t\t\t[County],\n\t\t\t\t[City]  ,\n\t\t\t\t[Line2]  ,\n\t\t\t\t[Line1]  ,\n\t\t\t\t[Address_Key]  ,\n\t\t\t\t[response_id]  ,\n\t\t\t\t[PostalCode]  ,\n\t\t\t\t[md_flag]  ,\n\t\t\t\t[md_received_date])\n\t\t\tVALUES (''',item().source_key,''',','''',replace(activity('0 Rank Melissa REST API').output.Records[0].State,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Longitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].Latitude,''',','\n            ''',activity('0 Rank Melissa REST API').output.Records[0].CountyFIPS,''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].CountyName,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].City,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine2,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n            ''',replace(activity('0 Rank Melissa REST API').output.Records[0].AddressLine1,variables('valueToBeReplaced'),variables('replaceWith')),''',','\n           ''',activity('0 Rank Melissa REST API').output.Records[0].AddressKey,''',','\n           ''',pipeline().parameters.response_id,''',','\n          ''',concat(activity('0 Rank Melissa REST API').output.Records[0].PostalCode,activity('0 Rank Melissa REST API').output.Records[0].Plus4),''',','\n            ''Enriched'',','\n            ''',formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),''')')\n\t\t\t\t\t      \n)}\nSELECT 1",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:04:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "customer_address_base",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "0 Rank",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Data for Enrichment').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().rnk,0 )",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "file_audit Completed",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "5 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "6 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "4 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "3 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "0 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "2 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "1 Rank Address Enrichment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "505",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Completed",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Scoring"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "file_audit Started",
                        "description": "Doing file Audit ",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Data for Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-file-processing-log",
                            "baseParameters": {
                                "audit_id": "504",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "file_processing_stage": "Melissa Data Enrichment",
                                "status": "Started",
                                "row_count": {
                                    "value": "@string(activity('Data for Enrichment').output.count)",
                                    "type": "Expression"
                                },
                                "rejected_row": "0",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "response_id": {
                                    "value": "@pipeline().parameters.response_id",
                                    "type": "Expression"
                                },
                                "mapping_id": "NA",
                                "account_name": "NA",
                                "purpose_file_name": "EM Scoring"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "variables": {
                    "valueToBeReplaced": {
                        "type": "String",
                        "defaultValue": "'"
                    },
                    "replaceWith": {
                        "type": "String",
                        "defaultValue": "''"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/Melissa"
                },
                "annotations": [],
                "lastPublishTime": "2022-12-06T00:16:46Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-archive-staging-alignemnt-data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "archive_staging_em_scoring",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_scoring] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "em_scoring",
                                    "schemaname": "staging",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_scoring",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_staging_em_search_vendor_data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_search_vendor_data] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "staging",
                                    "schemaname": "em_search_vendor_data",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_search_vendor_data",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_staging_em_suppression",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_suppression] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "archive",
                                    "schemaname": "em_suppression",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_suppression",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_staging_em_historical_data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_historical_data] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "staging",
                                    "schemaname": "em_historical_data",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_historical_data",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_staging_em_aog",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_aog] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "staging",
                                    "schemaname": "em_aog",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_aog",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_staging_em_marketing",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_marketing] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "staging",
                                    "schemaname": "em_marketing",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_marketing",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_staging_em_historical_data_all",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_staging_em_marketing",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_staging_em_aog",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_staging_em_historical_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_staging_em_suppression",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_staging_em_search_vendor_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_staging_em_scoring",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_historical_data_all] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "em_historical_data_all",
                                    "schemaname": "staging",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_historical_data_all",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_contactbase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_staging_em_historical_data_all",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [alignment].[contactbase] h with(nolock)\ninner join dbo.stg_response_id t\non trim(h.response_id)=t.response_id",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "id",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "unique_id",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "unique_id",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DefaultPriceLevelId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "DefaultPriceLevelId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CustomerSizeCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "CustomerSizeCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CustomerTypeCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "CustomerTypeCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredContactMethodCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "PreferredContactMethodCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LeadSourceCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "LeadSourceCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OriginatingLeadId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "OriginatingLeadId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "OwningBusinessUnit",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PaymentTermsCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "PaymentTermsCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ShippingMethodCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "ShippingMethodCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParticipatesInWorkflow",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "ParticipatesInWorkflow",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsBackofficeCustomer",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "IsBackofficeCustomer",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Salutation",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Salutation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "JobTitle",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "JobTitle",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FirstName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "FirstName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Department",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Department",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "NickName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "NickName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MiddleName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MiddleName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "LastName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Suffix",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Suffix",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YomiFirstName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "YomiFirstName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FullName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "FullName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YomiMiddleName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "YomiMiddleName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YomiLastName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "YomiLastName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Anniversary",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Anniversary",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BirthDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "BirthDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GovernmentId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "GovernmentId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YomiFullName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "YomiFullName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Description",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Description",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EmployeeId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EmployeeId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GenderCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "GenderCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AnnualIncome",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "AnnualIncome",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HasChildrenCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "HasChildrenCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EducationCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "EducationCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WebSiteUrl",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WebSiteUrl",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FamilyStatusCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "FamilyStatusCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FtpSiteUrl",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "FtpSiteUrl",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EMailAddress1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SpousesName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "SpousesName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AssistantName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AssistantName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EMailAddress2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AssistantPhone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AssistantPhone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress3",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EMailAddress3",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotPhone",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "DoNotPhone",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ManagerName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ManagerName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ManagerPhone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ManagerPhone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotFax",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "DoNotFax",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotEMail",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "DoNotEMail",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotPostalMail",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "DoNotPostalMail",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotBulkEMail",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "DoNotBulkEMail",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotBulkPostalMail",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "DoNotBulkPostalMail",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountRoleCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "AccountRoleCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TerritoryCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "TerritoryCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsPrivate",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "IsPrivate",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditLimit",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "CreditLimit",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOn",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "CreatedOn",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditOnHold",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "CreditOnHold",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedBy",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "CreatedBy",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "ModifiedOn",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedBy",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ModifiedBy",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "NumberOfChildren",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "NumberOfChildren",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ChildrensNames",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ChildrensNames",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "VersionNumber"
                                        },
                                        "sink": {
                                            "name": "VersionNumber",
                                            "type": "Byte[]"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MobilePhone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MobilePhone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Pager",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Pager",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Telephone1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Telephone2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone3",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Telephone3",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Fax",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Fax",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging30",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Aging30",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StateCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "StateCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging60",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Aging60",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StatusCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "StatusCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging90",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Aging90",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredSystemUserId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "PreferredSystemUserId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredServiceId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "PreferredServiceId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MasterId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "MasterId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredAppointmentDayCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "PreferredAppointmentDayCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredAppointmentTimeCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "PreferredAppointmentTimeCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DoNotSendMM",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "DoNotSendMM",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Merged",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "Merged",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ExternalUserIdentifier",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ExternalUserIdentifier",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "SubscriptionId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PreferredEquipmentId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "PreferredEquipmentId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastUsedInCampaign",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "LastUsedInCampaign",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TransactionCurrencyId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "TransactionCurrencyId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "OverriddenCreatedOn",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ExchangeRate",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "ExchangeRate",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "ImportSequenceNumber",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "TimeZoneRuleVersionNumber",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "UTCConversionTimeZoneCode",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AnnualIncome_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "AnnualIncome_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditLimit_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "CreditLimit_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging60_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Aging60_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging90_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Aging90_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Aging30_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Aging30_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "OwnerId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "CreatedOnBehalfBy",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsAutoCreate",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "IsAutoCreate",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "ModifiedOnBehalfBy",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentCustomerId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "ParentCustomerId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentCustomerIdType",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "ParentCustomerIdType",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentCustomerIdName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ParentCustomerIdName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerIdType",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "OwnerIdType",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentCustomerIdYomiName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ParentCustomerIdYomiName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProcessId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "ProcessId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EntityImageId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "EntityImageId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StageId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "StageId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Business2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Business2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Company",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Company",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TraversedPath",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "TraversedPath",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Home2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Home2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Callback",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Callback",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedByExternalParty",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "CreatedByExternalParty",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModifiedByExternalParty",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "ModifiedByExternalParty",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastOnHoldTime",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "LastOnHoldTime",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SLAId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "SLAId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeSpentByMeOnEmailAndMeetings",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "TimeSpentByMeOnEmailAndMeetings",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OnHoldTime",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "OnHoldTime",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FollowEmail",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "FollowEmail",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SLAInvokedId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "SLAInvokedId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MarketingOnly",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "MarketingOnly",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_b2cuserid",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "popb_b2cuserid",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AdmitModelScore",
                                            "type": "Double"
                                        },
                                        "sink": {
                                            "name": "po_AdmitModelScore",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AdmitModelScoreBin",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_AdmitModelScoreBin",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AdmitModelScoreDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "po_AdmitModelScoreDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AFPAcademicSegment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_AFPAcademicSegment",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AFPCategory",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_AFPCategory",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AFPZone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_AFPZone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AppGenID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_AppGenID",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AppInProgress",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_AppInProgress",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ApplicantModelScore",
                                            "type": "Double"
                                        },
                                        "sink": {
                                            "name": "po_ApplicantModelScore",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ApplicantModelScoreBin",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_ApplicantModelScoreBin",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ApplicantModelScoreDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "po_ApplicantModelScoreDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ApplicationPhase",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_ApplicationPhase",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AreYouHispanicorLatino",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_AreYouHispanicorLatino",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AverageHouseholdIncome",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_AverageHouseholdIncome",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_averagehouseholdincome_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_averagehouseholdincome_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CitizenshipStatus",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_CitizenshipStatus",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ClassRank",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_ClassRank",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ClientSourceCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_ClientSourceCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CollegeId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "po_CollegeId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ContactNumber",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_ContactNumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ContactType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_ContactType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ConvictedofFelony",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_ConvictedofFelony",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CounselorEmail",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_CounselorEmail",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CounselorFirstName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_CounselorFirstName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CounselorLastName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_CounselorLastName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CounselorPhone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_CounselorPhone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CounselorTitle",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_CounselorTitle",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Deceased",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_Deceased",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_DistanceFromCampus",
                                            "type": "Double"
                                        },
                                        "sink": {
                                            "name": "po_DistanceFromCampus",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_EPSCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_EPSCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_FirstGeneration",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_FirstGeneration",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_FirstGenerationCollegeStudent",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_FirstGenerationCollegeStudent",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_GPA",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_GPA",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Grade",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_Grade",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_GuidanceCounselorEmail",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_GuidanceCounselorEmail",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_HighSchoolId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "po_HighSchoolId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_IncomeLevel",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_IncomeLevel",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_InquiryModelScore",
                                            "type": "Double"
                                        },
                                        "sink": {
                                            "name": "po_InquiryModelScore",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_InquiryModelScoreBin",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_InquiryModelScoreBin",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_InquiryModelScoreDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "po_InquiryModelScoreDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_internalid",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_internalid",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_LatestResponse",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "po_LatestResponse",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Legacy",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_Legacy",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_MaidenName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_MaidenName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Market",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_Market",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Password",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_Password",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_PersonicxLifeStageGroup",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_PersonicxLifeStageGroup",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_PersonicxSegmentationCluster",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_PersonicxSegmentationCluster",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_PrimaryLanguageSpokenAtHome",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_PrimaryLanguageSpokenAtHome",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_PriorLastName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_PriorLastName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_PurchaseListGroup",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_PurchaseListGroup",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Rank",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_Rank",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Rating",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_Rating",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ReligiousPreference",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_ReligiousPreference",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_RNLID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_RNLID",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Scholarship",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_Scholarship",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SearchMarketDescription",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_SearchMarketDescription",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SearchMarketTier",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_SearchMarketTier",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SearchProbabilityRank",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_SearchProbabilityRank",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SearchProbabilityScore",
                                            "type": "Double"
                                        },
                                        "sink": {
                                            "name": "po_SearchProbabilityScore",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Segment",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_Segment",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SmartScore",
                                            "type": "Double"
                                        },
                                        "sink": {
                                            "name": "po_SmartScore",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SMSallow",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_SMSallow",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Sourcecode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_Sourcecode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_StudentApplicationStatus",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_StudentApplicationStatus",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Username",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_Username",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_UsernamePasswordHash",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_UsernamePasswordHash",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Vendor",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_Vendor",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Veteran",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_Veteran",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_VisaType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_VisaType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_age",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "cdi_age",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_allowtextmessages",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "cdi_allowtextmessages",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_facebook",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_facebook",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_grade",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_grade",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_identifiedon",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "cdi_identifiedon",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_image",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_image",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_ip",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_ip",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_latitude",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_latitude",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_linkedin",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_linkedin",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_Longitude",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_Longitude",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_partitionkey",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_partitionkey",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_rowkey",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_rowkey",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_score",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "cdi_score",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_social",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_social",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_totalscore",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "cdi_totalscore",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_twitter",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_twitter",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "cdi_visitorkey",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "cdi_visitorkey",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CDEmailClick",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_CDEmailClick",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CDFormSubmitted",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_CDFormSubmitted",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CDSearchResponseMethod",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_CDSearchResponseMethod",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_PhoneAppendDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "po_PhoneAppendDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_StateofResidency",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_StateofResidency",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CDInterested",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_CDInterested",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_LatestCampaignAutomation",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "po_LatestCampaignAutomation",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_relationshiprole",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_relationshiprole",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_segmenttext",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_segmenttext",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CDOnNonResponderList",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_CDOnNonResponderList",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_parentattendedcollege",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_parentattendedcollege",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AutoClickResponder",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_AutoClickResponder",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SurveyAcademicInterest",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_SurveyAcademicInterest",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SurveyCampusVisitInterest",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_SurveyCampusVisitInterest",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SurveyInterestLevel",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_SurveyInterestLevel",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SurveyMostImportantFactor",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_SurveyMostImportantFactor",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_SurveyPayingforcollege",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_SurveyPayingforcollege",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_segmentId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_segmentId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_institutionId",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "po_institutionId",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_internaluser",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_internaluser",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_academic_journeyresult",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_academic_journeyresult",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_address1_jointname",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_address1_jointname",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_address1_jointsalutation",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_address1_jointsalutation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_address1_salutation",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_address1_salutation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_homecoming_survey1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_homecoming_survey1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_homecoming_survey2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_homecoming_survey2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_lastgiftamount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_lastgiftamount",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_lastgiftamount_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_lastgiftamount_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_lastgiftdate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "po_lastgiftdate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_lastgiftdesignation",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_lastgiftdesignation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_lifetime_giftsnumber",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_lifetime_giftsnumber",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_lifetime_giving_amount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_lifetime_giving_amount",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_lifetime_giving_amount_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_lifetime_giving_amount_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_majordonor",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_majordonor",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_newmarket_journeyresult",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_newmarket_journeyresult",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_preferredgradyear",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_preferredgradyear",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_preferredschool",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_preferredschool",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_rnlemployee",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_rnlemployee",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_rnlemployee_gradyear",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_rnlemployee_gradyear",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_rnlopportunityid",
                                            "type": "Guid"
                                        },
                                        "sink": {
                                            "name": "po_rnlopportunityid",
                                            "type": "Guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_xer_resulttype",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_xer_resulttype",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_xer1_type",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_xer1_type",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_xer2_type",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_xer2_type",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_xers_speak1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_xers_speak1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_xers_speak2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_xers_speak2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_xers_speak3",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_xers_speak3",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_journeyfulfillment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_journeyfulfillment",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_journeyoutreach",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_journeyoutreach",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_journeyreminder",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_journeyreminder",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_journeyresponse1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_journeyresponse1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_journeyresponse2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_journeyresponse2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "msdyn_gdproptout",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "msdyn_gdproptout",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AmountDue",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_AmountDue",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_amountdue_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_amountdue_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_AmountPaid",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_AmountPaid",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_amountpaid_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_amountpaid_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_BalanceDue",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_BalanceDue",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_balancedue_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_balancedue_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_business_unit",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_business_unit",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_cc_id_number",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_cc_id_number",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ClientWebSiteUrl",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_ClientWebSiteUrl",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationamount1",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_designationamount1",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationamount1_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_designationamount1_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationamount2",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_designationamount2",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationamount2_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_designationamount2_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationamount3",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_designationamount3",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationamount3_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_designationamount3_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationcode1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_designationcode1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationcode2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_designationcode2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationcode3",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_designationcode3",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_01",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_01",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_02",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_02",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_03",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_03",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_04",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_04",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_05",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_05",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_06",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_06",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_07",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_07",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_08",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_08",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_09",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_09",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_10",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_10",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_11",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_11",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_12",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_12",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_13",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_13",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_14",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_14",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_15",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_15",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_16",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_16",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_17",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_17",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_18",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_18",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_19",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_19",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_20",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_20",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_21",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_21",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_22",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_22",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_23",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_23",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_24",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_24",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_25",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_25",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_26",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_26",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_27",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_27",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_28",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_28",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_29",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_29",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_dia_defined_text_30",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_dia_defined_text_30",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_donotcontact",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_donotcontact",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_firstpaymentdate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "po_firstpaymentdate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_fiscalyear",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_fiscalyear",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_giftsforfiscalyear",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_giftsforfiscalyear",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_giftsforfiscalyear_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_giftsforfiscalyear_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_matching_company",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_matching_company",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_matching_gift_URL",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_matching_gift_URL",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_occupation",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_occupation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_PledgeAmount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_PledgeAmount",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_pledgeamount_Base",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "po_pledgeamount_Base",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_PledgeDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "po_PledgeDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_preferreddegree",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_preferreddegree",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Prefix",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_Prefix",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_rnlemployee_major",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_rnlemployee_major",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_rnlemployeefirst",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_rnlemployeefirst",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_rnlemployeelast",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_rnlemployeelast",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_scanline",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_scanline",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_source",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_source",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_bestask1",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_bestask1",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_bestask2",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_bestask2",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_bestask3",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_bestask3",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_bestdatetocall1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_bestdatetocall1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_bestdatetocall2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_bestdatetocall2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_bestdatetocall3",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_bestdatetocall3",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_besttimetocall1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_besttimetocall1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_besttimetocall2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_besttimetocall2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_besttimetocall3",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_besttimetocall3",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_CountryId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_CountryId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_alum",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_alum",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_current_parent",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_current_parent",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_employee",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_employee",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_faculty_staff",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_faculty_staff",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_former_athlete",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_former_athlete",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_former_board_member",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_former_board_member",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_former_caller",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_former_caller",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_former_parent",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_former_parent",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_former_student",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_former_student",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_foundation_board_member",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_foundation_board_member",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_foundation_employee",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_foundation_employee",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_friend",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_friend",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_grad_alum",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_grad_alum",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_married_alum",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_married_alum",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_one_call_a_year",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_one_call_a_year",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_parent",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_parent",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_presidents_circle",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_presidents_circle",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_second_ask",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_second_ask",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_student",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_student",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_trustee",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_trustee",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_undergrad_alum",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_undergrad_alum",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_vip",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_vip",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flagboardmember",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flagboardmember",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_grad_reunion_year",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_grad_reunion_year",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_honors",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_honors",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_ledgegroup",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_ledgegroup",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_Organization",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_Organization",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_pledgedecile",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_pledgedecile",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_pledgeprobability",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_pledgeprobability",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_po_pledgeprobability_q",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "po_po_pledgeprobability_q",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_undergrad_reunion_year",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_undergrad_reunion_year",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_flag_leadership",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "po_flag_leadership",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_remove_phone_result",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_remove_phone_result",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_clientid",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_clientid",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationlongdescription1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_designationlongdescription1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationlongdescription2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_designationlongdescription2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_designationlongdescription3",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_designationlongdescription3",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_admissionscounseloremail",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_admissionscounseloremail",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_emailallow",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_emailallow",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_recordimportsource",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "po_recordimportsource",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "pe_flag",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "pe_flag",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "pe_received_date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "pe_received_date",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "source_table_name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "source_table_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "source_key",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "source_key",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "source_key_column",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "source_key_column",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "insert_date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "insert_date",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "insert_by",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "insert_by",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "crm_flag",
                                            "type": "Byte"
                                        },
                                        "sink": {
                                            "name": "crm_flag",
                                            "type": "Byte"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "modified_fileName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "modified_fileName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "account_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "STUDENTID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "STUDENTID",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "rejected_row",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "rejected_row",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "error_message",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "error_message",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountNumber",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AccountNumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "minLOA",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "minLOA",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "verificationResponse",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "verificationResponse",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "verificationResponseDescription",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "verificationResponseDescription",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "accountAge",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "accountAge",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "accountAgeDescription",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "accountAgeDescription",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "archive_datetime",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "archive_datetime",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "archive_by",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "archive_by",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contactbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "alignment_contactbase",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_customer_address_base",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_contactbase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [alignment].[customer_address_base] h\ninner join dbo.stg_response_id t\non trim(h.response_id)=t.response_id",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "alignment_customer_address_base",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_po_application",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_contactbase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [alignment].[po_application] h\ninner join dbo.stg_response_id t\non trim(h.response_id)=t.response_id",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "po_application",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "alignment_po_application",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_po_idbase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_contactbase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [alignment].[po_idbase] h\ninner join dbo.stg_response_id t\non trim(h.response_id)=t.response_id",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "po_idbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "alignment_po_idbase",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_po_interestbase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_contactbase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [alignment].[po_interestbase] h\ninner join dbo.stg_response_id t\non trim(h.response_id)=t.response_id",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "po_interestbase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "alignment_po_interestbase",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_po_racebase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_contactbase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [alignment].[po_racebase] h\ninner join dbo.stg_response_id t\non trim(h.response_id)=t.response_id",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "po_racebase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "alignment_po_racebase",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_po_schoolattendancebase",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_contactbase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [alignment].[po_schoolattendancebase] h\ninner join dbo.stg_response_id t\non trim(h.response_id)=t.response_id",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "po_schoolattendancebase",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "alignment_po_schoolattendancebase",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_contact_relationship",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_contactbase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [alignment].[contact_relationship] h\ninner join dbo.stg_response_id t\non trim(h.response_id)=t.response_id",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contact_relationship",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "alignment_contact_relationship",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_contact_ref_historical",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_stg_update_crm_flag_historical",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [alignment].[contact_ref_historical] h\ninner join dbo.stg_response_id t\non trim(h.response_id)=t.response_id",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contact_ref_historical",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "alignment_contact_ref_historical",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_stg_update_crm_flag_historical",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "archive_po_racebase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_po_schoolattendancebase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_contact_relationship",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_po_interestbase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_po_idbase",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_po_application",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_customer_address_base",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [alignment].[stg_update_crm_flag_historical] h\ninner join dbo.stg_response_id t\non trim(h.response_id)=t.response_id",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "stg_update_crm_flag_historical",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "alignment_stg_update_crm_flag_historical",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_EM_Scoring_intermediate_load",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1_copy1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [temp].[EM_Scoring_intermediate_load] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "EM_Scoring_intermediate_load",
                                    "schemaname": "temp",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "temp_EM_Scoring_intermediate_load",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Archive_EM_search_vendor_intermediate_load",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1_copy1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [temp].[EM_search_vendor_intermediate_load] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "temp",
                                    "schemaname": "EM_search_vendor_intermediate_load",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "temp_EM_search_vendor_intermediate_load",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Wait1",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "Archive_EM_search_vendor_intermediate_load",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_EM_Scoring_intermediate_load",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_temp_EM_Suppression_intermediate_load",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_temp_EM_aog_intermediate_load",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_temp_EM_Marketing_intermediate_load",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 60
                        }
                    },
                    {
                        "name": "archive_temp_EM_Suppression_intermediate_load",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1_copy1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [temp].[EM_Suppression_intermediate_load] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "temp",
                                    "schemaname": "EM_Suppression_intermediate_load",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "temp_EM_Suppression_intermediate_load",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_temp_EM_aog_intermediate_load",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1_copy1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [temp].[EM_aog_intermediate_load] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "temp",
                                    "schemaname": "EM_aog_intermediate_load",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "temp_EM_aog_intermediate_load",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_temp_EM_Marketing_intermediate_load",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Wait1_copy1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [temp].[EM_Marketing_intermediate_load] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "temp",
                                    "schemaname": "EM_Marketing_intermediate_load",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "temp_EM_Marketing_intermediate_load",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Wait1_copy1",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "archive_em_scoring_dia_history_copy",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Archive_em_search_vendor_dia_history",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_em_suppression_dia_history",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_staging_em_aog_dia_history",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "archive_staging_em_marketing_dia_history",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 60
                        }
                    },
                    {
                        "name": "archive_em_scoring_dia_history_copy",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_scoring_dia_history] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "em_scoring_dia_history",
                                    "schemaname": "staging",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_scoring_dia_history",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Archive_em_search_vendor_dia_history",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_search_vendor_dia_history] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "staging",
                                    "schemaname": "em_search_vendor_dia_history",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_search_vendor_dia_history",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_em_suppression_dia_history",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_suppression_dia_history] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "staging",
                                    "schemaname": "em_suppression_dia_history",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_suppression_dia_history",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_staging_em_aog_dia_history",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_aog_dia_history] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "staging",
                                    "schemaname": "em_aog_dia_history",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_aog_dia_history",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_staging_em_marketing_dia_history",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() ARCHIVE_DATETIME, suser_sname() ARCHIVE_BY\nfrom [staging].[em_marketing_dia_history] h\ninner join dbo.stg_response_id t\non trim(h.RESPONSE_ID)=t.RESPONSE_ID",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowPolyBase": true,
                                "polyBaseSettings": {
                                    "rejectValue": 0,
                                    "rejectType": "value",
                                    "useTypeDefault": true
                                }
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "staging",
                                    "schemaname": "em_marketing_dia_history",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "staging_em_marketing_dia_history",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "purge_staging_data",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "archive_contact_ref_historical",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-clean-up",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "azure_sql_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "azure_sql_database_name": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "archive_reqpose_id",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "purge_staging_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "NonQuery",
                                    "text": "insert into dbo.stg_response_id_archive\r\nselect * from stg_response_id"
                                }
                            ],
                            "scriptBlockExecutionTimeout": "02:00:00"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "azure_sql_server_name": {
                        "type": "string"
                    },
                    "azure_sql_database_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "data-Archive"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-02T18:34:01Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-copy-crm-rejcted-rows-historical')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_run_count",
                        "description": "get last run count from contact_ref_historical table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select isnull(max(run_count),0)+1 as run_count\nfrom alignment.crm_rejcted_rows_historical",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contact_ref_historical",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "copy data to crm_rejcted_rows_historical",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "get_run_count",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "additionalColumns": [
                                    {
                                        "name": "run_count",
                                        "value": {
                                            "value": "@activity('get_run_count').output.firstRow.run_count",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "crm_rejcted_rows",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "crm_rejcted_rows_historical",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "azure_sql_server_name": {
                        "type": "string"
                    },
                    "azure_sql_database_name": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "alignment-To-CRM"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-13T04:57:00Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_DIA_Enrichment_Alignment_ADS_view2')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_Alignment_ADS",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Copy_dia_usp_ADS_Reference_Log",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "Select \n c.source_key\n,c.FirstName\n,c.LastName\n,c.Telephone1\n,c.STUDENTID\n,c.EMailAddress1\n,c.Telephone2\n,c.BirthDate\n,a.Line1\n,a.Line2\n,a.City\n,a.StateOrProvince\n,a.PostalCode\n,a.Country\n,a.address_key\n,a.county_fips\n,a.County\n,a.Latitude\n,a.Longitude\n,a.ZIP\n,a.md_flag\n,a.md_received_date\n,c.pe_flag\n,c.pe_received_date\n,c.account_id as account_id \n,coalesce(c.accountNumber,a.accountNumber) as accountNumber\n,Coalesce(c.account_name,a.account_name) as account_name\n,a.modified_filename\nFROM audit.ADS_Reference_Log b\nJoin alignment.customer_address_base a \non b.response_id = a.response_id\nJOIN alignment.contactbase c \nON  a.response_id = c.response_id\nand a.source_key = c.source_key\n --on b.modified_filename = c.modified_filename\nWHERE (c.pe_flag = 'DIA Review'\nor a.pe_flag = 'DIA Review'\nor a.md_flag = 'DIA Review')\nand DE_Status = 'ADS_Review'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "preCopyScript": "Truncate table dia.PreStg_AlignmentDIAReview",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {},
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "dataenrichment/Staging_ADS"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "PreStg_AlignmentDIAReview",
                                    "schemaname": "dia",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "SP_ADS_Review_Comparision",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy_Alignment_ADS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dia].[usp_DIAReview_ADS_Comparison]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Copy_ADS_Alignment",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SP_ADS_Review_Comparision",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "Select * \r\nfrom dia.AlignmentADSReference \r\n--where modified_filename in (select distinct modified_filename from dia.PreStg_AlignmentDIAReview) and\r\n --(PE_ADS_Reference = 1 \r\n--or MD_ADS_Reference = 1)\r\n--where PE_ADS_Reference = 1 \r\n--or MD_ADS_Reference = 1",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "Truncate table dia.AlignmentADSReference",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "source_key",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "source_key",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FirstName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "FirstName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LastName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "LastName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Telephone1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "STUDENTID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "STUDENTID",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EMailAddress1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EMailAddress1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Telephone2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Telephone2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BirthDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "BirthDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Line1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Line1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Line2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Line2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "City",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "City",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StateOrProvince",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "StateOrProvince",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostalCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PostalCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Country",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Country",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "address_key",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "address_key",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "county_fips",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "county_fips",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Latitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "Latitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Longitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "Longitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ZIP",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ZIP",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Telephone1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Telephone1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Line1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Line1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Line2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Line2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_City",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_City",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_StateOrProvince",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_StateOrProvince",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Country",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Country",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_PostalCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_PostalCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Latitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "ADS_Latitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Longitude",
                                            "type": "Single"
                                        },
                                        "sink": {
                                            "name": "ADS_Longitude",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentCustomerId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ParentCustomerId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "md_flag",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "md_flag",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "md_received_date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "md_received_date",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "pe_flag",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "pe_flag",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "pe_received_date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "pe_received_date",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "account_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "accountNumber",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "accountNumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "account_name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "account_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "modified_filename",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "modified_filename",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PE_ADS_Reference",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "PE_ADS_Reference",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MD_ADS_Reference",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "MD_ADS_Reference",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_FirstName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_FirstName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_LastName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_LastName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_EMailAddress1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_EMailAddress1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_homephone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "In_ADS_homephone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "In_ADS_BirthDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "In_ADS_BirthDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Matched_Count",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Matched_Count",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Contact_Record_Count",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Contact_Record_Count",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Telephone2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_Telephone2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "County",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "County",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_County",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_County",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_county_fips",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ADS_county_fips",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "AlignmentADSReference",
                                    "schemaname": "dia",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "AlignmentADSReference",
                                    "schemaname": "dia",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "SP-Update_ADS_referenced_data",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy_ADS_Alignment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Alignment_ADS_Sync]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Start ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "507",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "END ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "archive_dia_AlignmentADSReference",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "508",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Copy_dia_usp_ADS_Reference_Log",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('Copy_dia_usp_ADS_Reference_Log').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_Copy_ALGN_ADS",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Copy_Alignment_ADS",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('Copy_Alignment_ADS').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status_SP",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP_ADS_Review_Comparision",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('SP_ADS_Review_Comparision').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status_ADS_ALIGN",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Copy_ADS_Alignment",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('Copy_ADS_Alignment').Error.Message\n",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status_ADS_reference",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP-Update_ADS_referenced_data",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('SP-Update_ADS_referenced_data').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SP- usp_Update_CRM_Batch_Processing",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Start ETL Audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Update_CRM_Batch_Processing]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status_CRM_Batch_Processing",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP- usp_Update_CRM_Batch_Processing",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('SP- usp_Update_CRM_Batch_Processing').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Copy_dia_usp_ADS_Reference_Log",
                        "description": "replaced by dia.usp_ADS_Reference_Log",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SP- usp_Update_CRM_Batch_Processing",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "Select Distinct  trim(a.response_id) response_id\n\t\t\t\t,a.mapping_id\n\t\t\t\t,a.Modified_Filename\n\t\t\t\t,cast(1 as bit) as ADS_Review \n\t\t\t\t,cast(0 as bit) as ADS_Reference\n\t\t\t\t,cast(0 as bit) as Enrichment\n\t\t\t\t,getdate() as insert_datetime\n\t\t\t\t,SYSTEM_USER as Insert_by\n\t\t\t\t,'ADS_Review' as DE_Status\nFROM alignment.customer_address_base a\njoin alignment.contactbase b\non a.response_id = b.response_id\nand a.source_key = b.source_key\nWHERE a.modified_fileName is not null\nand (\na.pe_flag = 'DIA Review'or \na.md_flag = 'DIA Review'\n)\nand b.crm_flag = 2\n--and a.modified_fileName in (Select modified_fileName from audit.File_Processing_Status where crm_flag = 2)\nand not exists (Select 'X' from dia.AlignmentADSReference t where a.source_key = t.source_key)\nand not exists (Select 'X' from audit.ADS_Reference_Log d where d.response_id = a.response_id)",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "response_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "response_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mapping_id",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "mapping_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Modified_Filename",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "modified_filename",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Review",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "ADS_Review",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ADS_Reference",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "ADS_Reference",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Enrichment",
                                            "type": "Boolean"
                                        },
                                        "sink": {
                                            "name": "Enrichment",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "insert_datetime",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "insert_datetime",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Insert_by",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Insert_by",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DE_Status",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "DE_Status",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "ADS_Reference_Log",
                                    "schemaname": "audit",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "archive_dia_AlignmentADSReference",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SP-Update_ADS_referenced_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select h.*, getdate() archive_datetime, suser_sname() archive_by\nfrom [dia].[AlignmentADSReference] h\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {}
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmalignment/temp"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "AlignmentADSReference",
                                    "schemaname": "dia",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "archive",
                                    "Syn_Table": "dia_AlignmentADSReference",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status_ADS_reference_copy1",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "archive_dia_AlignmentADSReference",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('archive_dia_AlignmentADSReference').Error.Message",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "DIA"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-29T10:19:48Z"
            },
            "dependsOn": []
        }
    ]
}