{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "RNLADFNDPPROD"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/ds_pi_adls11')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_Azuredatalakegen2",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storageaccountname": "rnlndpproddls"
                    }
                },
                "parameters": {
                    "ContainerName": {
                        "type": "string"
                    },
                    "folderName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().folderName",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().ContainerName",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_pi_synapse12')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_AzureSynapseAnalytics",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "az_synapse_em_server": {
                            "value": "@dataset().az_synapse_em_server",
                            "type": "Expression"
                        },
                        "az_synapse_db": {
                            "value": "@dataset().az_synapse_db",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "tablename": {
                        "type": "string"
                    },
                    "schemaname": {
                        "type": "string"
                    },
                    "az_synapse_em_server": {
                        "type": "string"
                    },
                    "az_synapse_db": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "type": "AzureSqlDWTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().schemaname",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().tablename",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_pi_synapse15')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_AzureSynapseAnalytics",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "az_synapse_em_server": {
                            "value": "@dataset().az_synapse_em_server",
                            "type": "Expression"
                        },
                        "az_synapse_db": {
                            "value": "@dataset().az_synapse_db",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "tablename": {
                        "type": "string"
                    },
                    "schemaname": {
                        "type": "string"
                    },
                    "az_synapse_em_server": {
                        "type": "string"
                    },
                    "az_synapse_db": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "partner-Integration"
                },
                "annotations": [],
                "type": "AzureSqlDWTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().schemaname",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().tablename",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_DIA_Enrichment_Alignment_ADS_view')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_Alignment_ADS",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SP- Log ADS Status",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "Select \n c.source_key\n,c.FirstName\n,c.LastName\n,c.Telephone1\n,c.STUDENTID\n,c.EMailAddress1\n,c.Telephone2\n,c.BirthDate\n,a.Line1\n,a.Line2\n,a.City\n,a.StateOrProvince\n,a.PostalCode\n,a.Country\n,a.address_key\n,a.county_fips\n,a.Latitude\n,a.Longitude\n,a.ZIP\n,a.md_flag\n,a.md_received_date\n,c.pe_flag\n,c.pe_received_date\n,c.account_id as account_id \n,coalesce(c.accountNumber,a.accountNumber) as accountNumber\n,Coalesce(c.account_name,a.account_name) as account_name\n,a.modified_filename\nFROM alignment.customer_address_base a \nJOIN alignment.contactbase c \nON a.source_key = c.source_key\nJoin audit.ADS_Reference_Log b\non b.modified_filename = c.modified_filename\nWHERE (c.pe_flag = 'DIA Review'\nor a.pe_flag = 'DIA Review'\nor a.md_flag = 'DIA Review')\nand DE_Status = 'ADS_Review'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "preCopyScript": "Truncate table dia.PreStg_AlignmentDIAReview",
                                "allowCopyCommand": true,
                                "copyCommandSettings": {},
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference"
                                },
                                "path": "dataenrichment/Staging_ADS"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "customer_address_base",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ADS_Enrichment_reference1",
                                "type": "DatasetReference",
                                "parameters": {
                                    "schema": "dia",
                                    "TableName": "PreStg_AlignmentDIAReview",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "SP_ADS_Review_Comparision",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy_Alignment_ADS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dia].[usp_DIAReview_ADS_Comparison]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Copy_ADS_Alignment",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SP_ADS_Review_Comparision",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "Truncate table dia.PreStg_AlignmentADSReference",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference"
                                },
                                "path": "dataenrichment/Staging_ADS"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADS_Enrichment_reference1",
                                "type": "DatasetReference",
                                "parameters": {
                                    "schema": "dia",
                                    "TableName": "AlignmentADSReference",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "PreStg_AlignmentADSReference",
                                    "schemaname": "dia",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Copy_PresStg_Main_Alignment",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Copy_ADS_Alignment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "Select * from dia.PreStg_AlignmentADSReference B\nwhere not exists (Select 'X' from dia.AlignmentADSReference A\n\t\t\t\t\tWhere A.Source_Key = B.Source_Key)",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference"
                                },
                                "path": "dataenrichment/Staging_ADS"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "PreStg_AlignmentADSReference",
                                    "schemaname": "dia",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "AlignmentADSReference",
                                    "schemaname": "dia",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "SP- Log ADS Status",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Start ETL Audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_ADS_Reference_Log]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "SP-Update_ADS_referenced_data",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy_PresStg_Main_Alignment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Alignment_ADS_Sync]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Start ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "507",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_Status_Sync_from_ADS",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP-Update_ADS_referenced_data",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('SP-Update_ADS_referenced_data').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "END ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP-Update_ADS_referenced_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "508",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_log_status",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP- Log ADS Status",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('SP- Log ADS Status').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_Status_CopytoADS",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Copy_Alignment_ADS",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('Copy_Alignment_ADS').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_Status_ADS_SP",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "SP_ADS_Review_Comparision",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('SP_ADS_Review_Comparision').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_Status_ADStoALGN",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Copy_ADS_Alignment",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('Copy_ADS_Alignment').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ETL Audit - Update_Fail_Status_PreSTG",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Copy_PresStg_Main_Alignment",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "509",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "error_description": {
                                    "value": "@activity('Copy_PresStg_Main_Alignment').Error.Message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    }
                },
                "folder": {
                    "name": "DIA"
                },
                "annotations": [],
                "lastPublishTime": "2022-07-29T00:31:46Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-copy-contact-ref-historical')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_run_count",
                        "description": "get last run count from contact_ref_historical table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select isnull(max(run_count),0)+1 as run_count\nfrom alignment.contact_ref_historical",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contact_ref_historical",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "copy data to contact_ref_historical",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "get_run_count",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "additionalColumns": [
                                    {
                                        "name": "run_count",
                                        "value": {
                                            "value": "@activity('get_run_count').output.firstRow.run_count",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contact_ref",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "contact_ref_historical",
                                    "schemaname": "alignment",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.azure_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.azure_sql_database_name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "azure_sql_server_name": {
                        "type": "string"
                    },
                    "azure_sql_database_name": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "alignment-To-CRM"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-18T13:31:46Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-inside-for-each-entity-crmsynapse')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From CRM to ADLS",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@concat(\n\tif(\n\t\tequals(toUpper(pipeline().parameters.SrcObjectType),'QUERY'),\n\t\tif(\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\n\t\t\t\tpipeline().parameters.SrcObjectName,\n\t\t\t\tif(\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\n\t\t\t\t\tpipeline().parameters.SrcObjectName,\n\t\t\t\t\tconcat(pipeline().parameters.SrcObjectName, ' AND ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\n\t\t\t\t\t,'''',')'\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\tconcat('SELECT * FROM ',pipeline().parameters.SrcObjectName,\n\t\t\tif(\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\n\t\t\t\t'',\n\t\t\t\tif(\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\n\t\t\t\t\t'',\n\t\t\t\t\tconcat(' WITH(NOLOCK) WHERE ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\n\t\t\t\t\t,'''',')'\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "06:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "writeBatchSize": 100000,
                                "preCopyScript": {
                                    "value": "@{concat('truncate table ',pipeline().parameters.stg_table_name)}",
                                    "type": "Expression"
                                },
                                "allowCopyCommand": true,
                                "copyCommandSettings": {},
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmtoads/temp/Synapse_data",
                                "enableCompression": true
                            },
                            "parallelCopies": 100
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vaulturl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": {
                                        "value": "@pipeline().parameters.stg_table_name",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "UPDATE SUCCESS",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ExecuteSP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get CDC date value",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[sp_update_load_status_crmtoads]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "S",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@formatDateTime(string(activity('Get CDC date value').output.firstRow.maxDeltaDate))",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_FAILURE",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ExecuteSP",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[sp_update_load_status_crmtoads]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "F",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get CDC date value",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CDC_Source_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@variables('CDC_Source_Query')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": {
                                        "value": "@pipeline().parameters.stg_table_name",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecuteSP",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CDC_Source_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('DECLARE @row_count int, @reject_row  int exec sp_stag_to_ads ''',pipeline().parameters.stg_table_name,''',''',pipeline().parameters.DestinationTableName,''',''',pipeline().parameters.PrimaryKey,''',''',pipeline().parameters.CDC_Key,''', @row_count OUTPUT, @reject_row OUTPUT SELECT @row_count as row_count,@reject_row as reject_row')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": ".",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Data-profliing-for-crm-to-crmsynapse",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE SUCCESS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-insert-crm-ads-crm-data-profiling-log",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "log_type": "CRM_to_ADS",
                                "data_flow": "CRM to ADS",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_run_id",
                                    "type": "Expression"
                                },
                                "source_table_name": {
                                    "value": "@pipeline().parameters.SourceTableName",
                                    "type": "Expression"
                                },
                                "target_table_name": {
                                    "value": "@concat(pipeline().parameters.Schema,'.',pipeline().parameters.DestinationTableName)",
                                    "type": "Expression"
                                },
                                "source_row_count": {
                                    "value": "@string(activity('From CRM to ADLS').output.rowsRead)",
                                    "type": "Expression"
                                },
                                "target_row_count": {
                                    "value": "@string(activity('ExecuteSP').output.firstRow.row_count)",
                                    "type": "Expression"
                                },
                                "rejected_rows": {
                                    "value": "@string(activity('ExecuteSP').output.firstRow.reject_row)",
                                    "type": "Expression"
                                },
                                "database_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "load_start_date": {
                                    "value": "@pipeline().parameters.Load_Start_Date",
                                    "type": "Expression"
                                },
                                "load_end_date": {
                                    "value": "@string(utcnow())",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "CDC_Source_Query",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "From CRM to ADLS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "CDC_Source_Query",
                            "value": {
                                "value": "@if(equals(pipeline().parameters.SourceDeltaColumn,''),concat('select ','''1900-01-01''',' as maxDeltaDate'),concat('select isnull(max(',pipeline().parameters.SourceDeltaColumn,'),','''19000101''',') as maxDeltaDate from dbo.',pipeline().parameters.stg_table_name))",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "DestinationTableName": {
                        "type": "string"
                    },
                    "stg_table_name": {
                        "type": "string"
                    },
                    "FilePath": {
                        "type": "string"
                    },
                    "PrimaryKey": {
                        "type": "string"
                    },
                    "CDC_Key": {
                        "type": "string"
                    },
                    "Schema": {
                        "type": "string"
                    },
                    "SourceTableName": {
                        "type": "string"
                    },
                    "SrcObjectType": {
                        "type": "string"
                    },
                    "LoadType": {
                        "type": "string"
                    },
                    "SourceDeltaColumn": {
                        "type": "string"
                    },
                    "LastSuccessDate": {
                        "type": "string"
                    },
                    "SrcObjectName": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "Load_Start_Date": {
                        "type": "string"
                    },
                    "parent_run_id": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "variables": {
                    "Delta_Load_Date": {
                        "type": "String"
                    },
                    "PrimaryKey": {
                        "type": "String"
                    },
                    "CDC_Source_Query": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "crm-To-Crmsynapse"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-19T12:39:23Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-inside-for-each-entity-crmsynapse-fplus')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From CRM to ADLS",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@concat(\n\tif(\n\t\tequals(toUpper(pipeline().parameters.SrcObjectType),'QUERY'),\n\t\tif(\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\n\t\t\t\tpipeline().parameters.SrcObjectName,\n\t\t\t\tif(\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\n\t\t\t\t\tpipeline().parameters.SrcObjectName,\n\t\t\t\t\tconcat(pipeline().parameters.SrcObjectName, ' AND ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\n\t\t\t\t\t,'''',')'\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\tconcat('SELECT * FROM ',pipeline().parameters.SrcObjectName,\n\t\t\tif(\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\n\t\t\t\t'',\n\t\t\t\tif(\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\n\t\t\t\t\t'',\n\t\t\t\t\tconcat(' WITH(NOLOCK) WHERE ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\n\t\t\t\t\t,'''',')'\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "06:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "writeBatchSize": 25000,
                                "preCopyScript": {
                                    "value": "@{concat('truncate table ',pipeline().parameters.stg_table_name)}",
                                    "type": "Expression"
                                },
                                "allowCopyCommand": true,
                                "copyCommandSettings": {},
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmtoads/temp/Synapse_data",
                                "enableCompression": true
                            },
                            "parallelCopies": 100
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vaulturl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": {
                                        "value": "@pipeline().parameters.stg_table_name",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "UPDATE SUCCESS",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ExecuteSP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get CDC date value",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[sp_update_load_status_crmtoads]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "S",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@formatDateTime(string(activity('Get CDC date value').output.firstRow.maxDeltaDate))",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_FAILURE",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ExecuteSP",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[sp_update_load_status_crmtoads]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "F",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get CDC date value",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CDC_Source_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@variables('CDC_Source_Query')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": {
                                        "value": "@pipeline().parameters.stg_table_name",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecuteSP",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CDC_Source_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('DECLARE @row_count int, @reject_row  int exec sp_stag_to_ads ''',pipeline().parameters.stg_table_name,''',''',pipeline().parameters.DestinationTableName,''',''',pipeline().parameters.PrimaryKey,''',''',pipeline().parameters.CDC_Key,''', @row_count OUTPUT, @reject_row OUTPUT SELECT @row_count as row_count,@reject_row as reject_row')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": ".",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Data-profliing-for-crm-to-crmsynapse",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE SUCCESS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-insert-crm-ads-crm-data-profiling-log",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "log_type": "CRM_to_ADS",
                                "data_flow": "CRM to ADS",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_run_id",
                                    "type": "Expression"
                                },
                                "source_table_name": {
                                    "value": "@pipeline().parameters.SourceTableName",
                                    "type": "Expression"
                                },
                                "target_table_name": {
                                    "value": "@concat(pipeline().parameters.Schema,'.',pipeline().parameters.DestinationTableName)",
                                    "type": "Expression"
                                },
                                "source_row_count": {
                                    "value": "@string(activity('From CRM to ADLS').output.rowsRead)",
                                    "type": "Expression"
                                },
                                "target_row_count": {
                                    "value": "@string(activity('ExecuteSP').output.firstRow.row_count)",
                                    "type": "Expression"
                                },
                                "rejected_rows": {
                                    "value": "@string(activity('ExecuteSP').output.firstRow.reject_row)",
                                    "type": "Expression"
                                },
                                "database_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "load_start_date": {
                                    "value": "@pipeline().parameters.Load_Start_Date",
                                    "type": "Expression"
                                },
                                "load_end_date": {
                                    "value": "@string(utcnow())",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "CDC_Source_Query",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "From CRM to ADLS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "CDC_Source_Query",
                            "value": {
                                "value": "@if(equals(pipeline().parameters.SourceDeltaColumn,''),concat('select ','''1900-01-01''',' as maxDeltaDate'),concat('select isnull(max(',pipeline().parameters.SourceDeltaColumn,'),','''19000101''',') as maxDeltaDate from dbo.',pipeline().parameters.stg_table_name))",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "DestinationTableName": {
                        "type": "string"
                    },
                    "stg_table_name": {
                        "type": "string"
                    },
                    "FilePath": {
                        "type": "string"
                    },
                    "PrimaryKey": {
                        "type": "string"
                    },
                    "CDC_Key": {
                        "type": "string"
                    },
                    "Schema": {
                        "type": "string"
                    },
                    "SourceTableName": {
                        "type": "string"
                    },
                    "SrcObjectType": {
                        "type": "string"
                    },
                    "LoadType": {
                        "type": "string"
                    },
                    "SourceDeltaColumn": {
                        "type": "string"
                    },
                    "LastSuccessDate": {
                        "type": "string"
                    },
                    "SrcObjectName": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "Load_Start_Date": {
                        "type": "string"
                    },
                    "parent_run_id": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "variables": {
                    "Delta_Load_Date": {
                        "type": "String"
                    },
                    "PrimaryKey": {
                        "type": "String"
                    },
                    "CDC_Source_Query": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "crm-To-Crmsynapse-Fplus"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-20T10:56:50Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-inside-for-each-entity-crmsynapse-powerbi')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From CRM to ADLS",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@concat(\r\n\tif(\r\n\t\tequals(toUpper(pipeline().parameters.SrcObjectType),'QUERY'),\r\n\t\tif(\r\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\r\n\t\t\t\tpipeline().parameters.SrcObjectName,\r\n\t\t\t\tif(\r\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\r\n\t\t\t\t\tpipeline().parameters.SrcObjectName,\r\n\t\t\t\t\tconcat(pipeline().parameters.SrcObjectName, ' AND ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\r\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\r\n\t\t\t\t\t,'''',')'\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t),\r\n\t\tconcat('SELECT * FROM ',pipeline().parameters.SrcObjectName,\r\n\t\t\tif(\r\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\r\n\t\t\t\t'',\r\n\t\t\t\tif(\r\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\r\n\t\t\t\t\t'',\r\n\t\t\t\t\tconcat(' WITH(NOLOCK) WHERE ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\r\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\r\n\t\t\t\t\t,'''',')'\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "06:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "preCopyScript": {
                                    "value": "@{concat('truncate table ',pipeline().parameters.stg_table_name)}",
                                    "type": "Expression"
                                },
                                "allowCopyCommand": true,
                                "copyCommandSettings": {},
                                "disableMetricsCollection": false
                            },
                            "enableStaging": true,
                            "stagingSettings": {
                                "linkedServiceName": {
                                    "referenceName": "ls_Azuredatalakegen2",
                                    "type": "LinkedServiceReference",
                                    "parameters": {
                                        "storageaccountname": {
                                            "value": "@pipeline().parameters.storageaccountname",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "path": "crmtoads/temp/Synapse_data",
                                "enableCompression": true
                            },
                            "parallelCopies": 100
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboostCRM_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vaulturl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": {
                                        "value": "@pipeline().parameters.stg_table_name",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "UPDATE SUCCESS",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ExecuteSP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get CDC date value",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[sp_update_load_status_crmtoads]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "S",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@formatDateTime(string(activity('Get CDC date value').output.firstRow.maxDeltaDate))",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_FAILURE",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ExecuteSP",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[sp_update_load_status_crmtoads]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "F",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get CDC date value",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CDC_Source_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@variables('CDC_Source_Query')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": {
                                        "value": "@pipeline().parameters.stg_table_name",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecuteSP",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CDC_Source_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('DECLARE @row_count int, @reject_row  int exec sp_stag_to_ads ''',pipeline().parameters.stg_table_name,''',''',pipeline().parameters.DestinationTableName,''',''',pipeline().parameters.PrimaryKey,''',''',pipeline().parameters.CDC_Key,''', @row_count OUTPUT, @reject_row OUTPUT SELECT @row_count as row_count,@reject_row as reject_row')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": ".",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Data-profliing-for-crm-to-crmsynapse",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE SUCCESS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-insert-crm-ads-crm-data-profiling-log",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "log_type": "CRM_to_ADS",
                                "data_flow": "CRM to ADS",
                                "adf_run_id": {
                                    "value": "@pipeline().parameters.parent_run_id",
                                    "type": "Expression"
                                },
                                "source_table_name": {
                                    "value": "@pipeline().parameters.SourceTableName",
                                    "type": "Expression"
                                },
                                "target_table_name": {
                                    "value": "@concat(pipeline().parameters.Schema,'.',pipeline().parameters.DestinationTableName)",
                                    "type": "Expression"
                                },
                                "source_row_count": {
                                    "value": "@string(activity('From CRM to ADLS').output.rowsRead)",
                                    "type": "Expression"
                                },
                                "target_row_count": {
                                    "value": "@string(activity('ExecuteSP').output.firstRow.row_count)",
                                    "type": "Expression"
                                },
                                "rejected_rows": {
                                    "value": "@string(activity('ExecuteSP').output.firstRow.reject_row)",
                                    "type": "Expression"
                                },
                                "database_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "load_start_date": {
                                    "value": "@pipeline().parameters.Load_Start_Date",
                                    "type": "Expression"
                                },
                                "load_end_date": {
                                    "value": "@string(utcnow())",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "CDC_Source_Query",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "From CRM to ADLS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "CDC_Source_Query",
                            "value": {
                                "value": "@if(equals(pipeline().parameters.SourceDeltaColumn,''),concat('select ','''1900-01-01''',' as maxDeltaDate'),concat('select isnull(max(',pipeline().parameters.SourceDeltaColumn,'),','''19000101''',') as maxDeltaDate from dbo.',pipeline().parameters.stg_table_name))",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "DestinationTableName": {
                        "type": "string"
                    },
                    "stg_table_name": {
                        "type": "string"
                    },
                    "FilePath": {
                        "type": "string"
                    },
                    "PrimaryKey": {
                        "type": "string"
                    },
                    "CDC_Key": {
                        "type": "string"
                    },
                    "Schema": {
                        "type": "string"
                    },
                    "SourceTableName": {
                        "type": "string"
                    },
                    "SrcObjectType": {
                        "type": "string"
                    },
                    "LoadType": {
                        "type": "string"
                    },
                    "SourceDeltaColumn": {
                        "type": "string"
                    },
                    "LastSuccessDate": {
                        "type": "string"
                    },
                    "SrcObjectName": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "Load_Start_Date": {
                        "type": "string"
                    },
                    "parent_run_id": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "variables": {
                    "Delta_Load_Date": {
                        "type": "String"
                    },
                    "PrimaryKey": {
                        "type": "String"
                    },
                    "CDC_Source_Query": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-06T11:23:46Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-ads-to-crm-for-each')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_COPY_DATA",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@concat(\n\tif(\n\t\tequals(toUpper(pipeline().parameters.SrcObjectType),'QUERY'),\n\t\tif(\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\n\t\t\t\tpipeline().parameters.SrcObjectName,\n\t\t\t\tif(\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\n\t\t\t\t\tpipeline().parameters.SrcObjectName,\n\t\t\t\t\tconcat(pipeline().parameters.SrcObjectName, ' AND ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\n\t\t\t\t\t,'''',')'\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\tconcat('SELECT * FROM ',pipeline().parameters.SrcObjectName,\n\t\t\tif(\n\t\t\t\tequals(toUpper(pipeline().parameters.LoadType),'INITIAL'),\n\t\t\t\t'',\n\t\t\t\tif(\n\t\t\t\t\tequals(toUpper(pipeline().parameters.SourceDeltaColumn),'NULL'),\n\t\t\t\t\t'',\n\t\t\t\t\tconcat(' WHERE ',pipeline().parameters.SourceDeltaColumn,'>=CONVERT(DATETIME,','''',\n\t\t\t\t\tformatDateTime(pipeline().parameters.LastSuccessDate,'yyyy-MM-dd HH:mm:ss')\n\t\t\t\t\t,'''',')'\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBatchSize": 50000,
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": false,
                                    "keys": {
                                        "value": "@pipeline().parameters.PrimaryKeyVariable",
                                        "type": "Expression"
                                    }
                                },
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": "''",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": {
                                        "value": "@pipeline().parameters.TgtSchema",
                                        "type": "Expression"
                                    },
                                    "crm_table": {
                                        "value": "@pipeline().parameters.TargetTableName",
                                        "type": "Expression"
                                    },
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vaulturl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get CDC date value",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_COPY_DATA",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('select max(',pipeline().parameters.SourceDeltaColumn,') as maxDeltaDate from ',pipeline().parameters.SourceTableName)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": "''",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE SUCCESS",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get CDC date value",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[update_load_status_adstocrm]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "S",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@formatDateTime(string(activity('Get CDC date value').output.firstRow.maxDeltaDate))",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_FAILURE",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_COPY_DATA",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[config].[update_load_status_adstocrm]",
                            "storedProcedureParameters": {
                                "Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "LoadStatus": {
                                    "value": {
                                        "value": "F",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadDate": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Data profliing for CRM to ADS",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE SUCCESS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-insert-crm-ads-crm-data-profiling-log",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "log_type": "ADS_to_CRM",
                                "data_flow": "ADS to CRM",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "source_table_name": {
                                    "value": "@pipeline().parameters.SourceTableName",
                                    "type": "Expression"
                                },
                                "target_table_name": {
                                    "value": "@concat(pipeline().parameters.TgtSchema,'.',pipeline().parameters.TargetTableName)",
                                    "type": "Expression"
                                },
                                "source_row_count": {
                                    "value": "@string(activity('ACT_COPY_DATA').output.rowsRead)",
                                    "type": "Expression"
                                },
                                "target_row_count": {
                                    "value": "@string(activity('ACT_COPY_DATA').output.rowsCopied)",
                                    "type": "Expression"
                                },
                                "rejected_rows": {
                                    "value": "@string(sub(int(string(activity('ACT_COPY_DATA').output.rowsRead)),int(string(activity('ACT_COPY_DATA').output.rowsCopied))))\n",
                                    "type": "Expression"
                                },
                                "database_server_name": {
                                    "value": "@pipeline().parameters.az_sql_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_sql_db_name",
                                    "type": "Expression"
                                },
                                "load_start_date": {
                                    "value": "@pipeline().parameters.Load_Start_Date",
                                    "type": "Expression"
                                },
                                "load_end_date": {
                                    "value": "@string(utcnow())",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vaulturl",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SourceTableName": {
                        "type": "string"
                    },
                    "TargetTableName": {
                        "type": "string"
                    },
                    "PrimaryKeyVariable": {
                        "type": "array"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "SeqNo": {
                        "type": "string"
                    },
                    "SrcObjectType": {
                        "type": "string"
                    },
                    "SrcObjectName": {
                        "type": "string"
                    },
                    "SourceDeltaColumn": {
                        "type": "string"
                    },
                    "TgtSchema": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "string"
                    },
                    "LoadType": {
                        "type": "string"
                    },
                    "LastLoadDate": {
                        "type": "string"
                    },
                    "LastSuccessDate": {
                        "type": "string"
                    },
                    "LastLoadStatus": {
                        "type": "string"
                    },
                    "Load_Start_Date": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "crmsynapse-To_Crm"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-23T05:30:36Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-digitalboost-to-crmsynapse')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get-entities-from-config-table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "select [id],\n       [seq_no],\n       [source_table_name],\n       [target_table_name],\n       [is_active]\nfrom config.bi_digitalboost_to_synapse\nwhere [is_active] = 1 order by\n[seq_no] ASC",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse_powerbi",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": "''",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "for-each-entity",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get-entities-from-config-table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get-entities-from-config-table').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "truncate-and-load",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "preCopyScript": {
                                                "value": "@{concat('Truncate table ','bi.',item().target_table_name)}",
                                                "type": "Expression"
                                            },
                                            "allowCopyCommand": true,
                                            "copyCommandSettings": {},
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": true,
                                        "stagingSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "ls_Azuredatalakegen2",
                                                "type": "LinkedServiceReference",
                                                "parameters": {
                                                    "storageaccountname": {
                                                        "value": "@pipeline().parameters.storageaccountname",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "path": "digitalboost/temp",
                                            "enableCompression": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_digitalboost",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                },
                                                "digitalboost_server": {
                                                    "value": "@pipeline().parameters.digitalboost_server",
                                                    "type": "Expression"
                                                },
                                                "digitalboost_db": {
                                                    "value": "@pipeline().parameters.digitalboost_db",
                                                    "type": "Expression"
                                                },
                                                "digitalboost_username": {
                                                    "value": "@pipeline().parameters.digitalboost_username",
                                                    "type": "Expression"
                                                },
                                                "vault_url": {
                                                    "value": "@pipeline().parameters.vaulturl",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_crmsynapse_powerbi",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Tablename": {
                                                    "value": "@item().target_table_name",
                                                    "type": "Expression"
                                                },
                                                "az_synapse_crm_server": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                                    "type": "Expression"
                                                },
                                                "az_synapse_crm_db": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "storageaccountname": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    },
                    "digitalboost_server": {
                        "type": "string"
                    },
                    "digitalboost_db": {
                        "type": "string"
                    },
                    "digitalboost_username": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "powerbi-Crmsynapse"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-16T13:05:47Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-powerbi-storedprocedure-crmsynapse')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "stored-procedures-based-on-is-active",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderStoredProcedureName": "[[bi].[sp_get_executionlist]",
                                "storedProcedureParameters": {
                                    "exlude_dependency_check": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "@pipeline().parameters.ExcludeGroupDependency",
                                            "type": "Expression"
                                        }
                                    },
                                    "group_name": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.GroupName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse_powerbi",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": "''",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "for-each-stored-procedure",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "stored-procedures-based-on-is-active",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('stored-procedures-based-on-is-active').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "stored-procedure-dynamic",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "@item().sp_name",
                                            "type": "Expression"
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Update Success Group Name Status",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "for-each-stored-procedure",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[bi].[sp_update_execution]",
                            "storedProcedureParameters": {
                                "group_name": {
                                    "value": {
                                        "value": "@pipeline().parameters.GroupName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "status": {
                                    "value": "Y",
                                    "type": "String"
                                },
                                "updated_date": {
                                    "value": {
                                        "value": "@utcNow()",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Update Failure Group Name Status",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "for-each-stored-procedure",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[bi].[sp_update_execution]",
                            "storedProcedureParameters": {
                                "group_name": {
                                    "value": {
                                        "value": "@pipeline().parameters.GroupName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "status": {
                                    "value": "N",
                                    "type": "String"
                                },
                                "updated_date": {
                                    "value": {
                                        "value": "@utcNow()",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "if-condition-false",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "stored-procedures-based-on-is-active",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('stored-procedures-based-on-is-active').output.count,0)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "fail-activity",
                                    "type": "Fail",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Dependent Job execution status is failed",
                                        "errorCode": "100"
                                    }
                                },
                                {
                                    "name": "Update Failure Group Name Status If condition",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[bi].[sp_update_execution]",
                                        "storedProcedureParameters": {
                                            "group_name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.GroupName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "status": {
                                                "value": "N",
                                                "type": "String"
                                            },
                                            "updated_date": {
                                                "value": {
                                                    "value": "@utcNow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "GroupName": {
                        "type": "string"
                    },
                    "ExcludeGroupDependency": {
                        "type": "bool"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "powerbi-Crmsynapse"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-15T18:53:57Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_fplus_dq_flag_update')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQ Flag update in student_raw table",
                "activities": [
                    {
                        "name": "dq_lookup",
                        "description": "Apply DQ Rules",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_dq_lookup_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_dq_lookup_data').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "update_student_raw_table",
                                    "description": "Executes update statements for DQ flag update as per rules",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    },
                                                    {
                                                        "name": "accountname",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.accountname",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "@item().codeforflagupdate",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_dq_lookup_data",
                        "description": "Get DQ Rules for Admit Model from DQ_Lookup table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT codeforflagupdate FROM fplus.DQ_Lookup Where modeltype='@{pipeline().parameters.modeltype}' and CodeForFlagUpdate is not null\nand CodeForFlagUpdate != 'NULL'\norder by DqlookupKey asc",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "DQ_Lookup",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "accountname": {
                        "type": "string"
                    },
                    "fqtorderid": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-21T12:28:52Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_flplus_dq_correction')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQ data correction in student_raw table",
                "activities": [
                    {
                        "name": "get_dq_lookup_data_correction",
                        "description": "Get rules for data correction from DQ_Lookup table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT codeforcorrection FROM fplus.DQ_Lookup Where modeltype='@{pipeline().parameters.modeltype}' and codeforcorrection is not null\nand codeforcorrection != 'NULL'\norder by DqlookupKey asc",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "DQ_Lookup",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "dq_lookup_codecorrection",
                        "description": "Apply DQ Data correction rules",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_dq_lookup_data_correction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_dq_lookup_data_correction').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "update_student_raw_table_codecorrection",
                                    "description": "Executes update statements for DQ correction as per rules",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    },
                                                    {
                                                        "name": "accountname",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.accountname",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "@item().codeforcorrection",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "fqtorderid": {
                        "type": "string"
                    },
                    "accountname": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-10-21T12:28:52Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_flplus_dq_correction1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQ data correction in student_raw table",
                "activities": [
                    {
                        "name": "get_dq_lookup_data_correction",
                        "description": "Get rules for data correction from DQ_Lookup table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT codeforcorrection FROM fplus.DQ_Lookup Where modeltype='@{pipeline().parameters.modeltype}' and codeforcorrection is not null\nand codeforcorrection != 'NULL'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSynapseAnalyticsTable121",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "dq_lookup_codecorrection",
                        "description": "Apply DQ Data correction rules",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_dq_lookup_data_correction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_dq_lookup_data_correction').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "update_student_raw_table_codecorrection",
                                    "description": "Executes update statements for DQ correction as per rules",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference"
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    },
                                                    {
                                                        "name": "accountname",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.accountname",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "@item().codeforcorrection",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "fqtorderid": {
                        "type": "string"
                    },
                    "accountname": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-01T00:33:59Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_fplus_dq_flag_update1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQ Flag update in student_raw table",
                "activities": [
                    {
                        "name": "dq_lookup",
                        "description": "Apply DQ Rules",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_dq_lookup_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_dq_lookup_data').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "update_student_raw_table",
                                    "description": "Executes update statements for DQ flag update as per rules",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference"
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    },
                                                    {
                                                        "name": "accountname",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.accountname",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "@item().codeforflagupdate",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_dq_lookup_data",
                        "description": "Get DQ Rules for Admit Model from DQ_Lookup table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT codeforflagupdate FROM fplus.DQ_Lookup Where modeltype='@{pipeline().parameters.modeltype}' and CodeForFlagUpdate is not null\nand CodeForFlagUpdate != 'NULL'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSynapseAnalyticsTable131",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "accountname": {
                        "type": "string"
                    },
                    "fqtorderid": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-01T00:33:59Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_fplus_dq_flag_update2')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQ Flag update in student_raw table",
                "activities": [
                    {
                        "name": "dq_lookup",
                        "description": "Apply DQ Rules",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_dq_lookup_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_dq_lookup_data').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "update_student_raw_table",
                                    "description": "Executes update statements for DQ flag update as per rules",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference"
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    },
                                                    {
                                                        "name": "accountname",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.accountname",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "@item().codeforflagupdate",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_dq_lookup_data",
                        "description": "Get DQ Rules for Admit Model from DQ_Lookup table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT codeforflagupdate FROM fplus.DQ_Lookup Where modeltype='@{pipeline().parameters.modeltype}' and CodeForFlagUpdate is not null\nand CodeForFlagUpdate != 'NULL'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSynapseAnalyticsTable132",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "accountname": {
                        "type": "string"
                    },
                    "fqtorderid": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-01T00:53:22Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_flplus_dq_correction2')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQ data correction in student_raw table",
                "activities": [
                    {
                        "name": "get_dq_lookup_data_correction",
                        "description": "Get rules for data correction from DQ_Lookup table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT codeforcorrection FROM fplus.DQ_Lookup Where modeltype='@{pipeline().parameters.modeltype}' and codeforcorrection is not null\nand codeforcorrection != 'NULL'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSynapseAnalyticsTable122",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "dq_lookup_codecorrection",
                        "description": "Apply DQ Data correction rules",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_dq_lookup_data_correction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_dq_lookup_data_correction').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "update_student_raw_table_codecorrection",
                                    "description": "Executes update statements for DQ correction as per rules",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference"
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    },
                                                    {
                                                        "name": "accountname",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.accountname",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "@item().codeforcorrection",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "fqtorderid": {
                        "type": "string"
                    },
                    "accountname": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-01T00:53:22Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_fplus_dq_flag_update3')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQ Flag update in student_raw table",
                "activities": [
                    {
                        "name": "dq_lookup",
                        "description": "Apply DQ Rules",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_dq_lookup_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_dq_lookup_data').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "update_student_raw_table",
                                    "description": "Executes update statements for DQ flag update as per rules",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference"
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    },
                                                    {
                                                        "name": "accountname",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.accountname",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "@item().codeforflagupdate",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "get_dq_lookup_data",
                        "description": "Get DQ Rules for Admit Model from DQ_Lookup table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT codeforflagupdate FROM fplus.DQ_Lookup Where modeltype='@{pipeline().parameters.modeltype}' and CodeForFlagUpdate is not null\nand CodeForFlagUpdate != 'NULL'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSynapseAnalyticsTable133",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "accountname": {
                        "type": "string"
                    },
                    "fqtorderid": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-01T01:13:38Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_flplus_dq_correction3')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQ data correction in student_raw table",
                "activities": [
                    {
                        "name": "get_dq_lookup_data_correction",
                        "description": "Get rules for data correction from DQ_Lookup table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT codeforcorrection FROM fplus.DQ_Lookup Where modeltype='@{pipeline().parameters.modeltype}' and codeforcorrection is not null\nand codeforcorrection != 'NULL'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSynapseAnalyticsTable123",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "dq_lookup_codecorrection",
                        "description": "Apply DQ Data correction rules",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_dq_lookup_data_correction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_dq_lookup_data_correction').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "update_student_raw_table_codecorrection",
                                    "description": "Executes update statements for DQ correction as per rules",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference"
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    },
                                                    {
                                                        "name": "accountname",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@pipeline().parameters.accountname",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "@item().codeforcorrection",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "fqtorderid": {
                        "type": "string"
                    },
                    "accountname": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-01T01:13:38Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_loaddetain_dqlookup')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get lookupvalues from CRM",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.01:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT\n\tdlvb.[po_dqlookupvalueId] AS LookupvalueId,\n\tdlvb.[po_account] as accountid,\n\tab.Name as accountname,\n\tdlvb.[po_columnname] as ColumnName,\n\tdlvb.[po_organizationvalue] as organizationValue,\n\tdlvb.[po_description] as Description,\n\tdlvb.createdby,\n\tdlvb.createdon,\n\tdlvb.Modifiedby,\n\tdlvb.modifiedon\n FROM [dbo].[po_dqlookupvalueBase] as dlvb\n left join AccountBase as ab\n on dlvb.po_account =ab.AccountId",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "preCopyScript": "TRUNCATE TABLE [fplus].[DQLookupValues]",
                                "writeBehavior": "Insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LookupvalueId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "LookupValueID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "accountid",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "AccountID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "accountname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "AccountName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ColumnName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "ColumnName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "organizationValue",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "OrganizationValue",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Description",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "Description",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "createdby",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "CreatedBy",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "createdon",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "CreatedDate",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Modifiedby",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        },
                                        "sink": {
                                            "name": "LastUpdatedBy",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "modifiedon",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "LastUpdatedDate",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "po_dqlookupvalueBase",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "DQLookupValues",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-12T11:14:57Z"
            },
            "dependsOn": []
        }
    ]
}