{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "RNLADFNDPPROD"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/pip-data-entry-into-fqt-stg-inquiry')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Fetch Input Inquiry Data for Scoring Or Modeling",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get Inquiry Responseid from CRM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.10:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECt distinct a.RESPONSE_ID as po_responseid, b.po_accountName FROM staging.em_historical_data_all a (nolock)\r\ninner join dbo.flag_fplus_files b (nolock) on b.po_responseid = a.RESPONSE_ID\r\nwhere crm_flag=1 and a.RESPONSE_ID in \r\n(select po_responseid FROM dbo.flag_fplus_files (nolock))",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "flag_fplus_files",
                                    "schemaname": "dbo",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_sql_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_sql_db_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Fetch Input Inquiry Data for Scoring Or Modeling",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Fetch Input Inquiry Data for Scoring Or Modeling').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "check if record is present in file metadata",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT COUNT(1) as Count\n FROM [audit].[file_metadata] \nWHERE [account_name]='@{item().po_accountName}'\nand response_id= '@{item().po_responseid}'\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": {
                                                    "value": "@pipeline().parameters.tablename",
                                                    "type": "Expression"
                                                },
                                                "schemaname": {
                                                    "value": "@pipeline().parameters.schemaname",
                                                    "type": "Expression"
                                                },
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_sql_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_sql_db_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "check_if_record_present_in_filemetadata",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Check count in Historical",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(activity('Check count in Historical').output.value[0].histcount,0)\n",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Fail",
                                                "type": "Fail",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "message": "records is not present in file metadata and CRM flag not equals to 1",
                                                    "errorCode": "200"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "copy_historical_table",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "select * from [staging].[em_historical_data_all]  WITH (NOLOCK) \nwhere response_id= '@{item().po_responseid}' and crm_flag=1 and rejected_row=0",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "preCopyScript": "truncate table fplus.em_historical_data_all",
                                                        "allowCopyCommand": true,
                                                        "copyCommandSettings": {},
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": true,
                                                    "stagingSettings": {
                                                        "linkedServiceName": {
                                                            "referenceName": "ls_Azuredatalakegen2",
                                                            "type": "LinkedServiceReference",
                                                            "parameters": {
                                                                "storageaccountname": {
                                                                    "value": "@pipeline().parameters.storageaccountname",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        },
                                                        "path": "datalanding/fplus/em_historical_data_all"
                                                    },
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "UNIQUE_ID",
                                                                    "type": "Guid"
                                                                },
                                                                "sink": {
                                                                    "name": "UNIQUE_ID",
                                                                    "type": "Guid"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RESPONSE_ID",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "RESPONSE_ID",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAPPING_ID",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAPPING_ID",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACADEM_LEV",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACADEM_LEV",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACT_COMP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACT_COMP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACT_SOURCE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACT_SOURCE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACTENGLISH",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACTENGLISH",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACTMATH",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACTMATH",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACTREADING",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACTREADING",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACTSCIENCE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACTSCIENCE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACTWRITTEN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACTWRITTEN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ADDRESS1",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ADDRESS1",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ADDRESS2",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ADDRESS2",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ADDRESS3",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ADDRESS3",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ADMIT_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ADMIT_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ADMIT_TYPE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ADMIT_TYPE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AMERICAN_INDIAN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "AMERICAN_INDIAN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "APP_CODE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "APP_CODE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "APP_DEPT_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "APP_DEPT_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "APP_DEPT_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "APP_DEPT_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "APP_TYPE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "APP_TYPE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ASIAN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ASIAN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "BIRTH_DT",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "BIRTH_DT",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "BLACK",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "BLACK",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CA_VISIT",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CA_VISIT",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CA_VISIT_DATE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CA_VISIT_DATE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CHURCH_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CHURCH_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CITY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CITY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CLASS_RANK",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CLASS_RANK",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CONCENTRATION_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CONCENTRATION_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CONCENTRATION_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CONCENTRATION_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CONT_SI",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CONT_SI",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CONT_TI",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CONT_TI",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CONVERSION_STAGE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CONVERSION_STAGE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "COUNSELOR",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "COUNSELOR",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "COUNTRY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "COUNTRY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "COUNTRY_CODE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "COUNTRY_CODE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "COUNTY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "COUNTY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "COUNTY_CODE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "COUNTY_CODE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CUBAN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CUBAN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_ADM",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_ADM",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_APP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_APP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_APP_COMP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_APP_COMP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_APP_START",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_APP_START",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_CANC",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_CANC",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_CON",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_CON",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_END",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_END",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_ENR",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_ENR",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_INQ",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_INQ",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_PRO",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_PRO",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_PROG_START",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_PROG_START",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DECISION_PLAN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DECISION_PLAN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DENOM_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DENOM_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DENOM_CD_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DENOM_CD_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DENOM_CD_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DENOM_CD_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DEPT_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DEPT_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DEPT_01_APP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DEPT_01_APP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DEPT_01_INQ",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DEPT_01_INQ",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DEPT_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DEPT_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DEPT_02_APP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DEPT_02_APP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DEPT_02_INQ",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DEPT_02_INQ",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EMAIL",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "EMAIL",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ENROLLMENT_PREDICTOR",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ENROLLMENT_PREDICTOR",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ENTRY_STAT",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ENTRY_STAT",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ENTRY_TERM",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ENTRY_TERM",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EPS_CODE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "EPS_CODE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ETH_RACE_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ETH_RACE_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ETH_SUBRACE_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ETH_SUBRACE_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ETHNIC_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ETHNIC_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "F_NAME",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "F_NAME",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FIRST_GEN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FIRST_GEN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FIRSTSOURCEAPP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FIRSTSOURCEAPP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_ACTSOURCE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_ACTSOURCE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_ADM",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_ADM",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_APP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_APP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_CANC",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_CANC",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_CON",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_CON",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_ENR",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_ENR",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_ETHNIC",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_ETHNIC",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_HOMESCHOOL",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_HOMESCHOOL",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_INQ",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_INQ",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_INTERNATIONAL",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_INTERNATIONAL",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_PRO",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_PRO",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_PUSH",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_PUSH",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_SATSOURCE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_SATSOURCE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FULLTIME_PARTTIME",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FULLTIME_PARTTIME",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "GENDER",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "GENDER",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "HOME_PHONE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "HOME_PHONE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "HOME_PHONE_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "HOME_PHONE_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "HOUSING",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "HOUSING",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "HS_CODE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "HS_CODE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "HS_GRAD_YR",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "HS_GRAD_YR",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "HS_GPA",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "HS_GPA",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INQ_DEPT_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INQ_DEPT_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INQ_DEPT_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INQ_DEPT_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_04",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_04",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_05",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_05",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_06",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_06",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_07",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_07",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_08",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_08",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_09",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_09",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_10",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_10",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_11",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_11",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_12",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_12",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_13",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_13",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INTEREST_14",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INTEREST_14",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ISOURCE_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ISOURCE_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "L_NAME",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "L_NAME",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "M_NAME",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "M_NAME",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_01_APP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_01_APP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_01_GRAD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_01_GRAD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_01_INQ",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_01_INQ",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_01_PRO",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_01_PRO",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_02_APP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_02_APP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_02_GRAD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_02_GRAD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_02_INQ",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_02_INQ",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_02_PRO",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_02_PRO",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_03_PRO",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_03_PRO",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MAJOR_04_PRO",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MAJOR_04_PRO",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MARITAL",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MARITAL",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MARKET_SEG",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MARKET_SEG",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MEXICAN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MEXICAN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MILITARY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MILITARY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MINDSET",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MINDSET",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MOBILE_PHONE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MOBILE_PHONE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MOBILE_PHONE_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MOBILE_PHONE_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "NATIVE_HAWAIIAN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "NATIVE_HAWAIIAN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "NON_HISPANIC",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "NON_HISPANIC",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "OP_HOUSE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "OP_HOUSE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "OREN_SESS",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "OREN_SESS",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "OTHER_ETHNICITY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "OTHER_ETHNICITY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "OTHER_HISPANIC",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "OTHER_HISPANIC",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_ADDRESS1_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_ADDRESS1_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_ADDRESS1_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_ADDRESS1_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_ADDRESS2_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_ADDRESS2_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_ADDRESS2_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_ADDRESS2_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_CITY_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_CITY_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_CITY_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_CITY_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_COUNTRY_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_COUNTRY_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_COUNTRY_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_COUNTRY_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_EMAIL_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_EMAIL_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_EMAIL_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_EMAIL_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_F_NAME_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_F_NAME_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_F_NAME_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_F_NAME_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_GPA",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_GPA",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_HOME_PHONE_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_HOME_PHONE_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_HOME_PHONE_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_HOME_PHONE_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_L_NAME_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_L_NAME_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_L_NAME_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_L_NAME_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_MOBILE_PHONE_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_MOBILE_PHONE_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_MOBILE_PHONE_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_MOBILE_PHONE_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_STATE_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_STATE_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_STATE_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_STATE_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_ZIP_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_ZIP_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "P_ZIP_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "P_ZIP_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "POSTAL_CODE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "POSTAL_CODE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PREPROFESSIONAL",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PREPROFESSIONAL",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PROGRAM",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PROGRAM",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PROVINCE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PROVINCE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PUERTO_RICAN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PUERTO_RICAN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PURCHASE_LIST_GROUP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PURCHASE_LIST_GROUP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RACE_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "RACE_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RACE_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "RACE_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RACE_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "RACE_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RACE_04",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "RACE_04",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RACE_05",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "RACE_05",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RELATION_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "RELATION_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RELATION_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "RELATION_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SAT_COMP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SAT_COMP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SAT_SOURCE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SAT_SOURCE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SATMATH",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SATMATH",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SATREADING",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SATREADING",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SEARCH_NAME",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SEARCH_NAME",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SEARCH_TAG_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SEARCH_TAG_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SEARCH_TAG_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SEARCH_TAG_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SEARCH_TAG_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SEARCH_TAG_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SITE_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SITE_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SPORT_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SPORT_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SPORT_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SPORT_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SPORT_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SPORT_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SPORT_04",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SPORT_04",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SPORT_05",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SPORT_05",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SPORT_06",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SPORT_06",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SPORT_07",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SPORT_07",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SPORT_08",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SPORT_08",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SPORT_09",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SPORT_09",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SPORT_10",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SPORT_10",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ST_INT_LVL",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ST_INT_LVL",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STATE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STATE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STATE_CODE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STATE_CODE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENT_ID_ACT",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENT_ID_ACT",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENT_ID_CBSS",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENT_ID_CBSS",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENT_ID_CB",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENT_ID_CB",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENT_ID_ENCOURA",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENT_ID_ENCOURA",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENT_ID_NRCCUA",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENT_ID_NRCCUA",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENT_ID_OTHER",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENT_ID_OTHER",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENTID",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENTID",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENTID_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENTID_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENTID_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENTID_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENTID_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENTID_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENTID_TYPE_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENTID_TYPE_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENTID_TYPE_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENTID_TYPE_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STUDENTID_TYPE_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "STUDENTID_TYPE_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SUBINST_CD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SUBINST_CD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SUFFIX",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SUFFIX",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TRAD",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "TRAD",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_04",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_04",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_05",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_05",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_06",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_06",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_07",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_07",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_08",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_08",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_09",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_09",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_10",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_10",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_DES_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_DES_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_DES_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_DES_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_DES_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_DES_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_DES_04",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_DES_04",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_DES_05",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_DES_05",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_DES_06",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_DES_06",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_DES_07",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_DES_07",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_DES_08",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_DES_08",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_DES_09",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_DES_09",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_D_DES_10",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_D_DES_10",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_04",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_04",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_05",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_05",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_06",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_06",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_07",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_07",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_08",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_08",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_09",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_09",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_10",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_10",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_DES_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_DES_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_DES_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_DES_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_DES_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_DES_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_DES_04",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_DES_04",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_DES_05",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_DES_05",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_DES_06",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_DES_06",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_DES_07",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_DES_07",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_DES_08",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_DES_08",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_DES_09",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_DES_09",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_N_DES_10",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_N_DES_10",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_04",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_04",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_05",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_05",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_06",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_06",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_07",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_07",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_08",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_08",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_09",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_09",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_10",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_10",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_11",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_11",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_12",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_12",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_13",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_13",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_14",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_14",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_15",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_15",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_16",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_16",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_17",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_17",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_18",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_18",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_19",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_19",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_20",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_20",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_21",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_21",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_22",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_22",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_23",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_23",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_24",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_24",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_25",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_25",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_26",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_26",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_27",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_27",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_28",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_28",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_29",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_29",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_30",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_30",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_31",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_31",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_32",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_32",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_33",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_33",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_34",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_34",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_35",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_35",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_36",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_36",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_37",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_37",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_38",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_38",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_39",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_39",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_40",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_40",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_01",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_01",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_02",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_02",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_03",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_03",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_04",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_04",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_05",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_05",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_06",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_06",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_07",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_07",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_08",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_08",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_09",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_09",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_10",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_10",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_11",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_11",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_12",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_12",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_13",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_13",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_14",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_14",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_15",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_15",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_16",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_16",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_17",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_17",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_18",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_18",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_19",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_19",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_20",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_20",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_21",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_21",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_22",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_22",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_23",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_23",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_24",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_24",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_25",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_25",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_26",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_26",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_27",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_27",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_28",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_28",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_29",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_29",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_30",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_30",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_31",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_31",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_32",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_32",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_33",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_33",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_34",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_34",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_35",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_35",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_36",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_36",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_37",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_37",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_38",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_38",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_39",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_39",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "USERDEF_T_DES_40",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "USERDEF_T_DES_40",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "VENDOR",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "VENDOR",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "WHITE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "WHITE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ZIP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ZIP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ZIP_4",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ZIP_4",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INQ_SCORE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INQ_SCORE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INQ_SCORE_BIN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INQ_SCORE_BIN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INQ_SCORE_DATE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INQ_SCORE_DATE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PRO_SCORE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PRO_SCORE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PRO_SCORE_BIN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PRO_SCORE_BIN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PRO_SCORE_DATE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PRO_SCORE_DATE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "APP_SCORE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "APP_SCORE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "APP_SCORE_BIN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "APP_SCORE_BIN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "APP_SCORE_DATE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "APP_SCORE_DATE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ADM_SCORE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ADM_SCORE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ADM_SCORE_BIN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ADM_SCORE_BIN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ADM_SCORE_DATE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ADM_SCORE_DATE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DISTANCE_CAMPUS",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DISTANCE_CAMPUS",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PER_LIFE_GROUP",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PER_LIFE_GROUP",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PER_CLUSTER",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PER_CLUSTER",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "HOUSE_INCOME",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "HOUSE_INCOME",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AVG_HOUSE_INC",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "AVG_HOUSE_INC",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SM_MARKET",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SM_MARKET",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SM_MARKET_TIER",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SM_MARKET_TIER",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SM_RANK",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SM_RANK",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SM_SCORE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SM_SCORE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AFP_ACADEMIC",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "AFP_ACADEMIC",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AFP_CATEGORY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "AFP_CATEGORY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AFP_ZONE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "AFP_ZONE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "STATUS_STG",
                                                                    "type": "Int32"
                                                                },
                                                                "sink": {
                                                                    "name": "STATUS_STG",
                                                                    "type": "Int32"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FILENAME_SOURCE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FILENAME_SOURCE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACCOUNTID",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACCOUNTID",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACCOUNTNAME",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACCOUNTNAME",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MUID",
                                                                    "type": "Guid"
                                                                },
                                                                "sink": {
                                                                    "name": "MUID",
                                                                    "type": "Guid"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INT_AUDIT_ID",
                                                                    "type": "Int32"
                                                                },
                                                                "sink": {
                                                                    "name": "INT_AUDIT_ID",
                                                                    "type": "Int32"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Status_DW",
                                                                    "type": "Int32"
                                                                },
                                                                "sink": {
                                                                    "name": "Status_DW",
                                                                    "type": "Int32"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "COUNSELOR_EMAIL",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "COUNSELOR_EMAIL",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_WAIT",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_WAIT",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_DENY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_DENY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_DEFER",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_DEFER",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_WAIT",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_WAIT",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_DENY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_DENY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_DEFER",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_DEFER",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EMAIL_ALLOW",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "EMAIL_ALLOW",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CA_VISIT_TYPE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CA_VISIT_TYPE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SMS_ALLOW",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SMS_ALLOW",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RECORD_IMPORT_SOURCE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "RECORD_IMPORT_SOURCE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EARLY_ADM",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "EARLY_ADM",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_INSTATE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_INSTATE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RESIDENCE_HALL",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "RESIDENCE_HALL",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_ATHLETE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_ATHLETE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FLAG_PELL_ELIGIBLE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FLAG_PELL_ELIGIBLE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DATE_PACKAGED",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DATE_PACKAGED",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CAMPUS_LOC",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CAMPUS_LOC",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LATITUDE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "LATITUDE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LONGITUDE",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "LONGITUDE",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PE_FLAG",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PE_FLAG",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MD_FLAG",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MD_FLAG",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DIA_FLAG",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DIA_FLAG",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ALIGNMENT_FLAG",
                                                                    "type": "Boolean"
                                                                },
                                                                "sink": {
                                                                    "name": "ALIGNMENT_FLAG",
                                                                    "type": "Boolean"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INSERT_DATETIME",
                                                                    "type": "DateTime"
                                                                },
                                                                "sink": {
                                                                    "name": "INSERT_DATETIME",
                                                                    "type": "DateTime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INSERT_BY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INSERT_BY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MODIFIED_DATETIME",
                                                                    "type": "DateTime"
                                                                },
                                                                "sink": {
                                                                    "name": "MODIFIED_DATETIME",
                                                                    "type": "DateTime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MODIFIED_BY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MODIFIED_BY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SOURCE_KEY",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SOURCE_KEY",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SOURCE_KEY_COLUMN",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SOURCE_KEY_COLUMN",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SOURCE_TABLE_NAME",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SOURCE_TABLE_NAME",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MODIFIED_FILENAME",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MODIFIED_FILENAME",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ACCOUNT_ID",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ACCOUNT_ID",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CRM_FLAG",
                                                                    "type": "Boolean"
                                                                },
                                                                "sink": {
                                                                    "name": "CRM_FLAG",
                                                                    "type": "Boolean"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_azure_sql",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "em_historical_data_all",
                                                            "schemaname": "staging",
                                                            "az_server_name": {
                                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                                "type": "Expression"
                                                            },
                                                            "az_sql_db": {
                                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_azuresynapse",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "em_historical_data_all",
                                                            "schemaname": "fplus",
                                                            "az_synapse_crm_server": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                                "type": "Expression"
                                                            },
                                                            "az_synapse_crm_db": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "xrefcombi",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "copy_historical_table",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "select distinct a.unique_id,b.contact_id \nfrom [staging].[em_historical_data_all] (nolock) a\ninner join  [alignment].[contact_ref_historical] (nolock) b\non a.unique_id = b.historical_source_key\nwhere b.response_id='@{item().po_responseid}'\nand a.crm_flag=1 and a.rejected_row=0 and b.run_count= (Select max(run_count) \nfrom [alignment].[contact_ref_historical] nolock where response_id='@{item().po_responseid}')",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "preCopyScript": "truncate table fplus.xrefcombi",
                                                        "allowCopyCommand": true,
                                                        "copyCommandSettings": {},
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": true,
                                                    "stagingSettings": {
                                                        "linkedServiceName": {
                                                            "referenceName": "ls_Azuredatalakegen2",
                                                            "type": "LinkedServiceReference",
                                                            "parameters": {
                                                                "storageaccountname": {
                                                                    "value": "@pipeline().parameters.storageaccountname",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        },
                                                        "path": "datalanding/fplus/xrefcombi"
                                                    },
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "unique_id",
                                                                    "type": "Guid"
                                                                },
                                                                "sink": {
                                                                    "name": "Id",
                                                                    "type": "Guid"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "contact_id",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ContactID",
                                                                    "type": "Guid"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_azure_sql",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "em_historical_data_all",
                                                            "schemaname": "staging",
                                                            "az_server_name": {
                                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                                "type": "Expression"
                                                            },
                                                            "az_sql_db": {
                                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_azuresynapse",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "xrefcombi",
                                                            "schemaname": "fplus",
                                                            "az_synapse_crm_server": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                                "type": "Expression"
                                                            },
                                                            "az_synapse_crm_db": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Truncate Stg",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Axiom Field Updates",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlDWSource",
                                                        "sqlReaderQuery": {
                                                            "value": "truncate table  [fplus].[fqt_order_student_stg];\nselect 'table  [fplus].[fqt_order_student_stg] truncated'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_fplus_azuresynapse",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "fqt_order_student_stg",
                                                            "schemaname": "fplus",
                                                            "az_synapse_crm_server": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                                "type": "Expression"
                                                            },
                                                            "az_synapse_crm_db": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "firstRowOnly": false
                                                }
                                            },
                                            {
                                                "name": "update order student staging",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "xrefcombi",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[sp_UpdateOrderStudentStgTable]",
                                                    "storedProcedureParameters": {
                                                        "Account_Name": {
                                                            "value": {
                                                                "value": "@activity('filename').output.value[0].ACCOUNT_NAME",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Modified_Filename": {
                                                            "value": {
                                                                "value": "@activity('filename').output.value[0].modified_filename",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Response_id": {
                                                            "value": {
                                                                "value": "@activity('filename').output.value[0].RESPONSEID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_synapse_crm_server": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_server",
                                                            "type": "Expression"
                                                        },
                                                        "az_synapse_crm_db": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_db",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Load Data into Raw",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "update order student staging",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[sp_LoadStudentraw]"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_synapse_crm_server": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_server",
                                                            "type": "Expression"
                                                        },
                                                        "az_synapse_crm_db": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_db",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Load data in org model",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Load Data into Raw",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[sp_loadDatainOrgModel]"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_synapse_crm_server": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_server",
                                                            "type": "Expression"
                                                        },
                                                        "az_synapse_crm_db": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_db",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Load Data into Customer Order",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Load data in org model",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[sp_LoadDataintoCustomerOrder]"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_synapse_crm_server": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_server",
                                                            "type": "Expression"
                                                        },
                                                        "az_synapse_crm_db": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_db",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Axiom Field Updates",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update CRM Order Status Flag",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dbo].[usp_UpdateAcxiomData]"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_synapse_crm_server": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_server",
                                                            "type": "Expression"
                                                        },
                                                        "az_synapse_crm_db": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_db",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Update CRM Order Status Flag",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Load Data into Customer Order",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlServerSource",
                                                        "additionalColumns": [
                                                            {
                                                                "name": "ownerid",
                                                                "value": "07B626B0-DAC8-E811-A96F-000D3A062608"
                                                            },
                                                            {
                                                                "name": "statecode",
                                                                "value": "0"
                                                            },
                                                            {
                                                                "name": "owneridtype",
                                                                "value": "8"
                                                            }
                                                        ],
                                                        "sqlReaderQuery": {
                                                            "value": "select top 1 acc.name as po_accountName,cstord.po_responseid,cstord.po_accountmodel,\nCASE\n    WHEN cststat.po_fqtcustomerorderstatusId = 'C0D9A877-69C3-EB11-A81A-000D3AF522D6' THEN 'D16830EE-8CC3-EB11-A81A-000D3AF522D6'\n    WHEN cststat.po_fqtcustomerorderstatusId= '5FD3E375-50AF-EB11-A9C6-000D3A062608' THEN '16B5057C-50AF-EB11-A9C6-000D3A062608'\nEND as newOrderStatus\n,cstord.po_fqtcustomerorderId\nfrom [dbo].[po_fqtcustomerorderBase] as cstord\nleft join dbo.[po_accountmodelBase] as accmod\non cstord.[po_accountmodel] = accmod.[po_accountmodelId]\njoin  [dbo].[AccountBase] as acc\non cstord.[po_account] = acc.AccountId\nleft join  [dbo].[po_fqtcustomerorderstatusBase] as cststat\non cstord.po_orderstatus=cststat.po_fqtcustomerorderstatusId\nleft join [dbo].[po_scoringmodelBase] as scmod\non accmod.po_modeltype = scmod.[po_scoringmodelId]\nwhere ((cststat.[po_name] = 'Received for Modeling' or \ncststat.[po_name] = 'Received for Scoring') and ( scmod.po_name = 'Inquiry'))\nand cstord.po_responseid = '@{item().po_responseid}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "SqlServerSink",
                                                        "writeBehavior": "upsert",
                                                        "upsertSettings": {
                                                            "useTempDB": false,
                                                            "keys": [
                                                                "po_fqtcustomerorderId"
                                                            ],
                                                            "interimSchemaName": ""
                                                        },
                                                        "sqlWriterUseTableLock": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "po_fqtcustomerorderId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "po_fqtcustomerorderId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "newOrderStatus",
                                                                    "type": "String",
                                                                    "physicalType": "varchar"
                                                                },
                                                                "sink": {
                                                                    "name": "po_orderstatus",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ownerid"
                                                                },
                                                                "sink": {
                                                                    "name": "OwnerId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "owneridtype"
                                                                },
                                                                "sink": {
                                                                    "name": "OwnerIdType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "statecode"
                                                                },
                                                                "sink": {
                                                                    "name": "statecode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_appboost_crm",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "crm_schema": "dbo",
                                                            "crm_table": "po_fqtcustomerorderBase",
                                                            "crm_servername": {
                                                                "value": "@pipeline().parameters.crm_servername",
                                                                "type": "Expression"
                                                            },
                                                            "crm_dbname": {
                                                                "value": "@pipeline().parameters.crm_dbname",
                                                                "type": "Expression"
                                                            },
                                                            "crm_username": {
                                                                "value": "@pipeline().parameters.crm_username",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_appboost_crm",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "crm_schema": "dbo",
                                                            "crm_table": "po_fqtcustomerorderBase",
                                                            "crm_servername": {
                                                                "value": "@pipeline().parameters.crm_servername",
                                                                "type": "Expression"
                                                            },
                                                            "crm_dbname": {
                                                                "value": "@pipeline().parameters.crm_dbname",
                                                                "type": "Expression"
                                                            },
                                                            "crm_username": {
                                                                "value": "@pipeline().parameters.crm_username",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "filename",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "check if record is present in file metadata",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "select [account_name] as ACCOUNT_NAME,convert(nvarchar(50), [response_id]) as RESPONSEID,[modified_filename]\nfrom [audit].[file_metadata] WITH (NOLOCK) \nWHERE [account_name]='@{item().po_accountName}'\nand response_id='@{item().po_responseid}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": {
                                                    "value": "@pipeline().parameters.tablename",
                                                    "type": "Expression"
                                                },
                                                "schemaname": {
                                                    "value": "@pipeline().parameters.schemaname",
                                                    "type": "Expression"
                                                },
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_sql_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_sql_db_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Check count in Historical",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "filename",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "select COUNT(1) as histcount\n from [staging].[em_historical_data_all]\n WITH (NOLOCK) \nwhere [MODIFIED_FILENAME]= '@{activity('filename').output.value[0].modified_filename}'\nAND crm_flag =1 and rejected_row =0",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": {
                                                    "value": "@pipeline().parameters.tablename",
                                                    "type": "Expression"
                                                },
                                                "schemaname": {
                                                    "value": "@pipeline().parameters.schemaname",
                                                    "type": "Expression"
                                                },
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.az_sql_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.az_sql_db_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Inquiry Responseid from CRM",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-flag-fplus-inquiry-files",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "schemaname": {
                        "type": "string",
                        "defaultValue": "audit"
                    },
                    "tablename": {
                        "type": "string",
                        "defaultValue": "file_metadata"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.26.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAPQA_MSCRM"
                    },
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    }
                },
                "variables": {
                    "vMetadata": {
                        "type": "Array"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-14T08:43:31Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_fplus_dqlookup_admit')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "F+ DQ validation for Admit model ",
                "activities": [
                    {
                        "name": "get_data_studentraw",
                        "description": "Get fqt order id for order status 'Received For Scoring' and MODELTYPE = 'Admit'",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "select distinct top 5  sf.fqtorderid fqtorderid,om.accountid accountid,om.accountname accountname,co.filenamesource filenamesource,SF.modeltype modeltype from [fplus].[Student_Raw] sf\nleft join fplus.customerorder co on sf.fqtorderid = co.fqtorderid\nleft join fplus.OrgModel om on om.fqtorgmodelid = co.fqtorgmodelid\nleft join fplus.CustomerOrderStatus cost on co.orderstatusid =cost.orderstatusid\nwhere co.fqtorderid is not null and cost.orderstatusdesc ='Received For Scoring' and sf.MODELTYPE = 'Admit'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "em_historical_data_all",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "process_dqlookup",
                        "description": "DQ flag update and correction for student records fetched with the given fqt order id",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_data_studentraw",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_data_studentraw').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "dq_flag_update",
                                    "description": "DQ Flag update",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "file_audit_fplus_start",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip_fplus_dq_flag_update",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "accountname": {
                                                "value": "@item().accountname",
                                                "type": "Expression"
                                            },
                                            "fqtorderid": {
                                                "value": "@item().fqtorderid",
                                                "type": "Expression"
                                            },
                                            "modeltype": {
                                                "value": "@pipeline().parameters.modeltype",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "dq_data_correction",
                                    "description": "DQ Data correction",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_flag_update",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip_flplus_dq_correction",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "fqtorderid": {
                                                "value": "@item().fqtorderid",
                                                "type": "Expression"
                                            },
                                            "accountname": {
                                                "value": "@item().accountname",
                                                "type": "Expression"
                                            },
                                            "modeltype": {
                                                "value": "@pipeline().parameters.modeltype",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_quarantine",
                                    "description": "File on hold with given order id is having all DQ_QUARANTINED_FLAG set to 'Y'",
                                    "type": "Script",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_data_correction",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@item().fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "WITH CTE_1 AS\n(\nselect DQ_QUARANTINED_FLAG,COUNT(DQ_QUARANTINED_FLAG) as b\nfrom fplus.student_raw (NOLOCK)\nwhere FQTORDERID = @fqtorderid\ngroup by DQ_QUARANTINED_FLAG\n)\nUpdate [fplus].[CustomerOrder] \nSET OrderStatusID ='On Hold All Data Quarentined'\nwhere  fqtorderid = @fqtorderid\nand (select COUNT(1) from fplus.student_raw where FQTORDERID = @fqtorderid ) = \n(select b from CTE_1 where DQ_QUARANTINED_FLAG = 'Y') ",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_start",
                                    "description": "File audit for F+ DQ start",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "204",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Started",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_dq_flag_fail",
                                    "description": "DQE for F+ Failure while updating DQ flags",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_flag_update",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "205",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Failed",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_dq_correction_fail",
                                    "description": "DQE for FQT Failure while data correction",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_data_correction",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "205",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Failed",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_complete",
                                    "description": "File audit for FQT DQ Complete",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "file_quarantine",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "206",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Completed",
                                            "status": "Completed",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string",
                        "defaultValue": "Admit"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-14T09:29:49Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_fplus_dqlookup_applicant')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "F+ DQ validation for Applicant model ",
                "activities": [
                    {
                        "name": "get_data_studentraw",
                        "description": "Get fqt order id for order status 'Received For Scoring' and MODELTYPE = 'Applicant'",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "select distinct top 5  sf.fqtorderid fqtorderid,om.accountid accountid,om.accountname accountname,co.filenamesource filenamesource,SF.modeltype modeltype from [fplus].[Student_Raw] sf\nleft join fplus.customerorder co on sf.fqtorderid = co.fqtorderid\nleft join fplus.OrgModel om on om.fqtorgmodelid = co.fqtorgmodelid\nleft join fplus.CustomerOrderStatus cost on co.orderstatusid =cost.orderstatusid\nwhere co.fqtorderid is not null and cost.orderstatusdesc ='Received For Scoring' and sf.MODELTYPE = 'Applicant'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Student_Raw",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "process_dqlookup",
                        "description": "DQ flag update and correction for student records fetched with the given fqt order id",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_data_studentraw",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_data_studentraw').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "dq_flag_update",
                                    "description": "DQ Flag update",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "file_audit_fplus_start",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip_fplus_dq_flag_update",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "accountname": {
                                                "value": "@item().accountname",
                                                "type": "Expression"
                                            },
                                            "fqtorderid": {
                                                "value": "@item().fqtorderid",
                                                "type": "Expression"
                                            },
                                            "modeltype": {
                                                "value": "@pipeline().parameters.modeltype",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "dq_data_correction",
                                    "description": "DQ Data correction",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_flag_update",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip_flplus_dq_correction",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "fqtorderid": {
                                                "value": "@item().fqtorderid",
                                                "type": "Expression"
                                            },
                                            "accountname": {
                                                "value": "@item().accountname",
                                                "type": "Expression"
                                            },
                                            "modeltype": {
                                                "value": "@pipeline().parameters.modeltype",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_quarantine",
                                    "description": "File on hold with given order id is having all DQ_QUARANTINED_FLAG set to 'Y'",
                                    "type": "Script",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_data_correction",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@item().fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "WITH CTE_1 AS\n(\nselect DQ_QUARANTINED_FLAG,COUNT(DQ_QUARANTINED_FLAG) as b\nfrom fplus.student_raw (NOLOCK)\nwhere FQTORDERID = @fqtorderid\ngroup by DQ_QUARANTINED_FLAG\n)\nUpdate [fplus].[CustomerOrder] \nSET OrderStatusID ='On Hold All Data Quarentined'\nwhere  fqtorderid = @fqtorderid\nand (select COUNT(1) from fplus.student_raw where FQTORDERID = @fqtorderid ) = \n(select b from CTE_1 where DQ_QUARANTINED_FLAG = 'Y') ",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_start",
                                    "description": "File audit for F+ DQ start",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "204",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Started",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_dq_flag_fail",
                                    "description": "DQE for F+ Failure while updating DQ flags",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_flag_update",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "205",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Failed",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_dq_correction_fail",
                                    "description": "DQE for FQT Failure while data correction",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_data_correction",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "205",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Failed",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_complete",
                                    "description": "File audit for FQT DQ Complete",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "file_quarantine",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "206",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Completed",
                                            "status": "Completed",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string",
                        "defaultValue": "Applicant"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-14T09:29:49Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_fplus_dqlookup_inquiry')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "F+ DQ validation for Inquiry model ",
                "activities": [
                    {
                        "name": "get_data_studentraw",
                        "description": "Get fqt order id for order status 'Received For Scoring' and MODELTYPE = 'Inquiry'",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "select distinct sf.fqtorderid fqtorderid,om.accountid accountid,om.accountname accountname,co.filenamesource filenamesource,SF.modeltype modeltype from [fplus].[Student_Raw] sf\nleft join fplus.customerorder co on sf.fqtorderid = co.fqtorderid\nleft join fplus.OrgModel om on om.fqtorgmodelid = co.fqtorgmodelid\nleft join fplus.CustomerOrderStatus cost on co.orderstatusid =cost.orderstatusid\nwhere co.fqtorderid is not null and cost.orderstatusdesc ='Received For Scoring' and sf.MODELTYPE = 'Inquiry'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Student_Raw",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "process_dqlookup",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_data_studentraw",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_data_studentraw').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "dq_flag_update",
                                    "description": "DQ Flag update",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "file_audit_fplus_start",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip_fplus_dq_flag_update",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "accountname": {
                                                "value": "@item().accountname",
                                                "type": "Expression"
                                            },
                                            "fqtorderid": {
                                                "value": "@item().fqtorderid",
                                                "type": "Expression"
                                            },
                                            "modeltype": {
                                                "value": "@pipeline().parameters.modeltype",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "dq_data_correction",
                                    "description": "DQ Data correction",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_flag_update",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip_flplus_dq_correction",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "fqtorderid": {
                                                "value": "@item().fqtorderid",
                                                "type": "Expression"
                                            },
                                            "accountname": {
                                                "value": "@item().accountname",
                                                "type": "Expression"
                                            },
                                            "modeltype": {
                                                "value": "@pipeline().parameters.modeltype",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_quarantine",
                                    "description": "File on hold with given order id is having all DQ_QUARANTINED_FLAG set to 'Y'",
                                    "type": "Script",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_data_correction",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@item().fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "WITH CTE_1 AS\n(\nselect DQ_QUARANTINED_FLAG,COUNT(DQ_QUARANTINED_FLAG) as b\nfrom fplus.student_raw (NOLOCK)\nwhere FQTORDERID = @fqtorderid\ngroup by DQ_QUARANTINED_FLAG\n)\nUpdate [fplus].[CustomerOrder] \nSET OrderStatusID ='On Hold All Data Quarentined'\nwhere  fqtorderid = @fqtorderid\nand (select COUNT(1) from fplus.student_raw where FQTORDERID = @fqtorderid ) = \n(select b from CTE_1 where DQ_QUARANTINED_FLAG = 'Y') ",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_start",
                                    "description": "File audit for F+ DQ start",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "204",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Started",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_dq_flag_fail",
                                    "description": "DQE for F+ Failure while updating DQ flags",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_flag_update",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "205",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Failed",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_dq_correction_fail",
                                    "description": "DQE for FQT Failure while data correction",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_data_correction",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "205",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Failed",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_complete",
                                    "description": "File audit for FQT DQ Complete",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "file_quarantine",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "206",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Completed",
                                            "status": "Completed",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string",
                        "defaultValue": "Inquiry"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-14T09:29:49Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_fplus_dqlookup_prospect')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "F+ DQ validation for Prospect model ",
                "activities": [
                    {
                        "name": "get_data_studentraw",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "select distinct top 5  sf.fqtorderid fqtorderid,om.accountid accountid,om.accountname accountname,co.filenamesource filenamesource,SF.modeltype modeltype from [fplus].[Student_Raw] sf\nleft join fplus.customerorder co on sf.fqtorderid = co.fqtorderid\nleft join fplus.OrgModel om on om.fqtorgmodelid = co.fqtorgmodelid\nleft join fplus.CustomerOrderStatus cost on co.orderstatusid =cost.orderstatusid\nwhere co.fqtorderid is not null and cost.orderstatusdesc ='Received For Scoring' and sf.MODELTYPE = 'Prospect'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Student_Raw",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "process_dqlookup",
                        "description": "DQ flag update and correction for student records fetched with the given fqt order id",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_data_studentraw",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_data_studentraw').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "dq_flag_update",
                                    "description": "DQ Flag update",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "file_audit_fplus_start",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip_fplus_dq_flag_update",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "accountname": {
                                                "value": "@item().accountname",
                                                "type": "Expression"
                                            },
                                            "fqtorderid": {
                                                "value": "@item().fqtorderid",
                                                "type": "Expression"
                                            },
                                            "modeltype": {
                                                "value": "@pipeline().parameters.modeltype",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "dq_data_correction",
                                    "description": "DQ Data correction",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_flag_update",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip_flplus_dq_correction",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "fqtorderid": {
                                                "value": "@item().fqtorderid",
                                                "type": "Expression"
                                            },
                                            "accountname": {
                                                "value": "@item().accountname",
                                                "type": "Expression"
                                            },
                                            "modeltype": {
                                                "value": "@pipeline().parameters.modeltype",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_quarantine",
                                    "description": "File on hold with given order id is having all DQ_QUARANTINED_FLAG set to 'Y'",
                                    "type": "Script",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_data_correction",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "parameters": [
                                                    {
                                                        "name": "fqtorderid",
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@item().fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "direction": "Input"
                                                    }
                                                ],
                                                "type": "Query",
                                                "text": {
                                                    "value": "WITH CTE_1 AS\n(\nselect DQ_QUARANTINED_FLAG,COUNT(DQ_QUARANTINED_FLAG) as b\nfrom fplus.student_raw (NOLOCK)\nwhere FQTORDERID = @fqtorderid\ngroup by DQ_QUARANTINED_FLAG\n)\nUpdate [fplus].[CustomerOrder] \nSET OrderStatusID ='On Hold All Data Quarentined'\nwhere  fqtorderid = @fqtorderid\nand (select COUNT(1) from fplus.student_raw where FQTORDERID = @fqtorderid ) = \n(select b from CTE_1 where DQ_QUARANTINED_FLAG = 'Y') ",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_start",
                                    "description": "File audit for F+ DQ start",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "204",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Started",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_dq_flag_fail",
                                    "description": "DQE for F+ Failure while updating DQ flags",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_flag_update",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "205",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Failed",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_dq_correction_fail",
                                    "description": "DQE for FQT Failure while data correction",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "dq_data_correction",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "205",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Failed",
                                            "status": "Started",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audit_fplus_complete",
                                    "description": "File audit for FQT DQ Complete",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "file_quarantine",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "206",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "FQT DQE Completed",
                                            "status": "Completed",
                                            "row_count": "0",
                                            "rejected_row": "0",
                                            "server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "modeltype": {
                        "type": "string",
                        "defaultValue": "Prospect"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-14T09:29:49Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_fplus_generate_xml_files')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_orderid_details_for_extract",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT distinct co.[FqtOrderID] fqtorderid,co.[FqtOrgModelId] fqtorgmodelid,co.[OrderStatusID] orderstatusid\n,co.[FileNameSource] filenamesource,om.ModelType modeltype,co.responseid responseid\n,isnull(om.SubGroup,'No sub group')SubGroup,om.EntryTerm entryterm\n,om.ModelStatus modelstatus,om.AcademicYear academicyear,om.modelNumber modelnumber,co.uploadDetailId uploaddetailid\nFROM [fplus].[CustomerOrder] co\nleft join [fplus].[OrgModel] om on om.FqtOrgModelId = co.FqtOrgModelId\ninner join [fplus].[CustomerOrderStatus] cs on cs.[OrderStatusID] = co.[OrderStatusID] \nwhere cs.OrderStatusDesc = 'Received For Scoring' and om.modelNumber is not null and co.uploadDetailId is not null",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "CustomerOrder",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "foreach_fqtorderid",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "truncate_fqtxmldata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_orderid_details_for_extract').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "usp_get_available_variables",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_getAvailableVariables]",
                                        "storedProcedureParameters": {
                                            "fqtorderID": {
                                                "value": {
                                                    "value": "@item().fqtorderid",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "xmlDataTxt": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "xmlMapTxt": {
                                                "value": "",
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_AppboostCrmSqlDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "crm_servername": {
                                                "value": "@pipeline().parameters.crm_servername",
                                                "type": "Expression"
                                            },
                                            "crm_dbname": {
                                                "value": "@pipeline().parameters.crm_dbname",
                                                "type": "Expression"
                                            },
                                            "crm_username": {
                                                "value": "@pipeline().parameters.crm_username",
                                                "type": "Expression"
                                            },
                                            "vaulturl": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "get_xmldata_query",
                                    "type": "Script",
                                    "dependsOn": [
                                        {
                                            "activity": "usp_get_available_variables",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AppboostCrmSqlDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "crm_servername": {
                                                "value": "@pipeline().parameters.crm_servername",
                                                "type": "Expression"
                                            },
                                            "crm_dbname": {
                                                "value": "@pipeline().parameters.crm_dbname",
                                                "type": "Expression"
                                            },
                                            "crm_username": {
                                                "value": "@pipeline().parameters.crm_username",
                                                "type": "Expression"
                                            },
                                            "vaulturl": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "type": "Query",
                                                "text": {
                                                    "value": "select xmldata,xmlmap from dbo.FQTXMLData where xmldata is not null and\nFqtOrderID = '@{item().FqtOrderID}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "get_xmldata_query",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@not(equals(string(activity('get_xmldata_query').output.resultSetCount),'0'))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "xmlquery_empty",
                                                "type": "Fail",
                                                "dependsOn": [
                                                    {
                                                        "activity": "file_audit_fplus_xml_fail_1",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "message": "Xmlquery did not result any value",
                                                    "errorCode": "40"
                                                }
                                            },
                                            {
                                                "name": "file_audit_fplus_xml_fail_1",
                                                "description": "File audit for F+ xml fail",
                                                "type": "DatabricksNotebook",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                                    "baseParameters": {
                                                        "audit_id": "204",
                                                        "adf_run_id": {
                                                            "value": "@pipeline().RunId",
                                                            "type": "Expression"
                                                        },
                                                        "file_processing_stage": "Fplus xml - Fail",
                                                        "status": "Failed",
                                                        "row_count": "0",
                                                        "rejected_row": "0",
                                                        "server_name": {
                                                            "value": "@pipeline().parameters.az_sql_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "database_name": {
                                                            "value": "@pipeline().parameters.az_sql_db_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_NDPdatabricks",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "databricks_workspace_url": {
                                                            "value": "@pipeline().parameters.databricks_workspace_url",
                                                            "type": "Expression"
                                                        },
                                                        "databricks_clusterid": {
                                                            "value": "@pipeline().parameters.databricks_clusterid",
                                                            "type": "Expression"
                                                        },
                                                        "vault_url": {
                                                            "value": "@pipeline().parameters.vault_url",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "xml_data_file",
                                                "type": "DatabricksNotebook",
                                                "dependsOn": [
                                                    {
                                                        "activity": "xmldata",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "notebookPath": "/fplus_Xmldata_file/xml_file",
                                                    "baseParameters": {
                                                        "Folder": {
                                                            "value": "@concat('SoftScore/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                            "type": "Expression"
                                                        },
                                                        "adlsName": {
                                                            "value": "@pipeline().parameters.adlsName",
                                                            "type": "Expression"
                                                        },
                                                        "applicationId": "ServicePrincipalApplicationID",
                                                        "containerName": {
                                                            "value": "@pipeline().parameters.synapse_container",
                                                            "type": "Expression"
                                                        },
                                                        "fqtorderid": {
                                                            "value": "@item().fqtorderid",
                                                            "type": "Expression"
                                                        },
                                                        "mountPath": "/mnt/prodcrmsynapse",
                                                        "secretId": "ServicePrincipalApplicationSecretValue",
                                                        "tenantId": "tenantID",
                                                        "xmlquery": {
                                                            "value": "@variables('xmldata')",
                                                            "type": "Expression"
                                                        },
                                                        "jdbc_url": {
                                                            "value": "jdbc:sqlserver://rnlndpprodcrmsynapse.sql.azuresynapse.net:1433",
                                                            "type": "Expression"
                                                        },
                                                        "xmldatafilename": {
                                                            "value": "@concat(item().uploaddetailid,'_XMLData.xml')",
                                                            "type": "Expression"
                                                        },
                                                        "database_name": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_db",
                                                            "type": "Expression"
                                                        },
                                                        "softscore_dir": "SoftScore"
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_NDPdatabricks",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "databricks_workspace_url": {
                                                            "value": "@pipeline().parameters.databricks_workspace_url",
                                                            "type": "Expression"
                                                        },
                                                        "databricks_clusterid": {
                                                            "value": "@pipeline().parameters.databricks_clusterid",
                                                            "type": "Expression"
                                                        },
                                                        "vault_url": {
                                                            "value": "@pipeline().parameters.vault_url",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "xmldata",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "file_audit_fplus_xml_start",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "xmldata",
                                                    "value": {
                                                        "value": "@concat(string(activity('get_xmldata_query').output.resultsets[0].rows[0].xmldata), ' and fqtorderid =','''',item().fqtorderid,'''')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "file_audit_fplus_xml_start",
                                                "description": "File audit for F+ xml start",
                                                "type": "DatabricksNotebook",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                                    "baseParameters": {
                                                        "audit_id": "204",
                                                        "adf_run_id": {
                                                            "value": "@pipeline().RunId",
                                                            "type": "Expression"
                                                        },
                                                        "file_processing_stage": "Fplus xml - Started",
                                                        "status": "Started",
                                                        "row_count": "0",
                                                        "rejected_row": "0",
                                                        "server_name": {
                                                            "value": "@pipeline().parameters.az_sql_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "database_name": {
                                                            "value": "@pipeline().parameters.az_sql_db_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_NDPdatabricks",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "databricks_workspace_url": {
                                                            "value": "@pipeline().parameters.databricks_workspace_url",
                                                            "type": "Expression"
                                                        },
                                                        "databricks_clusterid": {
                                                            "value": "@pipeline().parameters.databricks_clusterid",
                                                            "type": "Expression"
                                                        },
                                                        "vault_url": {
                                                            "value": "@pipeline().parameters.vault_url",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "xml_map_file",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "xml_map_file_azml",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlServerSource",
                                                        "sqlReaderQuery": {
                                                            "value": "select xmlmap from dbo.FQTXMLData where xmldata is not null and\nFqtOrderID = '@{item().FqtOrderID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_appboost_crm",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "crm_schema": "dbo",
                                                            "crm_table": "FQTxmldata",
                                                            "crm_servername": {
                                                                "value": "@pipeline().parameters.crm_servername",
                                                                "type": "Expression"
                                                            },
                                                            "crm_dbname": {
                                                                "value": "@pipeline().parameters.crm_dbname",
                                                                "type": "Expression"
                                                            },
                                                            "crm_username": {
                                                                "value": "@pipeline().parameters.crm_username",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_xmlmap",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "container": {
                                                                "value": "@pipeline().parameters.synapse_container",
                                                                "type": "Expression"
                                                            },
                                                            "filepath": {
                                                                "value": "@concat('SoftScore/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().uploaddetailid,'_XMLMap.xml')",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.adlsName",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "file_audit_fplus_xml_complete",
                                                "description": "File audit for F+ xml complete",
                                                "type": "DatabricksNotebook",
                                                "dependsOn": [
                                                    {
                                                        "activity": "xml_map_file",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                                    "baseParameters": {
                                                        "audit_id": "204",
                                                        "adf_run_id": {
                                                            "value": "@pipeline().RunId",
                                                            "type": "Expression"
                                                        },
                                                        "file_processing_stage": "Fplus xml - Complete",
                                                        "status": "Completed",
                                                        "row_count": "0",
                                                        "rejected_row": "0",
                                                        "server_name": {
                                                            "value": "@pipeline().parameters.az_sql_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "database_name": {
                                                            "value": "@pipeline().parameters.az_sql_db_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_NDPdatabricks",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "databricks_workspace_url": {
                                                            "value": "@pipeline().parameters.databricks_workspace_url",
                                                            "type": "Expression"
                                                        },
                                                        "databricks_clusterid": {
                                                            "value": "@pipeline().parameters.databricks_clusterid",
                                                            "type": "Expression"
                                                        },
                                                        "vault_url": {
                                                            "value": "@pipeline().parameters.vault_url",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "file_audit_fplus_xml_fail",
                                                "description": "File audit for F+ xml fail",
                                                "type": "DatabricksNotebook",
                                                "dependsOn": [
                                                    {
                                                        "activity": "update_customer_order_status",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                                    "baseParameters": {
                                                        "audit_id": "204",
                                                        "adf_run_id": {
                                                            "value": "@pipeline().RunId",
                                                            "type": "Expression"
                                                        },
                                                        "file_processing_stage": "Fplus xml - Started",
                                                        "status": "Started",
                                                        "row_count": "0",
                                                        "rejected_row": "0",
                                                        "server_name": {
                                                            "value": "@pipeline().parameters.az_sql_server_name",
                                                            "type": "Expression"
                                                        },
                                                        "database_name": {
                                                            "value": "@pipeline().parameters.az_sql_db_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_NDPdatabricks",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "databricks_workspace_url": {
                                                            "value": "@pipeline().parameters.databricks_workspace_url",
                                                            "type": "Expression"
                                                        },
                                                        "databricks_clusterid": {
                                                            "value": "@pipeline().parameters.databricks_clusterid",
                                                            "type": "Expression"
                                                        },
                                                        "vault_url": {
                                                            "value": "@pipeline().parameters.vault_url",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "update_customer_order_status",
                                                "description": "Sent for scoring",
                                                "type": "Script",
                                                "dependsOn": [
                                                    {
                                                        "activity": "xml_map_file",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_synapse_crm_server": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_server",
                                                            "type": "Expression"
                                                        },
                                                        "az_synapse_crm_db": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_db",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "typeProperties": {
                                                    "scripts": [
                                                        {
                                                            "type": "Query",
                                                            "text": {
                                                                "value": "update [fplus].[CustomerOrder] \nset OrderStatusID = (select orderstatusid from [fplus].[CustomerOrderStatus] \nwhere orderstatusdesc = 'Sent For Scoring') \nwhere fqtorderid = '@{item().fqtorderid}'",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "name": "fplus_xmldata_adls_sharepath",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "xml_data_file",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": false,
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "FileServerWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_fplus_xmlmap",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "container": {
                                                                "value": "@pipeline().parameters.synapse_container",
                                                                "type": "Expression"
                                                            },
                                                            "filepath": {
                                                                "value": "@concat('SoftScore/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().uploaddetailid,'_XMLData.xml')",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.adlsName",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_shared_folder",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "directory": {
                                                                "value": "@concat(item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().uploaddetailid,'_XMLData.xml')",
                                                                "type": "Expression"
                                                            },
                                                            "fplus_host": {
                                                                "value": "@pipeline().parameters.fplus_host",
                                                                "type": "Expression"
                                                            },
                                                            "fplus_username": {
                                                                "value": "@pipeline().parameters.fplus_username",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "pip_fplus_xmlmap_adls_sharepath",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "xml_map_file",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": false,
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "FileServerWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_fplus_xmlmap",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "container": {
                                                                "value": "@pipeline().parameters.synapse_container",
                                                                "type": "Expression"
                                                            },
                                                            "filepath": {
                                                                "value": "@concat('SoftScore/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().uploaddetailid,'_XMLMap.xml')",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.adlsName",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_shared_folder",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "directory": {
                                                                "value": "@concat(item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().uploaddetailid,'_XMLMap.xml')",
                                                                "type": "Expression"
                                                            },
                                                            "fplus_host": {
                                                                "value": "@pipeline().parameters.fplus_host",
                                                                "type": "Expression"
                                                            },
                                                            "fplus_username": {
                                                                "value": "@pipeline().parameters.fplus_username",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "z_scoring file creation",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "pip_fplus_xmlmap_adls_sharepath",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "@concat('SELECT ','''F:\\SoftScore\\',item().modelnumber,'\\',item().academicyear,'\\',item().modeltype,'\\',item().entryterm,\n'\\',item().SubGroup,'\\*',item().uploaddetailid,'''')",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "FileServerWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_azure_sql",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "file_metadata",
                                                            "schemaname": "audit",
                                                            "az_server_name": {
                                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                                "type": "Expression"
                                                            },
                                                            "az_sql_db": {
                                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_shared_folder",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "directory": {
                                                                "value": "z_Scoring\\Incoming",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().modelnumber,'.txt')",
                                                                "type": "Expression"
                                                            },
                                                            "fplus_host": {
                                                                "value": "@pipeline().parameters.fplus_host",
                                                                "type": "Expression"
                                                            },
                                                            "fplus_username": {
                                                                "value": "@pipeline().parameters.fplus_username",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "fplus_xmldata_adls_sharepath_azml",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "fplus_xmldata_adls_sharepath",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": false,
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_fplus_xmlmap",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "container": {
                                                                "value": "@pipeline().parameters.synapse_container",
                                                                "type": "Expression"
                                                            },
                                                            "filepath": {
                                                                "value": "@concat('SoftScore/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().uploaddetailid,'_XMLData.xml')",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.adlsName",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_xmlmap",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "container": "@pipeline().parameters.synapse_container",
                                                            "filepath": {
                                                                "value": "@concat('SoftScoreAZML/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().uploaddetailid,'_XMLData.xml')",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.adlsName",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "xml_map_file_azml",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "fplus_xmldata_adls_sharepath_azml",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlServerSource",
                                                        "sqlReaderQuery": {
                                                            "value": "select xmlmap from dbo.FQTXMLData where xmldata is not null and\nFqtOrderID = '@{item().FqtOrderID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_appboost_crm",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "crm_schema": "dbo",
                                                            "crm_table": "FQTxmldata",
                                                            "crm_servername": {
                                                                "value": "@pipeline().parameters.crm_servername",
                                                                "type": "Expression"
                                                            },
                                                            "crm_dbname": {
                                                                "value": "@pipeline().parameters.crm_dbname",
                                                                "type": "Expression"
                                                            },
                                                            "crm_username": {
                                                                "value": "@pipeline().parameters.crm_username",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_xmlmap",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "container": {
                                                                "value": "@pipeline().parameters.synapse_container",
                                                                "type": "Expression"
                                                            },
                                                            "filepath": {
                                                                "value": "@concat('SoftScoreAZML/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().uploaddetailid,'_XMLMap.xml')",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.adlsName",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "z_scoring file creation_azml",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "z_scoring file creation",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "@concat('SELECT ','''SoftScoreAZML/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup,'/*',item().uploaddetailid,'''')",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_azure_sql",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "file_metadata",
                                                            "schemaname": "audit",
                                                            "az_server_name": {
                                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                                "type": "Expression"
                                                            },
                                                            "az_sql_db": {
                                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_xmlmap",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "container": {
                                                                "value": "@pipeline().parameters.synapse_container",
                                                                "type": "Expression"
                                                            },
                                                            "filepath": {
                                                                "value": "@concat('SoftScoreAZML/z_scoring/incoming')",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().modelnumber,'.txt')",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.adlsName",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "copy_scoreslst_to_adls_azml",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "z_scoring file creation_azml",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "FileServerReadSettings",
                                                            "recursive": false,
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_fplus_shared_folder",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "directory": {
                                                                "value": "@concat(item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat('estscore.lst')",
                                                                "type": "Expression"
                                                            },
                                                            "fplus_host": {
                                                                "value": "@pipeline().parameters.fplus_host",
                                                                "type": "Expression"
                                                            },
                                                            "fplus_username": {
                                                                "value": "@pipeline().parameters.fplus_username",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_xmlmap",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "container": {
                                                                "value": "prodcrmsynapse",
                                                                "type": "Expression"
                                                            },
                                                            "filepath": {
                                                                "value": "@concat('SoftScoreAZML/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat('estscore.lst')",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "rnlndpproddls",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "truncate_fqtxmldata",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "get_orderid_details_for_extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AppboostCrmSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": {
                                        "value": "truncate table dbo.FQTXMLData",
                                        "type": "Expression"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "synapse_container": {
                        "type": "string",
                        "defaultValue": "prodcrmsynapse"
                    },
                    "adlsName": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.26.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAPQA_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "fplus_host": {
                        "type": "string",
                        "defaultValue": "\\\\10.3.30.67\\SoftScore"
                    },
                    "fplus_username": {
                        "type": "string",
                        "defaultValue": "RNLWINSASCOMP1\\svc_prod_fqt"
                    }
                },
                "variables": {
                    "xmldata": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "F+/Forward Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-15T08:29:21Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-data-enrichment-master')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Melissa Enrichment",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Delete - configEnrichment_Clean",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-em-melissa-addressenrichment",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "PacificEast Enrichment",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Melissa Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-em-pacificeast-enrichment",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Update enrichment status",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "Drop table if Exists #FilesEnriched\n\nSelect  distinct a.modified_fileName \n\t\tinto #FilesEnriched\n\t\tfrom alignment.customer_address_base a\n        join alignment.contactbase b\n        on a.modified_fileName = b.modified_fileName\n               where  b.CRM_FLAg = 2 and b.pe_flag not in ('DIA Review','DIA Approved')  \n\t\t\t\t\tAnd a.md_flag not in ('DIA Review','DIA Approved')\n\nUpdate A\n    Set  Enrichment = 1\n        ,DE_Status = 'Enriched'\n        ,insert_datetime = getdate()\n    From audit.ADS_Reference_Log A\n    join #FilesEnriched B\n    on A.modified_filename = b.modified_fileName\n    Where DE_Status <> 'Enriched'\n\nUpdate A \n    Set  dia_status = 'DE_Completed'\n        ,insert_datetime = getdate()\n    From audit.dia_manual A\n    join audit.ADS_Reference_Log b\n    on a.source_file_name = b.modified_filename\n    join #FilesEnriched c\n    on a.source_file_name = c.modified_filename\n    Where A.Process_Layer = 'Enrichment'\n    and B.DE_Status = 'Enriched'\n    and A.dia_status = 'DE_Started'\n\nSELECT 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "ADS_Reference_Log",
                                    "schemaname": "audit",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Start ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "501",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "END ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Update enrichment status",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Delete - configEnrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "502",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Delete - configEnrichment",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "PacificEast Enrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "PacificEast Enrichment_Parallel",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "Delete from config.Enrichment\n\nSelect 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Enrichment",
                                    "schemaname": "config",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "SP - Alignment History Sync MD",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Melissa Enrichment",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Update]",
                            "storedProcedureParameters": {
                                "Enrichment": {
                                    "value": "Melissa",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SP - Alignment History Sync PE",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "PacificEast Enrichment",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Update]",
                            "storedProcedureParameters": {
                                "Enrichment": {
                                    "value": "PacificEast",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "PacificEast Enrichment_Parallel",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Delete - configEnrichment_Clean",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-em-pacificeast-enrichment",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SP - Alignment History Sync PE Parallel",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "PacificEast Enrichment_Parallel",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_DE_Update]",
                            "storedProcedureParameters": {
                                "Enrichment": {
                                    "value": "PacificEast",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "az_sql_db": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Delete - configEnrichment_copy2",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "SP - Alignment History Sync PE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "SP - Alignment History Sync PE Parallel",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "Delete from config.Enrichment\n\nSelect 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Enrichment",
                                    "schemaname": "config",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Delete - configEnrichment_Clean",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Start ETL Audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "Delete from config.Enrichment\n\nSelect 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Enrichment",
                                    "schemaname": "config",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-19T06:44:54Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-master-staging-to-alignment')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "pip-load-staging-to-alignment",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "start_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip-load-staging-to-alignment",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "parent_runid": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "staging_table_list": {
                                    "value": "@pipeline().parameters.staging_table_list",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                },
                                "is_log_on": {
                                    "value": "@pipeline().parameters.is_log_on",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "synapse_database_name": {
                                    "value": "@pipeline().parameters.synapse_database_name",
                                    "type": "Expression"
                                },
                                "synapse_server_name": {
                                    "value": "@pipeline().parameters.synapse_server_name",
                                    "type": "Expression"
                                },
                                "synapse_stg_storage": {
                                    "value": "@pipeline().parameters.synapse_stg_storage",
                                    "type": "Expression"
                                },
                                "crm_server_name": {
                                    "value": "@pipeline().parameters.crm_server_name",
                                    "type": "Expression"
                                },
                                "crm_database_name": {
                                    "value": "@pipeline().parameters.crm_database_name",
                                    "type": "Expression"
                                },
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "start_etl_audit",
                        "description": "starting ETL audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "428",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "end_etl_audit",
                        "description": "ending ETL audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "ads_reference_view",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "429",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_etl_audit",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "pip-load-staging-to-alignment",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "430",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "@activity('pip-load-staging-to-alignment').error.message",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "email_successful",
                        "description": "email if pipeline is successful",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "end_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailSuccesURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"Staging to Alignment Pipeline Successful\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "email_failed",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "fail_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.EmailFailureURL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"'pip-load-staging-to-alignment' Pipeline is failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ads_reference_view",
                        "description": "making the data comparison between alignment to ads and updating reference data from ads",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "pip-load-staging-to-alignment",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pip_DIA_Enrichment_Alignment_ADS_view2",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                },
                                "az_server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "az_database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.synapse_server_name",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.synapse_database_name",
                                    "type": "Expression"
                                },
                                "storageaccountname": {
                                    "value": "@pipeline().parameters.storageaccountname",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "staging_table_list": {
                        "type": "string",
                        "defaultValue": [
                            "staging.em_scoring",
                            "staging.em_aog",
                            "staging.em_marketing",
                            "staging.em_search_vendor_data",
                            "staging.em_suppression"
                        ]
                    },
                    "database_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "is_log_on": {
                        "type": "string",
                        "defaultValue": "1"
                    },
                    "server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "synapse_database_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "synapse_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "synapse_stg_storage": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "crm_server_name": {
                        "type": "string",
                        "defaultValue": "10.200.0.22"
                    },
                    "crm_database_name": {
                        "type": "string",
                        "defaultValue": "RNLMAP_MSCRM"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "EmailSuccesURL": {
                        "type": "string",
                        "defaultValue": "https://prod-51.westus.logic.azure.com:443/workflows/5ebd1dba8bbb492e812b84f4e86ba426/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=1oKEwEZsA9W2ZHGi6e1ihm_4mpccHBle9UZjdW1uOkQ"
                    },
                    "EmailFailureURL": {
                        "type": "string",
                        "defaultValue": "https://prod-142.westus.logic.azure.com:443/workflows/5076b5f623944e73a73d414747a65c6f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QRg61OekEK1VZcXvQ400AcHr41s8V4BW3mqk5l_sNEM"
                    }
                },
                "folder": {
                    "name": "staging-To-Alignment"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-01T05:19:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip_export_sas_to_db_crm')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_fqtorderid",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT distinct co.[FqtOrderID],co.[FqtOrgModelId],co.[OrderStatusID]\n,co.[FileNameSource],om.ModelType,co.responseid\n,isnull(om.SubGroup,'No sub group')SubGroup,om.EntryTerm\n,om.ModelStatus,om.AcademicYear,om.modelNumber,co.uploadDetailId\n,om.AccountName,co.isSasFailureEmailSent\nFROM [fplus].[CustomerOrder] co\nleft join [fplus].[OrgModel] om on om.FqtOrgModelId = co.FqtOrgModelId\ninner join [fplus].[CustomerOrderStatus] cs on cs.[OrderStatusID] = co.[OrderStatusID] \n--where co.uploadDetailId = '150184'\nwhere cs.OrderStatusDesc = 'Sent For Scoring' and om.modelNumber is not null and co.uploadDetailId is not null",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "CustomerOrder",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "foreach_orderid",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_fqtorderid",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_fqtorderid').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "truncate_extract_sasscore_details_Stg",
                                    "type": "Script",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_scorescsv_to_adls",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "type": "Query",
                                                "text": "truncate table [fplus].[Extract_SasScore_Details_Stg]"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "folder_path",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "upload_detail_id",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "folderpath",
                                        "value": {
                                            "value": "@concat('fplus/sas_extract/',item().modelNumber,'/',item().AcademicYear,'/',item().ModelType,'/',item().EntryTerm,'/',item().SubGroup)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "get_meatdata_scored_file",
                                    "type": "GetMetadata",
                                    "dependsOn": [
                                        {
                                            "activity": "folder_path",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_fplus_shared_folder",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": {
                                                    "value": "@concat(item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                    "type": "Expression"
                                                },
                                                "filename": {
                                                    "value": "@concat(item().uploaddetailID,'_Scores.csv')",
                                                    "type": "Expression"
                                                },
                                                "fplus_host": {
                                                    "value": "@pipeline().parameters.fplus_host",
                                                    "type": "Expression"
                                                },
                                                "fplus_username": {
                                                    "value": "@pipeline().parameters.fplus_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "exists"
                                        ],
                                        "storeSettings": {
                                            "type": "FileServerReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "if_score_file_exists",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "get_meatdata_scored_file",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('get_meatdata_scored_file').output.exists,true)",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "update_customer_order_score_failure",
                                                "description": "update customer order with isSasFailureEmailSent = '1'",
                                                "type": "Script",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_synapse_crm_server": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_server",
                                                            "type": "Expression"
                                                        },
                                                        "az_synapse_crm_db": {
                                                            "value": "@pipeline().parameters.az_synapse_crm_db",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "typeProperties": {
                                                    "scripts": [
                                                        {
                                                            "type": "Query",
                                                            "text": {
                                                                "value": "update fplus.CustomerOrder set isSasFailureEmailSent = '1' where fqtorderid = '@{item().fqtorderid}'",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "name": "email_scoring_failure",
                                                "type": "WebActivity",
                                                "dependsOn": [
                                                    {
                                                        "activity": "update_customer_order_score_failure",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "url": "https://prod-63.westus.logic.azure.com:443/workflows/2fdd3f457bc4434eba7917081bb5ef1d/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=SHm3ZUq9Y1cfGV94VKaKcZa8mE4MXDMP8r62FFJiDMM",
                                                    "connectVia": {
                                                        "referenceName": "AutoResolveIntegrationRuntime",
                                                        "type": "IntegrationRuntimeReference"
                                                    },
                                                    "method": "POST",
                                                    "headers": {
                                                        "Content-Type": "application/json"
                                                    },
                                                    "body": {
                                                        "value": "{\n\"accountname\": '@{item().AccountName}',\n\"academicYear\": '@{item().AcademicYear}',\n\"modelType\": '@{item().ModelType}',\n\"entryTerm\": '@{item().EntryTerm}',\n\"subGroup\": '@{item().SubGroup}',\n\"modelNumber\": '@{item().modelNumber}',\n\"uploadDetailId\": '@{item().uploadDetailId}'\n}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "copy_data_to_sasscore_details_stg",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "fplus_xmlscore_sharepath_adls",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "additionalColumns": [
                                                            {
                                                                "name": "fqt_orderid",
                                                                "value": {
                                                                    "value": "@variables('fqtorderid')",
                                                                    "type": "Expression"
                                                                }
                                                            },
                                                            {
                                                                "name": "responseid",
                                                                "value": {
                                                                    "value": "@variables('responseid')",
                                                                    "type": "Expression"
                                                                }
                                                            },
                                                            {
                                                                "name": "model_number",
                                                                "value": {
                                                                    "value": "@variables('modelnumber')",
                                                                    "type": "Expression"
                                                                }
                                                            },
                                                            {
                                                                "name": "upload_detail_id",
                                                                "value": {
                                                                    "value": "@variables('uploaddetailid')",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        ],
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": false,
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "writeBehavior": "Insert",
                                                        "sqlWriterUseTableLock": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "personid",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "personid",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "N004",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "N004",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "OVER_RIDE",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "OVER_RIDE",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MODSCORE",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MODSCORE",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "MODSCORE_B",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "MODSCORE_B",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PREDICTED_PROBABILITY",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PREDICTED_PROBABILITY",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DECILE_RANK",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "DECILE_RANK",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PROB_INQ",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PROB_INQ",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PROB_APP",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PROB_APP",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PROB_ADM",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PROB_ADM",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PROB_CON",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PROB_CON",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PROB_ENR",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "PROB_ENR",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Top_Source",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "Top_Source",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Top_Major",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "Top_Major",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Top_Income",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "Top_Income",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Top_Cluster",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "Top_Cluster",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Top_State",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "Top_State",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CUM_PERC",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "CUM_PERC",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "INCOME_BIN",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "INCOME_BIN",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SAS_ERROR",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "SAS_ERROR",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "fqt_orderid",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "FQT_OrderId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "responseid",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "ResponseId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "model_number",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "Model_Number",
                                                                    "type": "String",
                                                                    "physicalType": "varchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "upload_detail_id",
                                                                    "type": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "Upload_Detail_Id",
                                                                    "type": "String",
                                                                    "physicalType": "varchar"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "FilesToRename",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Containername": {
                                                                "value": "@pipeline().parameters.container",
                                                                "type": "Expression"
                                                            },
                                                            "Filepath": {
                                                                "value": "@concat(pipeline().parameters.softscore_adls,'/',item().modelnumber,'/',item().academicYear,'/',item().modelType,'/',item().entryTerm,'/',item().subGroup)\n",
                                                                "type": "Expression"
                                                            },
                                                            "Filename": {
                                                                "value": "@concat(item().uploaddetailID,'_Scores.csv')",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.storageaccountname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_azuresynapse",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "Extract_SasScore_Details_Stg",
                                                            "schemaname": "fplus",
                                                            "az_synapse_crm_server": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                                "type": "Expression"
                                                            },
                                                            "az_synapse_crm_db": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "estscore_contents",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "get_estscore_file",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "estscore",
                                                    "value": {
                                                        "value": "@replace(replace(string(activity('get_estscore_file').output.firstRow),'{\"\":\"',''),'\"}','')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "email_scoring_success",
                                                "description": "Scoring Notification",
                                                "type": "WebActivity",
                                                "dependsOn": [
                                                    {
                                                        "activity": "estscore_contents",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "url": "https://prod-09.westus.logic.azure.com:443/workflows/08678333f3b04436a39e64cc6e3715a5/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=OP32xi_Vmf7EuvomPUf7x81Sqm1STTjkyiGmQNxlQn4",
                                                    "connectVia": {
                                                        "referenceName": "AutoResolveIntegrationRuntime",
                                                        "type": "IntegrationRuntimeReference"
                                                    },
                                                    "method": "POST",
                                                    "headers": {
                                                        "Content-Type": "application/json"
                                                    },
                                                    "body": {
                                                        "value": "{\n\"accountname\":'@{item().accountname}',\n\"academicYear\": '@{item().academicYear}',\n\"modelType\": '@{item().modelType}',\n\"entryTerm\":'@{item().entryTerm}',\n\"subGroup\": '@{item().subGroup}',\n\"modelNumber\": '@{item().modelnumber}',\n\"uploadDetailId\": '@{item().uploadDetailId}',\n\"Htmlcontent\" : '@{variables('estscore')}'\n}\n",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "fplus_xmlscore_sharepath_adls",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "FileServerReadSettings",
                                                            "recursive": false,
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_fplus_score_to_adls",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "directory": {
                                                                "value": "@concat(item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "@concat(item().uploaddetailID,'_Scores.csv')",
                                                                "type": "Expression"
                                                            },
                                                            "fplus_host": {
                                                                "value": "@pipeline().parameters.fplus_host",
                                                                "type": "Expression"
                                                            },
                                                            "fplus_username": {
                                                                "value": "@pipeline().parameters.fplus_username",
                                                                "type": "Expression"
                                                            },
                                                            "vaulturl": {
                                                                "value": "@pipeline().parameters.vault_url",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "FilesToRename",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Containername": {
                                                                "value": "@pipeline().parameters.container",
                                                                "type": "Expression"
                                                            },
                                                            "Filepath": {
                                                                "value": "@concat(pipeline().parameters.softscore_adls,'/',item().modelnumber,'/',item().academicYear,'/',item().modelType,'/',item().entryTerm,'/',item().subGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "Filename": {
                                                                "value": "@concat(item().uploaddetailID,'_Scores.csv')",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.storageaccountname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "copy_estscorefiledata_to_fplus_estscoresfiledata",
                                                "description": "copy the file data to table",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "copy_data_to_sasscore_details_stg",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "preCopyScript": "TRUNCATE Table fplus.extractoflstfile",
                                                        "writeBehavior": "Insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "type": "String",
                                                                    "ordinal": 1
                                                                },
                                                                "sink": {
                                                                    "name": "lst_data",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "FilesToRename_no_header",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Containername": {
                                                                "value": "@pipeline().parameters.container",
                                                                "type": "Expression"
                                                            },
                                                            "Filepath": {
                                                                "value": "@concat(pipeline().parameters.softscore_adls,'/',item().modelnumber,'/',item().academicYear,'/',item().modelType,'/',item().entryTerm,'/',item().subGroup)",
                                                                "type": "Expression"
                                                            },
                                                            "Filename": {
                                                                "value": "estscore.lst",
                                                                "type": "Expression"
                                                            },
                                                            "storageaccountname": {
                                                                "value": "@pipeline().parameters.storageaccountname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_fplus_azuresynapse",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "extractoflstfile",
                                                            "schemaname": "fplus",
                                                            "az_synapse_crm_server": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                                "type": "Expression"
                                                            },
                                                            "az_synapse_crm_db": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "get_estscore_file",
                                                "description": "Read estscore.lst file",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "copy_estscorefiledata_to_fplus_estscoresfiledata",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlDWSource",
                                                        "sqlReaderQuery": "SELECT String_agg (lst_data,'') From (SELECT lst_data FROM fplus.extractoflstfile) a\n",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_fplus_azuresynapse",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "extractoflstfile",
                                                            "schemaname": "fplus",
                                                            "az_synapse_crm_server": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                                "type": "Expression"
                                                            },
                                                            "az_synapse_crm_db": {
                                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "firstRowOnly": true
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "fqt_order_id",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "truncate_extract_sasscore_details_Stg",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "fqtorderid",
                                        "value": {
                                            "value": "@item().FqtOrderID",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "model_number",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "fqt_order_id",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "modelnumber",
                                        "value": {
                                            "value": "@item().modelNumber",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "response_id",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "model_number",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "responseid",
                                        "value": {
                                            "value": "@item().responseid",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "upload_detail_id",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "response_id",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "uploaddetailid",
                                        "value": {
                                            "value": "@item().uploadDetailId",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "update_student_raw_with_scoring_info",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "if_score_file_exists",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[fplus].[usp_UpdateScoresInfotoStudentDB]"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "update_customer_order_status",
                                    "type": "Script",
                                    "dependsOn": [
                                        {
                                            "activity": "update_student_raw_with_scoring_info",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "type": "Query",
                                                "text": {
                                                    "value": "update [fplus].[CustomerOrder] \nset OrderStatusID = (select orderstatusid from [fplus].[CustomerOrderStatus] \nwhere orderstatusdesc = 'Scoring Received') \nwhere fqtorderid = '@{variables('fqtorderid')}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "copy_scorescsv_to_adls",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_scoreslst_to_adls",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "FileServerReadSettings",
                                                "recursive": false,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_fplus_shared_folder",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": {
                                                    "value": "@concat(item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                    "type": "Expression"
                                                },
                                                "filename": {
                                                    "value": "@concat(item().uploaddetailid,'_Scores.csv')",
                                                    "type": "Expression"
                                                },
                                                "fplus_host": {
                                                    "value": "@pipeline().parameters.fplus_host",
                                                    "type": "Expression"
                                                },
                                                "fplus_username": {
                                                    "value": "@pipeline().parameters.fplus_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_fplus_xmlmap",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container": {
                                                    "value": "@pipeline().parameters.container",
                                                    "type": "Expression"
                                                },
                                                "filepath": {
                                                    "value": "@concat('UAT/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                    "type": "Expression"
                                                },
                                                "filename": {
                                                    "value": "@concat(item().uploaddetailid,'_Scores.csv')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "copy_scoreslst_to_adls",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "FileServerReadSettings",
                                                "recursive": false,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_fplus_shared_folder",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": {
                                                    "value": "@concat(item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                    "type": "Expression"
                                                },
                                                "filename": {
                                                    "value": "@concat('estscore.lst')",
                                                    "type": "Expression"
                                                },
                                                "fplus_host": {
                                                    "value": "@pipeline().parameters.fplus_host",
                                                    "type": "Expression"
                                                },
                                                "fplus_username": {
                                                    "value": "@pipeline().parameters.fplus_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_fplus_xmlmap",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container": {
                                                    "value": "@pipeline().parameters.container",
                                                    "type": "Expression"
                                                },
                                                "filepath": {
                                                    "value": "@concat('SoftScore/',item().modelnumber,'/',item().academicyear,'/',item().modeltype,'/',item().entryterm,\n'/',item().SubGroup)",
                                                    "type": "Expression"
                                                },
                                                "filename": {
                                                    "value": "@concat('estscore.lst')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "truncate_crm_score_stg_table",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "foreach_orderid",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AppboostCrmSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": {
                                        "value": "truncate table [dbo].[FQTStudentScoreStg]",
                                        "type": "Expression"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "modelscore_update_in_crm_stg_table",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "truncate_crm_score_stg_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT distinct st.STUDENTID,st.FQTORDERID,st.output_MODSCORE ,st.ModelType\n,case when st.ModelType = 'Prospect' then st.output_MODSCORE\nelse ''\nend as po_smartscore\n,case when st.ModelType = 'Inquiry' then st.output_MODSCORE\nelse ''\nend as po_inquirymodelscore\n,case when st.ModelType = 'Admit' then st.output_MODSCORE\nelse ''\nend as po_admitmodelscore\n,case when st.ModelType = 'Applicant' then st.output_MODSCORE\nelse ''\nend as po_applicantmodelscore\nFROM fplus.student_raw st\nleft join [fplus].[CustomerOrder] co on st.FQTORDERID = co.FqtOrderID\nleft join [fplus].[OrgModel] om on om.FqtOrgModelId = co.FqtOrgModelId\ninner join [fplus].[CustomerOrderStatus] cs on cs.[OrderStatusID] = co.[OrderStatusID] \nwhere cs.OrderStatusDesc = 'Scoring Received'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "STUDENTID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_clientid",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FQTORDERID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "fqtorderid",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "output_MODSCORE",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "output_modescore",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ModelType",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "modeltype",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_smartscore",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_smartscore",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_inquirymodelscore",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_inquirymodelscore",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_admitmodelscore",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_admitmodelscore",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "po_applicantmodelscore",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_applicantmodelscore",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "student_raw",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "FQTStudentScoreStg",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "update_scores_to_contactbase_table",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "modelscore_update_in_crm_stg_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_UpdateFQTScoresInfotoContact]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_AppboostCrmSqlDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "crm_servername": {
                                    "value": "@pipeline().parameters.crm_servername",
                                    "type": "Expression"
                                },
                                "crm_dbname": {
                                    "value": "@pipeline().parameters.crm_dbname",
                                    "type": "Expression"
                                },
                                "crm_username": {
                                    "value": "@pipeline().parameters.crm_username",
                                    "type": "Expression"
                                },
                                "vaulturl": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "update_customer_order_awaiting_extraction",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "update_scores_to_contactbase_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "az_synapse_crm_server": {
                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                    "type": "Expression"
                                },
                                "az_synapse_crm_db": {
                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                    "type": "Expression"
                                }
                            }
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": {
                                        "value": "update [fplus].[CustomerOrder] \nset OrderStatusID = (Select OrderStatusID From [fplus].[CustomerOrderStatus] where OrderStatusDesc = 'Awaiting Extraction')\n,scoredate=getdate()\nwhere FqtOrderID in\n(SELECT distinct st.FQTORDERID\nFROM fplus.student_raw st\nleft join [fplus].[CustomerOrder] co on st.FQTORDERID = co.FqtOrderID\nleft join [fplus].[OrgModel] om on om.FqtOrgModelId = co.FqtOrgModelId\ninner join [fplus].[CustomerOrderStatus] cs on cs.[OrderStatusID] = co.[OrderStatusID] \nwhere cs.OrderStatusDesc = 'Scoring Received')",
                                        "type": "Expression"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "update_crm_status",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "update_customer_order_awaiting_extraction",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "additionalColumns": [
                                    {
                                        "name": "OwnerId",
                                        "value": "07B626B0-DAC8-E811-A96F-000D3A062608"
                                    },
                                    {
                                        "name": "statecode",
                                        "value": "0"
                                    },
                                    {
                                        "name": "OwnerIDType",
                                        "value": "8"
                                    }
                                ],
                                "sqlReaderQuery": "SELECT co.FqtOrderID,co.OrderStatusID,c_o_s.OrderStatusDesc\nFROM  [fplus].[CustomerOrder] co\njoin [fplus].[CustomerOrderStatus] c_o_s\non c_o_s.OrderStatusID = co.OrderStatusID\nand c_o_s.OrderStatusDesc='Awaiting Extraction'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "SqlServerSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": false,
                                    "keys": [
                                        "po_fqtcustomerorderId"
                                    ]
                                },
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "FqtOrderID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_fqtcustomerorderId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OrderStatusID",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "po_orderstatus",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "statecode"
                                        },
                                        "sink": {
                                            "name": "statecode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerId"
                                        },
                                        "sink": {
                                            "name": "OwnerId",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OwnerIDType"
                                        },
                                        "sink": {
                                            "name": "OwnerIdType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_fplus_azuresynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "CustomerOrder",
                                    "schemaname": "fplus",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_appboost_crm",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "po_fqtcustomerorderbase",
                                    "crm_servername": {
                                        "value": "@pipeline().parameters.crm_servername",
                                        "type": "Expression"
                                    },
                                    "crm_dbname": {
                                        "value": "@pipeline().parameters.crm_dbname",
                                        "type": "Expression"
                                    },
                                    "crm_username": {
                                        "value": "@pipeline().parameters.crm_username",
                                        "type": "Expression"
                                    },
                                    "vaulturl": {
                                        "value": "@pipeline().parameters.vault_url",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "az_sql_server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "az_sql_db_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "softscore_root": {
                        "type": "string",
                        "defaultValue": "SoftScore/UAT"
                    },
                    "container": {
                        "type": "string",
                        "defaultValue": "prodcrmsynapse"
                    },
                    "softscore_adls": {
                        "type": "string",
                        "defaultValue": "SoftScore"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "fplus_host": {
                        "type": "string",
                        "defaultValue": "\\\\10.3.30.67\\SoftScore"
                    },
                    "fplus_username": {
                        "type": "string",
                        "defaultValue": "RNLWINSASCOMP1\\svc_prod_fqt"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.26.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAPQA_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    }
                },
                "variables": {
                    "folderpath": {
                        "type": "String"
                    },
                    "fqtorderid": {
                        "type": "String"
                    },
                    "responseid": {
                        "type": "String"
                    },
                    "modelnumber": {
                        "type": "String"
                    },
                    "uploaddetailid": {
                        "type": "String"
                    },
                    "estscore": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "F+/Reverse Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-12T11:21:35Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-finalextract-to-sftp')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup - CustomerOrder",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT distinct co.FqtOrderID,co.OrderStatusID,cs.OrderStatusDesc,om.accountid,sd.accountname\n,sd.generatecampusreport,sd.safemail,sd.CampusSFTPPath,sd.ModelType,sd.CampusFileName,sd.CampusReportQuery\n,sd.CampusFileType,sd.GenerateCSDReport,sd.CSDSFTPPath,sd.CSDFileName,sd.CSDReportQuery,sd.CSDFileType,sd.CSDEmailRecipients\n,co.uploadDetailId,co.scoredate\nFROM  fplus.CustomerOrder co\nINNER JOIN [fplus].[CustomerOrderStatus] cs ON cs.OrderStatusID = co.OrderStatusID\nINNER JOIN fplus.orgmodel om ON om.FqtOrgModelId = co.FqtOrgModelId\nINNER JOIN [fplus].[SFTPDetails] sd ON sd.accountid=om.AccountID  AND om.ModelType=sd.ModelType \nand cs.OrderStatusDesc='Awaiting Extraction' --AND co.FqtOrderID='CA7EA896-3EC5-EC11-A9D4-000D3A0627FB'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_synapse_Dynamic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Syn_Schema": "fplus",
                                    "Syn_Table": "CustomerOrder",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach - OrderID",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup - CustomerOrder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup - CustomerOrder').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "EntryTerm",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "select distinct String_Agg( entry_term,'_') within group (order by entry_term) as entryterm \nfrom (SELECT distinct Cast(substring(entry_term,1,2) as NVARCHAR(max)) as entry_term\nfrom fplus.student_finalver where uploaddetailid = @{item().uploaddetailid}\nand entry_term is not null and entry_term <>' ' ) brv\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_synapse_Dynamic",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Syn_Schema": "fplus",
                                                "Syn_Table": "student_finalver",
                                                "az_synapse_crm_server": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                                    "type": "Expression"
                                                },
                                                "az_synapse_crm_db": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Set csdFileName",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Set EntryTerm",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "csdFileName",
                                        "value": {
                                            "value": "@replace(\n         replace(\n                 replace(item().csdFileName,'uploaddetailid',item().uploaddetailid),\n                 'entryterm',variables('EntryTerm')\n                 ),\n        'mmddyyyy',formatDateTime(utcnow(),'MMddyyyy')\n        )",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set EntryTerm",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "EntryTerm",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "EntryTerm",
                                        "value": {
                                            "value": "@activity('EntryTerm').output.value[0].entryterm",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set campusFileName",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Set EntryTerm",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "campusFileName",
                                        "value": {
                                            "value": "@replace(\n         replace(\n                 replace(item().campusFileName,'uploaddetailid',item().uploaddetailid),\n                 'entryterm',variables('EntryTerm')\n                 ),\n        'mmddyyyy',formatDateTime(utcnow(),'MMddyyyy')\n        )",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Generate Campus Report - UNC",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Set campusFileName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "@replace(item().CampusReportQuery,'?',item().uploaddetailid)",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_synapse_Dynamic",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Syn_Schema": "fplus",
                                                "Syn_Table": "student_finalver",
                                                "az_synapse_crm_server": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                                    "type": "Expression"
                                                },
                                                "az_synapse_crm_db": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_output",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "prodcrmsynapse",
                                                "FilePath": {
                                                    "value": "@concat('f+/UNC',pipeline().parameters.UncPath)",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@variables('campusFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Campus Report - UNC to SFTP",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Campus Report - UNC",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "SftpWriteSettings",
                                                "operationTimeout": "01:00:00",
                                                "useTempFileRename": true
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_adls_output",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "prodcrmsynapse",
                                                "FilePath": {
                                                    "value": "@concat('f+/UNC',pipeline().parameters.UncPath)",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@variables('campusFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_sftp_input_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderName": {
                                                    "value": "@{item().CampusSFTPPath}",
                                                    "type": "Expression"
                                                },
                                                "fileName": {
                                                    "value": "@variables('campusFileName')",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_host": {
                                                    "value": "@pipeline().parameters.rnl_sftp_host",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_username": {
                                                    "value": "@pipeline().parameters.rnl_sftp_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Delete Campus Report File in UNC",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "Campus Report - UNC to SFTP",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_adls_output",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "prodcrmsynapse",
                                                "FilePath": {
                                                    "value": "@concat('f+/UNC',pipeline().parameters.UncPath)",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@variables('campusFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                },
                                {
                                    "name": "CSD Report - UNC to SFTP",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate CSD Report - UNC",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "SftpWriteSettings",
                                                "operationTimeout": "01:00:00",
                                                "useTempFileRename": true
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_adls_output",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "prodcrmsynapse",
                                                "FilePath": {
                                                    "value": "@concat('f+/UNC',pipeline().parameters.UncPath)",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@variables('csdFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_sftp_input_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderName": {
                                                    "value": "@{item().CSDSFTPPath}",
                                                    "type": "Expression"
                                                },
                                                "fileName": {
                                                    "value": "@variables('csdFileName')",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_host": {
                                                    "value": "@pipeline().parameters.rnl_sftp_host",
                                                    "type": "Expression"
                                                },
                                                "rnl_sftp_username": {
                                                    "value": "@pipeline().parameters.rnl_sftp_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Delete CSD Report File in UNC",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "CSD Report - UNC to SFTP",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_adls_output",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "prodcrmsynapse",
                                                "FilePath": {
                                                    "value": "@concat('f+/UNC',pipeline().parameters.UncPath)",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@variables('csdFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                },
                                {
                                    "name": "Generate CSD Report - UNC",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Set csdFileName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat(item().csdReportQuery,item().uploaddetailid)",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_synapse_Dynamic",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Syn_Schema": "fplus",
                                                "Syn_Table": "student_finalver",
                                                "az_synapse_crm_server": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                                    "type": "Expression"
                                                },
                                                "az_synapse_crm_db": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_output",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "prodcrmsynapse",
                                                "FilePath": {
                                                    "value": "@concat('f+/UNC',pipeline().parameters.UncPath)",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@variables('csdFileName')",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Status Update on FQT Order",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Email Notification",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('update [fplus].[CustomerOrder] \nset OrderStatusID = (Select OrderStatusID From [fplus].[CustomerOrderStatus] where OrderStatusDesc = ''Scoring Process Completed'')\nwhere FqtOrderID =''',item().FqtOrderID,''' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_synapse_Dynamic",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Syn_Schema": "fplus",
                                                "Syn_Table": "CustomerOrder",
                                                "az_synapse_crm_server": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                                    "type": "Expression"
                                                },
                                                "az_synapse_crm_db": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Status Update on CRM",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Status Update on FQT Order",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('Update po_fqtcustomerorderBase set po_orderstatus = \n(Select po_fqtcustomerorderstatusid from dbo.po_fqtcustomerorderstatusBase \nwhere po_name = ''Extraction Completed'') \nwhere po_fqtcustomerorderId=''',item().FqtOrderID,''' SELECT 1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_appboost_crm",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_schema": "dbo",
                                                "crm_table": "po_fqtcustomerorderstatusBase",
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                },
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Get File Upload Date",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Delete CSD Report File in UNC",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Delete Campus Report File in UNC",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('select CreatedOn from dbo.po_fqtcustomerorderBase (nolock) where po_fqtcustomerorderId =','''',item().Fqtorderid,'''')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_appboost_crm",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_schema": "dbo",
                                                "crm_table": "po_fqtcustomerorderBase",
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_servername",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_dbname",
                                                    "type": "Expression"
                                                },
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Email Notification",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Get File Upload Date",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "https://prod-26.westus.logic.azure.com:443/workflows/7a77772d67de482db72c5e31cae7105d/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=N9TntF19YwfNGrgIWG8sCvgSajQY19Ylhc7nUHaQMPo",
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"EmailTo\":\"@{item().CSDEmailRecipients};Ganesh.Gawli@ruffalonl.com;Rushikesh.Shirgoankar@ruffalonl.com;soumya.dey@ruffalonl.com\",\n\"Subject\": \"Scoring Analysis Export - @{item().uploadDetailId}\",\n\"AccountName\": \"@{item().AccountName}\",\n\"ReceivedDate\": \"@{activity('Get File Upload Date').output.value[0].CreatedOn}\",\n\"ScoreDate\": \"@{item().ScoreDate}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "UncPath": {
                        "type": "string",
                        "defaultValue": "/FileShare$/SmartData/DEV/Final Customer Extract/"
                    },
                    "server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "database_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "fplus_host": {
                        "type": "string",
                        "defaultValue": "\\\\10.3.30.67\\SoftScore"
                    },
                    "fplus_username": {
                        "type": "string",
                        "defaultValue": "RNLWINSASCOMP1\\svc_prod_fqt"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "rnl_sftp_host": {
                        "type": "string",
                        "defaultValue": "SFTP.RuffaloNL.com"
                    },
                    "rnl_sftp_username": {
                        "type": "string",
                        "defaultValue": "Brillio_rnl"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "crm_servername": {
                        "type": "string",
                        "defaultValue": "10.26.0.22"
                    },
                    "crm_dbname": {
                        "type": "string",
                        "defaultValue": "RNLMAPQA_MSCRM"
                    },
                    "crm_username": {
                        "type": "string",
                        "defaultValue": "svc_az_ndp"
                    }
                },
                "variables": {
                    "csdFileName": {
                        "type": "String"
                    },
                    "EntryTerm": {
                        "type": "String"
                    },
                    "campusFileName": {
                        "type": "String"
                    },
                    "EmailBody": {
                        "type": "String"
                    },
                    "EmailBodywithDates": {
                        "type": "String"
                    },
                    "UploadDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "F+/Reverse Flow"
                },
                "annotations": [],
                "lastPublishTime": "2022-12-01T08:55:33Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/PIConfig_Schema41')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Schema_CSV",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:10:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "DECLARE @json NVARCHAR(MAX)\nselect @json=f.popb_data\nfrom\npopb_fileuploadmappingBase f\nwhere f.popb_responseid='@{pipeline().parameters.ResponseID}'\nSELECT REPLACE(popb_name, '\n', '') popb_name,REPLACE(popb_schemaname, '\n', '') popb_schemaname FROM OPENJSON(@json) WITH (\npopb_name nvarchar(200) '$.MappedHeader',\npopb_schemaname nvarchar(200) '$.FieldInfo.SchemaName' ) WHERE popb_name IS NOT NULL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "popb_name",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "popb_name",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "popb_schemaname",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "popb_schemaname",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "RNLSTKDEVSQL1141",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "FilesToRename141",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Containername": "datalanding",
                                    "Filepath": {
                                        "value": "@pipeline().parameters.FilePath",
                                        "type": "Expression"
                                    },
                                    "Filename": "Schema.csv"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "PurposeName": {
                        "type": "string"
                    },
                    "AccountID": {
                        "type": "string"
                    },
                    "ResponseID": {
                        "type": "string"
                    },
                    "FilePath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-02T01:37:02Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em_dqe_dia_automation')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "DQE DIA Automation",
                "activities": [
                    {
                        "name": "process_files",
                        "description": "DQE Process for each responseid fetched",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_response_id",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_response_id').output.Value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "file_metadata",
                                    "description": "Fetch file metadata for the retrieved responseid",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.02:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "select (case \nwhen purpose_name = 'EM Scoring' then 'staging.em_scoring' \nwhen purpose_name = 'EM Search Vendor Data' then 'staging.em_search_vendor_data' \nwhen purpose_name = 'EM Suppression' then 'staging.em_suppression' \nwhen purpose_name = 'EM GO' then 'staging.em_aog' \nwhen purpose_name = 'EM Marketing' then 'staging.em_marketing' \nwhen purpose_name = 'EM Historical Data' then 'staging.em_historical_data' end) staging_table,\n * from [audit].[file_metadata]\nwhere modified_filename = '@{item().modified_filename}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "file_metadata",
                                                "schemaname": "audit",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "check responseid in staging table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "file_metadata",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "select count(*) as count from @{activity('file_metadata').output.firstRow.staging_table} where response_id='@{item().response_id}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": {
                                                    "value": "@split(activity('file_metadata').output.firstRow.staging_table,'.')[1]",
                                                    "type": "Expression"
                                                },
                                                "schemaname": "staging",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "if responseid not in staging table",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "auditfile_dqe_start",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('check responseid in staging table').output.firstRow.count,0)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "run_em_dqe_notebook",
                                                "description": "Invoke pipeline to execute DQE Script in Databricks Notebook",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "pip-dqe_em_notebook",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "adlsName": {
                                                            "value": "@pipeline().parameters.adlsName",
                                                            "type": "Expression"
                                                        },
                                                        "manualFlag": "automated",
                                                        "mountPath": "/mnt/datalanding",
                                                        "containerName": "datalanding",
                                                        "outboundFolder": {
                                                            "value": "em_inbound/dqe/em_outbound",
                                                            "type": "Expression"
                                                        },
                                                        "currentYear": "2022",
                                                        "ruleFlag": "exclude",
                                                        "fileQueueFileType": "EM_File_Queue",
                                                        "inboundFolder": {
                                                            "value": "@concat('em_inbound/',activity('file_metadata').output.firstRow.purpose_name)",
                                                            "type": "Expression"
                                                        },
                                                        "executionTimeStoreFolder": "em_inbound/dqe/em_execution",
                                                        "intermediateOutboundFolder": "em_inbound/dqe/em_intermediate",
                                                        "fileQueueFileName": "em_file_queue",
                                                        "responseid": {
                                                            "value": "@item().response_id",
                                                            "type": "Expression"
                                                        },
                                                        "purposeName": {
                                                            "value": "@item().purposename",
                                                            "type": "Expression"
                                                        },
                                                        "authority": "https://login.microsoftonline.com/",
                                                        "staging_table": {
                                                            "value": "@activity('file_metadata').output.firstRow.staging_table",
                                                            "type": "Expression"
                                                        },
                                                        "database_name": {
                                                            "value": "@pipeline().parameters.database_name",
                                                            "type": "Expression"
                                                        },
                                                        "jdbc_url": "jdbc:sqlserver://rnlndpprodazsql01.database.windows.net:1433",
                                                        "databricks_workspace_url": {
                                                            "value": "@pipeline().parameters.databricks_workspace_url",
                                                            "type": "Expression"
                                                        },
                                                        "databricks_clusterid": {
                                                            "value": "@pipeline().parameters.databricks_clusterid",
                                                            "type": "Expression"
                                                        },
                                                        "vault_url": {
                                                            "value": "@pipeline().parameters.vault_url",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "dqe_profiling_audit",
                                                "description": "DQE Data profiling audit",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [
                                                    {
                                                        "activity": "run_em_dqe_notebook",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "pip-dqe_profiling_log",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "responseid": {
                                                            "value": "@activity('file_metadata').output.firstRow.response_id",
                                                            "type": "Expression"
                                                        },
                                                        "purposename": {
                                                            "value": "@activity('file_metadata').output.firstRow.purpose_name",
                                                            "type": "Expression"
                                                        },
                                                        "staging_table": {
                                                            "value": "@activity('file_metadata').output.firstRow.staging_table",
                                                            "type": "Expression"
                                                        },
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_database_name": {
                                                            "value": "@pipeline().parameters.database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "dqe_data_enrichment_audit",
                                                "description": "Data enrichment flag audit",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [
                                                    {
                                                        "activity": "dqe_profiling_audit",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "pip-dqe_data_enrichment_audit",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "responseid": {
                                                            "value": "@activity('file_metadata').output.firstRow.response_id",
                                                            "type": "Expression"
                                                        },
                                                        "purposename": {
                                                            "value": "@activity('file_metadata').output.firstRow.purpose_name",
                                                            "type": "Expression"
                                                        },
                                                        "staging_table": {
                                                            "value": "@activity('file_metadata').output.firstRow.staging_table",
                                                            "type": "Expression"
                                                        },
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_database_name": {
                                                            "value": "@pipeline().parameters.database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "get_tablename_for_storedprocedure",
                                                "description": "Fetch file metadata for the retrieved responseid",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "run_em_dqe_notebook",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "0.02:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "select * from (\nselect  (case\nwhen purpose_name = 'EM Scoring' then 'EM_Scoring'\nwhen purpose_name = 'EM Search Vendor Data' then 'EM_Search_Vendor_Data'\nwhen purpose_name = 'EM Suppression' then 'EM_Suppression'\nwhen purpose_name = 'EM GO' then 'EM_Aog'\nwhen purpose_name = 'EM Marketing' then 'EM_Marketing'\nwhen purpose_name = 'EM Historical Data' then 'EM_Historical_Data' end) TableName,\nrow_number() over\n(PARTITION BY purpose_name,response_id order by insert_datetime  desc) row_num,\n* from [audit].[file_metadata]\n  where response_id = '@{item().response_id}'\n)t   where t.row_num=1",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_azure_sql",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "tablename": "file_metadata",
                                                            "schemaname": "audit",
                                                            "az_server_name": {
                                                                "value": "@pipeline().parameters.server_name",
                                                                "type": "Expression"
                                                            },
                                                            "az_sql_db": {
                                                                "value": "@pipeline().parameters.database_name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "firstRowOnly": false
                                                }
                                            },
                                            {
                                                "name": "usp_em_purpose_intermediate_load_dia_review",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "get_tablename_for_storedprocedure",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "@concat('[dia].[usp_',activity('get_tablename_for_storedprocedure').output.value[0].Tablename,'_intermediate_load]')",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "DIA_USER": {
                                                            "value": "'DQE User'",
                                                            "type": "String"
                                                        },
                                                        "FileName": {
                                                            "value": {
                                                                "value": "@item().modified_filename",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "OperationType": {
                                                            "value": "'Copy'",
                                                            "type": "String"
                                                        },
                                                        "TableName": {
                                                            "value": {
                                                                "value": "@string(activity('get_tablename_for_storedprocedure').output.value[0].TableName)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "usp_Load_Accounts",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "dqe_data_enrichment_audit",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dia].[usp_Load_Accounts]"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "usp_Error_Warning_Code_Mapping",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "usp_Load_Accounts",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[dia].[usp_Error_Warning_Code_Mapping]"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_AzureSqlDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "az_server_name": {
                                                            "value": "@pipeline().parameters.server_name",
                                                            "type": "Expression"
                                                        },
                                                        "az_sql_db": {
                                                            "value": "@pipeline().parameters.database_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "auditfile_dqe_start",
                                    "description": "File audit for DQE DIA Automation with status as Started",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "check responseid in staging table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.02:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "301",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@item().response_id",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@activity('file_metadata').output.firstRow.mapping_id",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@item().purpose_file_name",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@activity('file_metadata').output.firstRow.account_name",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "em_inbound",
                                            "status": "DQE and DIA automation Started",
                                            "row_count": {
                                                "value": "@string(item().row_count)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "@string(item().rejected_row)",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "auditfile_dqe_failure",
                                    "description": "File audit for DQE DIA Automation with status as DQE and DIA automation Failed",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "if responseid not in staging table",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.02:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "303",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@item().response_id",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@activity('file_metadata').output.firstRow.mapping_id",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@item().purpose_file_name",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@activity('file_metadata').output.firstRow.account_name",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "Staging",
                                            "status": "DQE and DIA automation Failed",
                                            "row_count": {
                                                "value": "@string(item().row_count)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "@string(item().rejected_row)",
                                                "type": "Expression"
                                            },
                                            "error_description": {
                                                "value": "DQE and DIA automation Failed",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "email_em_dqe_notebook_failure",
                                    "description": "Email Notification if DQE notebook execution fails",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "auditfile_dqe_failure",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@pipeline().parameters.EmailFailure",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com;yashika.tingley@ruffalonl.com;diafplus@ruffalonl.com\",\n\"ErrorMessage\": \"DQE Script - DQE Script Execution Failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"run_em_dqe_notebook\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "auditfile_dqe_complete",
                                    "description": "File audit for DQE DIA Automation with status as Completed",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "if responseid not in staging table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.02:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "302",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@item().response_id",
                                                "type": "Expression"
                                            },
                                            "mapping_id": {
                                                "value": "@activity('file_metadata').output.firstRow.mapping_id",
                                                "type": "Expression"
                                            },
                                            "purpose_file_name": {
                                                "value": "@item().purpose_file_name",
                                                "type": "Expression"
                                            },
                                            "account_name": {
                                                "value": "@activity('file_metadata').output.firstRow.account_name",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "Staging",
                                            "status": "DQE and DIA automation Completed",
                                            "row_count": {
                                                "value": "@string(item().row_count)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "@string(item().rejected_row)",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.server_name",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().parameters.database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "email_em_dqe_dia_automation",
                                    "description": "DQE complete notification",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "auditfile_dqe_complete",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@pipeline().parameters.EmailSuccess",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "AutoResolveIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "body": {
                                            "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com;yashika.tingley@ruffalonl.com;diafplus@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"DQE Script - Successful\",\n\"Filename\":\"@{item().modified_filename}\",\n\"Source row count\":\"@{string(item().row_count)}\",\n\"Destination row count\" :\"@{concat('rejected rows= ', string(item().rejected_row))}\"\n}\n",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "start_etl_audit",
                        "description": "Start ETL Audit for DQE and DIA Automation",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.02:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "201",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": {
                                    "value": "@pipeline().parameters.Pipeline_Start_Status",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "get_response_id",
                        "description": "Fetch responseid for files present in em_inbound folder and DQE process to be done",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "start_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.02:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select file_purpose, purpose_file_name,status,response_id,modified_filename,mapping_id,row_count,rejected_row,purposename from\n(select fm.file_purpose file_purpose, purpose_file_name,status,fm.response_id response_id,fm.modified_filename modified_filename,fm.mapping_id mapping_id,fpl.row_count,fpl.rejected_row,fm.purpose_name purposename,row_number() over \n(PARTITION BY purpose_file_name,fm.response_id order by fpl.id desc)  row_num from [audit].[file_processing_log] fpl\ninner join [audit].[file_metadata] fm\non fpl.response_id = fm.response_id\nand fpl.purpose_file_name = fm.purpose_name\n) t\nwhere row_num = 1\nand status = 'Copied In em_inbound folder'\nand purposename <> 'EM Historical Data'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "file_metadata",
                                    "schemaname": "audit",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "end_etl_audit",
                        "description": "End etl audit for DQE DIA Automation for Status Completed",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "process_files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.02:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "202",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": {
                                    "value": "@pipeline().parameters.Pipeline_Complete_Status",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "end_etl_audit_failed",
                        "description": "End etl audit for DQE DIA Automation for Status failure",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "process_files",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.02:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "203",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": {
                                    "value": "@pipeline().parameters.Pipeline_Error_Status",
                                    "type": "Expression"
                                },
                                "error_description": {
                                    "value": "DQE and DIA automation Failed",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "Purposename": {
                        "type": "string",
                        "defaultValue": "EM Scoring"
                    },
                    "ContainerName": {
                        "type": "string",
                        "defaultValue": "datalanding"
                    },
                    "Audit_Type_Pipeline": {
                        "type": "string",
                        "defaultValue": "ETL"
                    },
                    "Audit_Type_File": {
                        "type": "string",
                        "defaultValue": "File"
                    },
                    "Pipeline_Start_Status": {
                        "type": "string",
                        "defaultValue": "Started"
                    },
                    "Pipeline_Complete_Status": {
                        "type": "string",
                        "defaultValue": "Completed"
                    },
                    "Pipeline_Error_Status": {
                        "type": "string",
                        "defaultValue": "Failed"
                    },
                    "File_Location_Status_DQE_Started": {
                        "type": "string",
                        "defaultValue": "Data Landing- EMInbound(DQE Started)"
                    },
                    "Area": {
                        "type": "string",
                        "defaultValue": "DataTransformation"
                    },
                    "InsertBy": {
                        "type": "string",
                        "defaultValue": "ADF_User"
                    },
                    "Inbound": {
                        "type": "string",
                        "defaultValue": "em_inbound"
                    },
                    "File_Location_Status_DQE_Completed": {
                        "type": "string",
                        "defaultValue": "Data Landing- EMInbound(DQE Completed)"
                    },
                    "audit_schemaname": {
                        "type": "string",
                        "defaultValue": "audit"
                    },
                    "file_metadata_table": {
                        "type": "string",
                        "defaultValue": "file_metadata"
                    },
                    "server_name": {
                        "type": "string",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "database_name": {
                        "type": "string",
                        "defaultValue": "NDPPRODSQLDB"
                    },
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net/"
                    },
                    "adlsName": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "EmailSuccess": {
                        "type": "string",
                        "defaultValue": "https://prod-51.westus.logic.azure.com:443/workflows/5ebd1dba8bbb492e812b84f4e86ba426/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=1oKEwEZsA9W2ZHGi6e1ihm_4mpccHBle9UZjdW1uOkQ"
                    },
                    "EmailFailure": {
                        "type": "string",
                        "defaultValue": "https://prod-142.westus.logic.azure.com:443/workflows/5076b5f623944e73a73d414747a65c6f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QRg61OekEK1VZcXvQ400AcHr41s8V4BW3mqk5l_sNEM"
                    }
                },
                "variables": {
                    "ResponseId": {
                        "type": "String"
                    },
                    "PurposeIdname": {
                        "type": "String"
                    },
                    "em_staging_table_name": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "DataTransformation"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-21T17:59:17Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-dnc-list-load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_files",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "start_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_dnc_file_csv",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container_name": "dnc",
                                    "folder_name": "processing/list",
                                    "file_name": "*",
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.storageaccountname",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_files').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "copy_file_to_dnc_staging",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Filename",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "Po_Date",
                                                    "value": {
                                                        "value": "@utcnow()",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": false,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "preCopyScript": "truncate table dnc.dnc_staging",
                                            "writeBehavior": "Insert",
                                            "sqlWriterUseTableLock": false,
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "phone",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "phone",
                                                        "type": "String",
                                                        "physicalType": "varchar"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "state",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "state",
                                                        "type": "String",
                                                        "physicalType": "varchar"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "country",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "country",
                                                        "type": "String",
                                                        "physicalType": "varchar"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "Po_Date",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "PO_Date",
                                                        "type": "DateTime",
                                                        "physicalType": "datetime"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "list",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "List",
                                                        "type": "Boolean",
                                                        "physicalType": "bit"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": true
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_dnc_file_csv",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container_name": "dnc",
                                                "folder_name": "processing/list",
                                                "file_name": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_synapse_dnc",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "table_name": "dnc_staging",
                                                "schema_name": "dnc",
                                                "az_synapse_crm_server": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                                    "type": "Expression"
                                                },
                                                "az_synapse_crm_db": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "delete_from_donotcall_table",
                                    "type": "Script",
                                    "dependsOn": [
                                        {
                                            "activity": "file_audiit- file_to_staging",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSynapseAnalyticsCrmDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "type": "Query",
                                                "text": "delete DNC\nfrom [dnc].dnc_donotcall DNC with(nolock)\nleft join [dnc].[dnc_state_or_province] SP on SP.DNCSP_StateorProvinceId = DNC_StateOrProvinceId\nleft join [dnc].[dnc_country] Ctry on Ctry.DNCC_CountryId = DNC.DNC_CountryId\ninner join [dnc].[dnc_staging] Stg with(nolock) on isnull(Stg.[state],'') = isnull(DNCSP_StateorProvinceCode,'')\n            and isnull(Stg.country,'') = isnull(Ctry.DNCC_CountryCode,'')"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Filename",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "filename",
                                        "value": {
                                            "value": "@item().name",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "copy_data_from_staging_to_donotcall",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "delete_from_donotcall_table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": {
                                                "value": "select ctry.DNCC_CountryId as DNC_CountryId,\n  sta.DNCSP_StateorProvinceId as DNC_StateOrProvinceId,  \n  stg.phone as DNC_PhoneNumber,\n  getdate() as DNC_ReceivedDate,\n  List as DNC_RNLList,\n  '@{variables('filename')}' as DNC_Source\n  from dnc.dnc_staging stg with (nolock)\nleft join dnc.dnc_state_or_province sta with (nolock) on sta.DNCSP_StateorProvinceCode = stg.state\nleft join dnc.dnc_country ctry with(nolock) on ctry.DNCC_CountryCode = stg.country",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "allowCopyCommand": true,
                                            "copyCommandSettings": {}
                                        },
                                        "enableStaging": true,
                                        "stagingSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "ls_Azuredatalakegen2",
                                                "type": "LinkedServiceReference",
                                                "parameters": {
                                                    "storageaccountname": {
                                                        "value": "@pipeline().parameters.storageaccountname",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "path": "dnc/processing/dnc_donotcall_staging"
                                        },
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "DNC_Source"
                                                    },
                                                    "sink": {
                                                        "name": "DNC_Source",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "DNC_CountryId",
                                                        "type": "Int32"
                                                    },
                                                    "sink": {
                                                        "name": "DNC_CountryId",
                                                        "type": "Int32"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "DNC_StateOrProvinceId",
                                                        "type": "Int32"
                                                    },
                                                    "sink": {
                                                        "name": "DNC_StateOrProvinceId",
                                                        "type": "Int32"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "DNC_PhoneNumber",
                                                        "type": "String"
                                                    },
                                                    "sink": {
                                                        "name": "DNC_PhoneNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "DNC_ReceivedDate",
                                                        "type": "DateTime"
                                                    },
                                                    "sink": {
                                                        "name": "DNC_ReceivedDate",
                                                        "type": "DateTime"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "DNC_RNLList",
                                                        "type": "Boolean"
                                                    },
                                                    "sink": {
                                                        "name": "DNC_RNLList",
                                                        "type": "Boolean"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_synapse_dnc",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "table_name": "dnc_staging",
                                                "schema_name": "dnc",
                                                "az_synapse_crm_server": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                                    "type": "Expression"
                                                },
                                                "az_synapse_crm_db": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_synapse_dnc",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "table_name": "dnc_donotcall",
                                                "schema_name": "dnc",
                                                "az_synapse_crm_server": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                                    "type": "Expression"
                                                },
                                                "az_synapse_crm_db": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "copy_file_to_archive",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "file_audiit-staging_to_donotcall",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": false,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_dnc_file_csv",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container_name": "dnc",
                                                "folder_name": "processing/list",
                                                "file_name": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_dnc_file_csv",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container_name": "dnc",
                                                "folder_name": "archive/list",
                                                "file_name": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "delete_file_from_processing_folder",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_file_to_archive",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_dnc_file_csv",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container_name": "dnc",
                                                "folder_name": "processing/list",
                                                "file_name": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": false,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                },
                                {
                                    "name": "file_audiit- file_to_staging",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_file_to_dnc_staging",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "705",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "DNC Staging",
                                            "status": "Completed",
                                            "row_count": {
                                                "value": "@string(activity('copy_file_to_dnc_staging').output.rowsCopied)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "@string(sub(activity('copy_file_to_dnc_staging').output.rowsRead,activity('copy_file_to_dnc_staging').output.rowsCopied))\r\n",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@variables('database_name')",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@variables('server_name')",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audiit- file_to_staging_failed",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_file_to_dnc_staging",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "706",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "DNC Staging",
                                            "status": "Failed",
                                            "row_count": {
                                                "value": "@string(activity('copy_file_to_dnc_staging').output.rowsCopied)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "@string(sub(activity('copy_file_to_dnc_staging').output.rowsRead,activity('copy_file_to_dnc_staging').output.rowsCopied))\r\n",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@variables('database_name')",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@variables('server_name')",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audiit-staging_to_donotcall",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_data_from_staging_to_donotcall",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "708",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "DNC Donotcall",
                                            "status": "Completed",
                                            "row_count": {
                                                "value": "@string(activity('copy_data_from_staging_to_donotcall').output.rowsCopied)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "@string(sub(activity('copy_data_from_staging_to_donotcall').output.rowsRead,activity('copy_data_from_staging_to_donotcall').output.rowsCopied))",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@variables('database_name')",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@variables('server_name')",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "file_audiit-staging_to_donotcall_failed",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_data_from_staging_to_donotcall",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-file-processing-log",
                                        "baseParameters": {
                                            "audit_id": "709",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "file_processing_stage": "DNC Donotcall",
                                            "status": "Failed",
                                            "row_count": {
                                                "value": "@string(activity('copy_data_from_staging_to_donotcall').output.rowsCopied)",
                                                "type": "Expression"
                                            },
                                            "rejected_row": {
                                                "value": "@string(sub(activity('copy_data_from_staging_to_donotcall').output.rowsRead,activity('copy_data_from_staging_to_donotcall').output.rowsCopied))",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@variables('database_name')",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@variables('server_name')",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "start_etl_audit",
                        "description": "starting ETL audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "701",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "server_name": {
                                    "value": "@variables('server_name')",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@variables('database_name')",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "end_etl_audit",
                        "description": "ending ETL audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "702",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "server_name": {
                                    "value": "@variables('server_name')",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@variables('database_name')",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "fail_etl_audit",
                        "description": "ending etl audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "703",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Failed",
                                "database_name": {
                                    "value": "@variables('database_name')",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@variables('server_name')",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "email_successful",
                        "description": "email if pipeline is successful",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "end_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.email_success_url",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"DNC List Load Pipeline is Successful\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "email_failed",
                        "description": "email if pipeline is failed",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "fail_etl_audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.email_fail_url",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "AutoResolveIntegrationRuntime",
                                "type": "IntegrationRuntimeReference"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"EmailTo\": \"ganesh.gawli@ruffalonl.com\",\n\"ErrorMessage\": \"DNC List Load Pipeline is Failed\",\n\"PipelineName\": \"@{pipeline().Pipeline}\",\n\"Subject\": \"An error has occurred!\",\n\"ActivityName\": \"\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "databricks_workspace_url": {
                        "type": "string",
                        "defaultValue": "https://adb-6587840185446536.16.azuredatabricks.net"
                    },
                    "databricks_clusterid": {
                        "type": "string",
                        "defaultValue": "0714-203005-9conw1v0"
                    },
                    "vault_url": {
                        "type": "string",
                        "defaultValue": "https://rnlndp-prodkeyvault.vault.azure.net"
                    },
                    "storageaccountname": {
                        "type": "string",
                        "defaultValue": "rnlndpproddls"
                    },
                    "az_synapse_crm_server": {
                        "type": "string",
                        "defaultValue": "rnlndpprodcrmsynapse.sql.azuresynapse.net"
                    },
                    "az_synapse_crm_db": {
                        "type": "string",
                        "defaultValue": "NDPPRODCRMPL1"
                    },
                    "email_success_url": {
                        "type": "string",
                        "defaultValue": "https://prod-173.westus.logic.azure.com:443/workflows/b4ac4d8213344ed3ab6ddf3356422bc2/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=J2Z8J9Kyf9lvgKvZUAOB_qghXvi-kxnhBgsng4SQRJc"
                    },
                    "email_fail_url": {
                        "type": "string",
                        "defaultValue": "https://prod-124.westus.logic.azure.com:443/workflows/ecbea0da6d9d4fec805510112e58ac43/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=zftAqYi2_FunSnqxi7eii9zkIg7f9xunb1baFRVUGYc"
                    }
                },
                "variables": {
                    "filename": {
                        "type": "String"
                    },
                    "filepath": {
                        "type": "String",
                        "defaultValue": "dnc/processing/list"
                    },
                    "server_name": {
                        "type": "String",
                        "defaultValue": "rnlndpprodazsql01.database.windows.net"
                    },
                    "database_name": {
                        "type": "String",
                        "defaultValue": "NDPPRODSQLDB"
                    }
                },
                "folder": {
                    "name": "dnc"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-12T08:16:52Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-dnc-load-state_or_province')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_files",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_dnc_file_csv",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container_name": "dnc",
                                    "folder_name": "processing/state_or_province",
                                    "file_name": "*",
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.storageaccountname",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_files').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "copy_file_to_dnc_state_or_province",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": false,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlDWSink",
                                            "writeBehavior": "Upsert",
                                            "upsertSettings": {
                                                "keys": [
                                                    "DNCSP_StateorProvinceId"
                                                ],
                                                "interimSchemaName": ""
                                            },
                                            "sqlWriterUseTableLock": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "DNCSP_StateorProvinceId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "DNCSP_StateorProvinceId",
                                                        "type": "Int32",
                                                        "physicalType": "int"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "DNCSP_StateorProvinceCode",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "DNCSP_StateorProvinceCode",
                                                        "type": "String",
                                                        "physicalType": "nvarchar"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "DNCSP_StateorProvinceName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "DNCSP_StateorProvinceName",
                                                        "type": "String",
                                                        "physicalType": "nvarchar"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "DNCSP_StateorProvinceMonth",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "DNCSP_StateorProvinceMonth",
                                                        "type": "Int32",
                                                        "physicalType": "int"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": true
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_dnc_file_csv",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container_name": "dnc",
                                                "folder_name": "processing/state_or_province",
                                                "file_name": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_synapse_dnc",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "table_name": "dnc_state_or_province",
                                                "schema_name": "dnc",
                                                "az_synapse_crm_server": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_server",
                                                    "type": "Expression"
                                                },
                                                "az_synapse_crm_db": {
                                                    "value": "@pipeline().parameters.az_synapse_crm_db",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "copy_file_to_archive",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_file_to_dnc_state_or_province",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": false,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_dnc_file_csv",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container_name": "dnc",
                                                "folder_name": "processing/state_or_province",
                                                "file_name": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_dnc_file_csv",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container_name": "dnc",
                                                "folder_name": "archive/state_or_province",
                                                "file_name": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "delete_file_from_processing_folder",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_file_to_archive",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_dnc_file_csv",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container_name": "dnc",
                                                "folder_name": "processing/state_or_province",
                                                "file_name": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": false,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "storageaccountname": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "dnc"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-02T13:50:37Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-crm-to-crmsynapse-historical-load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Entities based on IsActive",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Load Start Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "SELECT      [id] as [Id]\n           ,[seq_no] as [SeqNo]\n           ,[src_object_type] as [SrcObjectType]\n           ,[src_object_name] as [SrcObjectName]\n           ,[primary_key] as [PrimaryKey]\n           ,[source_delta_column] as [SourceDeltaColumn]\n           ,[cdc_key] as [CDC_Key]\n           ,[schema] as [Schema]\n           ,[destination_table_name] as [DestinationTableName]\n           ,[container] as [Container]\n           ,[file_path] as [FilePath]\n           ,[is_active] as [IsActive]\n           ,[load_type] as [LoadType]\n           ,[last_load_date] as [LastLoadDate]\n           ,[last_success_date] as [LastSuccessDate]\n           ,[last_load_status] as [LastLoadStatus]\n\t\t   ,stg_object_name\nFROM config.crm_to_ads where sse_is_active = 1\nORDER BY  seq_no ASC",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_crmsynapse",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Tablename": "''",
                                    "az_synapse_crm_server": {
                                        "value": "@pipeline().parameters.az_synapse_crm_server",
                                        "type": "Expression"
                                    },
                                    "az_synapse_crm_db": {
                                        "value": "@pipeline().parameters.az_synapse_crm_db",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach Entity",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Entities based on IsActive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Entities based on IsActive').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 3,
                            "activities": [
                                {
                                    "name": "Execute-inside-for-each-entity",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-inside-for-each-entity-crmsynapse-historical-load",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "DestinationTableName": {
                                                "value": "@item().DestinationTableName",
                                                "type": "Expression"
                                            },
                                            "stg_table_name": {
                                                "value": "@item().stg_object_name",
                                                "type": "Expression"
                                            },
                                            "FilePath": {
                                                "value": "@item().FilePath",
                                                "type": "Expression"
                                            },
                                            "PrimaryKey": {
                                                "value": "@item().PrimaryKey",
                                                "type": "Expression"
                                            },
                                            "CDC_Key": {
                                                "value": "@item().CDC_Key",
                                                "type": "Expression"
                                            },
                                            "Schema": {
                                                "value": "@item().Schema",
                                                "type": "Expression"
                                            },
                                            "SourceTableName": {
                                                "value": "@item().SrcObjectName",
                                                "type": "Expression"
                                            },
                                            "SrcObjectType": {
                                                "value": "@item().SrcObjectType",
                                                "type": "Expression"
                                            },
                                            "LoadType": {
                                                "value": "@item().LoadType",
                                                "type": "Expression"
                                            },
                                            "SourceDeltaColumn": {
                                                "value": "@item().SourceDeltaColumn",
                                                "type": "Expression"
                                            },
                                            "LastSuccessDate": {
                                                "value": "@item().LastSuccessDate",
                                                "type": "Expression"
                                            },
                                            "SrcObjectName": {
                                                "value": "@item().SrcObjectName",
                                                "type": "Expression"
                                            },
                                            "Id": {
                                                "value": "@item().Id",
                                                "type": "Expression"
                                            },
                                            "Load_Start_Date": {
                                                "value": "@variables('Load_Start_Date')",
                                                "type": "Expression"
                                            },
                                            "parent_run_id": {
                                                "value": "@pipeline().parameters.parent_run_id",
                                                "type": "Expression"
                                            },
                                            "crm_servername": {
                                                "value": "@pipeline().parameters.crm_servername",
                                                "type": "Expression"
                                            },
                                            "crm_dbname": {
                                                "value": "@pipeline().parameters.crm_dbname",
                                                "type": "Expression"
                                            },
                                            "crm_username": {
                                                "value": "@pipeline().parameters.crm_username",
                                                "type": "Expression"
                                            },
                                            "vaulturl": {
                                                "value": "@pipeline().parameters.vaulturl",
                                                "type": "Expression"
                                            },
                                            "storageaccountname": {
                                                "value": "@pipeline().parameters.storageaccountname",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "az_sql_server_name": {
                                                "value": "@pipeline().parameters.az_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db_name": {
                                                "value": "@pipeline().parameters.az_sql_db_name",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_server": {
                                                "value": "@pipeline().parameters.az_synapse_crm_server",
                                                "type": "Expression"
                                            },
                                            "az_synapse_crm_db": {
                                                "value": "@pipeline().parameters.az_synapse_crm_db",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Load Start Date",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Load_Start_Date",
                            "value": {
                                "value": "@string(utcnow())",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "parent_run_id": {
                        "type": "string"
                    },
                    "crm_servername": {
                        "type": "string"
                    },
                    "crm_dbname": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "az_sql_server_name": {
                        "type": "string"
                    },
                    "az_sql_db_name": {
                        "type": "string"
                    },
                    "az_synapse_crm_server": {
                        "type": "string"
                    },
                    "az_synapse_crm_db": {
                        "type": "string"
                    }
                },
                "variables": {
                    "DestinationTableName": {
                        "type": "String"
                    },
                    "Container": {
                        "type": "String"
                    },
                    "FilePath": {
                        "type": "String"
                    },
                    "PrimaryKey": {
                        "type": "String"
                    },
                    "CDC_Key": {
                        "type": "String"
                    },
                    "Schema": {
                        "type": "String"
                    },
                    "SourceTableName": {
                        "type": "String"
                    },
                    "Source_Row_Count": {
                        "type": "String"
                    },
                    "Target_Row_Count": {
                        "type": "String"
                    },
                    "Rejected_Row_Count": {
                        "type": "String"
                    },
                    "Data_Flow_Name": {
                        "type": "String"
                    },
                    "Load_Start_Date": {
                        "type": "String"
                    },
                    "Load_End_Date": {
                        "type": "String"
                    },
                    "Delta_Load_Date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "crm_To_Crmsynapse_Historical"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-06T15:46:17Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-update-contact-id')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "lkp_contact_number",
                        "description": "lookup po_contactnumber from po_contactnumber.parquet file",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "dataset": {
                                "referenceName": "ds_adls_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "crmalignment",
                                    "FilePath": {
                                        "value": "@concat('processing/',pipeline().parameters.response_id,'/po_contact_number.parquet')",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.file_name",
                                        "type": "Expression"
                                    },
                                    "storage_account_name": {
                                        "value": "@pipeline().parameters.storage_account_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "update_contact_ref",
                        "description": "loop through each set of records in the file",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "lkp_contact_number",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('lkp_contact_number').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "update_contact_id",
                                    "description": "updating contact_id in alignment.contact_ref from contactbase in crm",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('select po_contactnumber,contactid from (select po_contactnumber,contactid,ROW_NUMBER() over(partition by po_contactnumber order by ModifiedOn desc ) as row_num from contactbase where po_contactnumber in (',item().value,')) a where row_num=1')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "upsert",
                                            "upsertSettings": {
                                                "useTempDB": false,
                                                "keys": [
                                                    "po_contact_number"
                                                ]
                                            },
                                            "sqlWriterUseTableLock": false,
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "enableSkipIncompatibleRow": true,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "contactid",
                                                        "type": "Guid",
                                                        "physicalType": "uniqueidentifier"
                                                    },
                                                    "sink": {
                                                        "name": "contact_id",
                                                        "type": "String",
                                                        "physicalType": "char"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "po_contactnumber",
                                                        "type": "String",
                                                        "physicalType": "nvarchar"
                                                    },
                                                    "sink": {
                                                        "name": "po_contact_number",
                                                        "type": "String",
                                                        "physicalType": "char"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_appboostCRM_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "crm_servername": {
                                                    "value": "@pipeline().parameters.crm_server_name",
                                                    "type": "Expression"
                                                },
                                                "crm_dbname": {
                                                    "value": "@pipeline().parameters.crm_database_name",
                                                    "type": "Expression"
                                                },
                                                "crm_username": {
                                                    "value": "@pipeline().parameters.crm_username",
                                                    "type": "Expression"
                                                },
                                                "vaulturl": {
                                                    "value": "@pipeline().parameters.vault_url",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": "contact_ref",
                                                "schemaname": "alignment",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "response_id": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "storage_account_name": {
                        "type": "string"
                    },
                    "crm_server_name": {
                        "type": "string"
                    },
                    "crm_database_name": {
                        "type": "string"
                    },
                    "crm_username": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "azure_sql_server_name": {
                        "type": "string"
                    },
                    "azure_sql_database_name": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "alignment-To-CRM"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-10T10:53:51Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-generate-parquet')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "select * from dbo.CustomerAddressBase with (nolock)",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_crm_Dynamic10",
                                "type": "DatasetReference",
                                "parameters": {
                                    "crm_schema": "dbo",
                                    "crm_table": "CustomerAddressBase",
                                    "crm_servername": "10.200.0.22",
                                    "crm_dbname": "RNLMAP_MSCRM",
                                    "crm_username": "svc_az_ndp",
                                    "vaulturl": "https://rnlndp-prodkeyvault.vault.azure.net/"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storageaccountname": "https://rnlndpproddls.dfs.core.windows.net",
                                    "container": "prodcrmsynapse",
                                    "file_path": "crm_to_ads/customer_addressbase",
                                    "file_name": "customer_addressbase.parquet"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "test_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-11-09T17:27:56Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-historical-staging-dia-ds-team')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "condition_for_models",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@contains(toUpper(pipeline().parameters.original_filename),'_SEARCH')",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy from Staging to ADLS",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "start_etl_audit",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "select STUDENTID,F_NAME,M_NAME,L_NAME,ADDRESS1,ADDRESS2,CITY,STATE,COUNTRY,ZIP,EMAIL,GENDER,HOME_PHONE,MOBILE_PHONE,BIRTH_DT,DATE_END,FLAG_PUSH,FLAG_PRO,DATE_PRO,FLAG_INQ,DATE_INQ,FLAG_APP,DATE_APP,FLAG_ADM,DATE_ADM,FLAG_CON,DATE_CON,FLAG_ENR,DATE_ENR,FLAG_CANC,DATE_CANC,APP_CODE,DATE_APP_COMP,FLAG_INTERNATIONAL,ISOURCE_CD,FIRSTSOURCEAPP,MAJOR_01_INQ,DEPT_01_INQ,MAJOR_01_APP,DEPT_01_APP,MAJOR_01,DEPT_01,APP_TYPE,ADMIT_CD,ADMIT_TYPE,COUNSELOR,HS_CODE,HS_GRAD_YR,ENTRY_STAT,ACADEM_LEV,FULLTIME_PARTTIME,ENTRY_TERM,SUBINST_CD,CONVERSION_STAGE,ACT_COMP,SAT_COMP,HS_GPA,RELATION_01,P_F_NAME_01,P_L_NAME_01,P_EMAIL_01,P_ADDRESS1_01,P_ADDRESS2_01,P_CITY_01,P_STATE_01,P_ZIP_01,P_COUNTRY_01,P_HOME_PHONE_01,P_MOBILE_PHONE_01,RELATION_02,P_F_NAME_02,P_L_NAME_02,P_EMAIL_02,P_ADDRESS1_02,P_ADDRESS2_02,P_CITY_02,P_STATE_02,P_ZIP_02,P_COUNTRY_02,P_HOME_PHONE_02,P_MOBILE_PHONE_02,ETHNIC_CD,FLAG_ETHNIC,RACE_01,MAJOR_02_INQ,DEPT_02_INQ,MAJOR_02_APP,DEPT_02_APP,MAJOR_02,DEPT_02,MARKET_SEG,VENDOR,DENOM_CD,PREPROFESSIONAL,INTEREST_01,TRAD,HOUSING,CHURCH_CD,M_STATUS,MILITARY,ST_INT_LVL,SITE_CD,SPORT_01,P_GPA,FLAG_ACTSOURCE,ACTMATH,ACTREADING,ACTSCIENCE,ACTWRITTEN,FLAG_SATSOURCE,SATREADING,SATMATH,DECISION_PLAN,CONT_SI,OP_HOUSE,CA_VISIT,CA_VISIT_DATE,CONT_TI,OREN_SESS,USERDEF_T_01,USERDEF_T_02,USERDEF_T_03,USERDEF_T_04,USERDEF_T_05,USERDEF_T_06,USERDEF_T_07,USERDEF_T_08,USERDEF_T_09,USERDEF_T_10,USERDEF_T_11,USERDEF_T_12,USERDEF_T_13,USERDEF_T_14,USERDEF_T_15,USERDEF_T_16,USERDEF_T_17,USERDEF_T_18,USERDEF_T_19,USERDEF_T_20,USERDEF_T_21,USERDEF_T_22,USERDEF_T_23,USERDEF_T_24,USERDEF_T_25,USERDEF_T_26,USERDEF_T_27,USERDEF_T_28,USERDEF_T_29,USERDEF_T_30,USERDEF_T_31,USERDEF_T_32,USERDEF_T_33,USERDEF_T_34,USERDEF_T_35,USERDEF_T_36,USERDEF_T_37,USERDEF_T_38,USERDEF_T_39,USERDEF_T_40,USERDEF_T_DES_01,USERDEF_T_DES_02,USERDEF_T_DES_03,USERDEF_T_DES_04,USERDEF_T_DES_05,USERDEF_T_DES_06,USERDEF_T_DES_07,USERDEF_T_DES_08,USERDEF_T_DES_09,USERDEF_T_DES_10,USERDEF_T_DES_11,USERDEF_T_DES_12,USERDEF_T_DES_13,USERDEF_T_DES_14,USERDEF_T_DES_15,USERDEF_T_DES_16,USERDEF_T_DES_17,USERDEF_T_DES_18,USERDEF_T_DES_19,USERDEF_T_DES_20,USERDEF_T_DES_21,USERDEF_T_DES_22,USERDEF_T_DES_23,USERDEF_T_DES_24,USERDEF_T_DES_25,USERDEF_T_DES_26,USERDEF_T_DES_27,USERDEF_T_DES_28,USERDEF_T_DES_29,USERDEF_T_DES_30,USERDEF_T_DES_31,USERDEF_T_DES_32,USERDEF_T_DES_33,USERDEF_T_DES_34,USERDEF_T_DES_35,USERDEF_T_DES_36,USERDEF_T_DES_37,USERDEF_T_DES_38,USERDEF_T_DES_39,USERDEF_T_DES_40,USERDEF_D_01,USERDEF_D_02,USERDEF_D_03,USERDEF_D_04,USERDEF_D_05,USERDEF_D_06,USERDEF_D_07,USERDEF_D_08,USERDEF_D_09,USERDEF_D_10,USERDEF_D_DES_01,USERDEF_D_DES_02,USERDEF_D_DES_03,USERDEF_D_DES_04,USERDEF_D_DES_05,USERDEF_D_DES_06,USERDEF_D_DES_07,USERDEF_D_DES_08,USERDEF_D_DES_09,USERDEF_D_DES_10,USERDEF_N_01,USERDEF_N_02,USERDEF_N_03,USERDEF_N_04,USERDEF_N_05,USERDEF_N_06,USERDEF_N_07,USERDEF_N_08,USERDEF_N_09,USERDEF_N_10,USERDEF_N_DES_01,USERDEF_N_DES_02,USERDEF_N_DES_03,USERDEF_N_DES_04,USERDEF_N_DES_05,USERDEF_N_DES_06,USERDEF_N_DES_07,USERDEF_N_DES_08,USERDEF_N_DES_09,USERDEF_N_DES_10,ACTENGLISH,STUDENTID_01,STUDENTID_TYPE_01,STUDENTID_02,STUDENTID_TYPE_02,STUDENTID_03,STUDENTID_TYPE_03,DATE_APP_START,MAJOR_01_GRAD,INTEREST_02,INTEREST_03,SPORT_02,SPORT_03,RACE_02,RACE_03,RACE_04,RACE_05,MAJOR_02_GRAD,HOME_PHONE_CD,MOBILE_PHONE_CD,SUFFIX,Latitude,Longitude,MD_flag_Code,MD_flag_Name,MD_flag_ID,PAC_EAST_MATCHCODE,PAC_EAST_VER_CODE,FIRST_GEN,DATE_WAIT,DATE_DENY,DATE_DEFER,FLAG_WAIT,FLAG_DENY,FLAG_DEFER,CA_VISIT_TYPE,SMS_ALLOW,EARLY_ADM,FLAG_INSTATE,RESIDENCE_HALL,FLAG_ATHLETE,FLAG_PELL_ELIGIBLE,DATE_PACKAGED from staging.em_historical_data \nwhere response_id = '@{pipeline().parameters.response_id}'\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_azure_sql",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "tablename": ".",
                                                "schemaname": ".",
                                                "az_server_name": {
                                                    "value": "@pipeline().parameters.azure_sql_server_name",
                                                    "type": "Expression"
                                                },
                                                "az_sql_db": {
                                                    "value": "@pipeline().parameters.azure_sql_database_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_em_historical",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container": {
                                                    "value": "@pipeline().parameters.container",
                                                    "type": "Expression"
                                                },
                                                "file_path": {
                                                    "value": "@concat(pipeline().parameters.file_path,'/',pipeline().parameters.accountname)",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "@pipeline().parameters.file_name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "start_etl_audit",
                                    "description": "starting ETL audit",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "1001",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Started",
                                            "database_name": {
                                                "value": "@pipeline().parameters.azure_sql_database_name",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.azure_sql_server_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vaulturl",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "end_etl_audit",
                                    "description": "ending etl audit",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy from Staging to ADLS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "1002",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Completed",
                                            "database_name": {
                                                "value": "@pipeline().parameters.azure_sql_database_name",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.azure_sql_server_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vaulturl",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "fail_etl_audit",
                                    "description": "ending etl audit",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy from Staging to ADLS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                                        "baseParameters": {
                                            "audit_id": "1003",
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "adf_trigger_name": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "pipeline_status": "Failed",
                                            "database_name": {
                                                "value": "@pipeline().parameters.azure_sql_database_name",
                                                "type": "Expression"
                                            },
                                            "server_name": {
                                                "value": "@pipeline().parameters.azure_sql_server_name",
                                                "type": "Expression"
                                            },
                                            "error_description": {
                                                "value": "@activity('Copy from Staging to ADLS').output.error[0].Message",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_NDPdatabricks",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vaulturl",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "azure_sql_database_name": {
                        "type": "string"
                    },
                    "azure_sql_server_name": {
                        "type": "string"
                    },
                    "response_id": {
                        "type": "string"
                    },
                    "purpose_name": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string",
                        "defaultValue": "prodsynapse"
                    },
                    "file_path": {
                        "type": "string",
                        "defaultValue": "em_historical_data/DIA DS team"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "accountname": {
                        "type": "string"
                    },
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vaulturl": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    },
                    "original_filename": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "DataTransformation"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-09T06:34:22Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-historical-dia-ds-team-modelling_child')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_file_name",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_em_historical",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.container",
                                        "type": "Expression"
                                    },
                                    "file_path": {
                                        "value": "@concat(pipeline().parameters.source_path,'/',pipeline().parameters.account_name)",
                                        "type": "Expression"
                                    },
                                    "storageaccountname": {
                                        "value": "@pipeline().parameters.storageaccountname",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "filter_for_done",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "get_file_name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_file_name').output.childItems",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@and(equals(toLower(item().type), 'file'),  \n        or(contains(toLower(item().name),toLower(pipeline().parameters.search_list[0])),\n        or(contains(toLower(item().name),toLower(pipeline().parameters.search_list[1])),\n        or(contains(toLower(item().name),toLower(pipeline().parameters.search_list[2])),\n        or(contains(toLower(item().name),toLower(pipeline().parameters.search_list[3])),\n        contains(toLower(item().name),toLower(pipeline().parameters.search_list[4]))\n        )))))\n        \n        ",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "for_each_file",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "filter_for_done",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('filter_for_done').output.Value",
                                "type": "Expression"
                            },
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "Copy data",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings",
                                                "skipLineCount": 0
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_adls_em_historical_modeling",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container": {
                                                    "value": "@pipeline().parameters.container",
                                                    "type": "Expression"
                                                },
                                                "file_path": {
                                                    "value": "@concat(pipeline().parameters.source_path,'/',pipeline().parameters.account_name)",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_em_historical_modeling",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container": {
                                                    "value": "@pipeline().parameters.container",
                                                    "type": "Expression"
                                                },
                                                "file_path": {
                                                    "value": "@if(contains(toLower(item().name),toLower(pipeline().parameters.search_list[0])),\n concat(pipeline().parameters.dest_path,'/',pipeline().parameters.account_name,'/',utcnow('yyyy'),'/',pipeline().parameters.modeling_folder,'/',pipeline().parameters.folder_list[0]),\n if(contains(toLower(item().name),toLower(pipeline().parameters.search_list[1])),\n  concat(pipeline().parameters.dest_path,'/',pipeline().parameters.account_name,'/',utcnow('yyyy'),'/',pipeline().parameters.modeling_folder,'/',pipeline().parameters.folder_list[1]),\n  if(contains(toLower(item().name),toLower(pipeline().parameters.search_list[2])),\n   concat(pipeline().parameters.dest_path,'/',pipeline().parameters.account_name,'/',utcnow('yyyy'),'/',pipeline().parameters.modeling_folder,'/',pipeline().parameters.folder_list[2]),\n   if(contains(toLower(item().name),toLower(pipeline().parameters.search_list[3])),\n    concat(pipeline().parameters.dest_path,'/',pipeline().parameters.account_name,'/',utcnow('yyyy'),'/',pipeline().parameters.modeling_folder,'/',pipeline().parameters.folder_list[3]),\n    if(contains(toLower(item().name),toLower(pipeline().parameters.search_list[4])),\n     concat(pipeline().parameters.dest_path,'/',pipeline().parameters.account_name,'/',utcnow('yyyy'),'/',pipeline().parameters.modeling_folder,'/',pipeline().parameters.folder_list[4]),'')))))",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "@if(contains(toLower(item().name),toLower(pipeline().parameters.search_list[0])),\t\n    concat(pipeline().parameters.account_name,'_',utcnow('yyyy'),'_',toUpper(pipeline().parameters.folder_list[0]),'_Model_DIA_',utcnow('MM'),utcnow('dd'),utcnow('yyyyy'),'_',utcnow('HH'),utcnow('mm'),utcnow('ss'),'.csv'),\n\tif(contains(toLower(item().name),toLower(pipeline().parameters.search_list[1])),\t\n        concat(pipeline().parameters.account_name,'_',utcnow('yyyy'),'_',toUpper(pipeline().parameters.folder_list[1]),'_Model_DIA_',utcnow('MM'),utcnow('dd'),utcnow('yyyyy'),'_',utcnow('HH'),utcnow('mm'),utcnow('ss'),'.csv'),\t\n\t    if(contains(toLower(item().name),toLower(pipeline().parameters.search_list[2])),\t\t\t\n            concat(pipeline().parameters.account_name,'_',utcnow('yyyy'),'_',toUpper(pipeline().parameters.folder_list[2]),'_Model_DIA_',utcnow('MM'),utcnow('dd'),utcnow('yyyyy'),'_',utcnow('HH'),utcnow('mm'),utcnow('ss'),'.csv'),\t\t\t\n            if(contains(toLower(item().name),toLower(pipeline().parameters.search_list[3])),\t\t\t\n                concat(pipeline().parameters.account_name,'_',utcnow('yyyy'),'_',toUpper(pipeline().parameters.folder_list[3]),'_Model_DIA_',utcnow('MM'),utcnow('dd'),utcnow('yyyyy'),'_',utcnow('HH'),utcnow('mm'),utcnow('ss'),'.csv'),\t\t\t\n                if(contains(toLower(item().name),toLower(pipeline().parameters.search_list[4])),\t\t\t\n                    concat(pipeline().parameters.account_name,'_',utcnow('yyyy'),'_',toUpper(pipeline().parameters.folder_list[4]),'_Model_DIA_',utcnow('MM'),utcnow('dd'),utcnow('yyyyy'),'_',utcnow('HH'),utcnow('mm'),utcnow('ss'),'.csv'),'')))))",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "delete-dia-file",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy data",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_adls_em_historical_modeling",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container": {
                                                    "value": "@pipeline().parameters.container",
                                                    "type": "Expression"
                                                },
                                                "file_path": {
                                                    "value": "@concat(pipeline().parameters.source_path,'/',pipeline().parameters.account_name)",
                                                    "type": "Expression"
                                                },
                                                "file_name": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                },
                                                "storageaccountname": {
                                                    "value": "@pipeline().parameters.storageaccountname",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "account_name": {
                        "type": "string"
                    },
                    "source_adls_location": {
                        "type": "string"
                    },
                    "destination_adls_location": {
                        "type": "string"
                    },
                    "folder_list": {
                        "type": "array"
                    },
                    "search_list": {
                        "type": "array"
                    },
                    "azure_sql_database_name": {
                        "type": "string"
                    },
                    "azure_sql_server_name": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "source_path": {
                        "type": "string"
                    },
                    "dest_path": {
                        "type": "string"
                    },
                    "modeling_folder": {
                        "type": "string"
                    },
                    "storageaccountname": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "DataTransformation"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-12T10:44:50Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pip-em-data-enrichment-master_EMGO_Master')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Update enrichment status",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Pacific East Enrichment Loop",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Pacific East Enrichment Parallel Loop",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "Drop table if Exists #FilesEnriched\n\nSelect modified_fileName \ninto #FilesEnriched\n\t   from (\n\t\t\tSelect modified_fileName\n\t\t\t,Case when MD_addressbase in ('DIA Review','DIA Approved') \n\t\t\t   or PE_Addressbase in ('DIA Review','DIA Approved') \n\t\t\t   or PE_Contactbase in ('DIA Review','DIA Approved') \n\t\t\tThen 1 else 0 end DE_Count\n\t\t\tfrom (\n\t\t\t\t Select count(*) as CNT\n\t\t\t\t ,a.modified_fileName\n\t\t\t\t ,a.md_flag MD_addressbase\n\t\t\t\t ,a.pe_flag PE_Addressbase\n\t\t\t\t ,b.pe_flag PE_Contactbase\n\t\t\t\t from alignment.customer_address_base a\n\t\t\t\t join alignment.contactbase b\n\t\t\t\t on a.modified_fileName = b.modified_fileName\n\t\t\t\t and a.source_key = b.source_key\n\t\t\t\t where  b.CRM_FLAg = 2 \n\t\t\t\t group by a.modified_fileName\n\t\t\t\t ,a.md_flag,a.pe_flag,b.pe_flag\n\t\t\t\t ) drv\n\t\t\t) drv2\n\t\t\tgroup by modified_fileName having sum(DE_Count) = 0\n\n\nUpdate A\n    Set  Enrichment = 1\n        ,DE_Status = 'Enriched'\n        ,insert_datetime = getdate()\n    From audit.ADS_Reference_Log A\n    Where DE_Status <> 'Enriched'\n\tand exists (Select 'X' From #FilesEnriched B\n\t\t\t\t\tWhere A.modified_filename = b.modified_fileName)\n\n\nUpdate A \n    Set  dia_status = 'DE_Completed'\n        ,insert_datetime = getdate()\n    From audit.dia_manual A\n    join audit.ADS_Reference_Log b\n    on a.source_file_name = b.modified_filename\n    Where A.Process_Layer = 'Enrichment'\n    and B.DE_Status = 'Enriched'\n    and A.dia_status = 'DE_Started'\n    and exists (Select 'X' From #FilesEnriched C\n\t\t\t        Where A.source_file_name = C.modified_fileName)\n\n--Drop table if Exists #FilesStillNotEnriched\n\n--Select  distinct a.modified_fileName \n--\t\tinto #FilesStillNotEnriched\n--\t\tfrom alignment.customer_address_base a\n--        join alignment.contactbase b\n--        on a.modified_fileName = b.modified_fileName\n--\t\tand a.source_key = b.source_key\n--               where  b.CRM_FLAg = 2 and (b.pe_flag in ('DIA Review','DIA Approved')  \n--\t\t\t\t\tor a.md_flag in ('DIA Review','DIA Approved'))\n\n\n\n--Select  distinct a.modified_fileName \n--\t\tinto #FilesEnriched\n--\t\tfrom alignment.customer_address_base a\n--        join alignment.contactbase b\n--        on a.modified_fileName = b.modified_fileName\n--\t\tand a.source_key = b.source_key\n--               where  b.CRM_FLAg = 2 and (b.pe_flag not in ('DIA Review','DIA Approved') \n--\t\t\t\t\tand a.md_flag not in ('DIA Review','DIA Approved'))\n\n\nSELECT 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "ADS_Reference_Log",
                                    "schemaname": "audit",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Start ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "501",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Started",
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                },
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "END ETL Audit",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Update enrichment status",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/audit-Framework/dbn-etl-audit-log",
                            "baseParameters": {
                                "audit_id": "502",
                                "adf_run_id": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "adf_pipeline_name": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "adf_trigger_name": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "pipeline_status": "Completed",
                                "database_name": {
                                    "value": "@pipeline().parameters.az_database_name",
                                    "type": "Expression"
                                },
                                "server_name": {
                                    "value": "@pipeline().parameters.az_server_name",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_NDPdatabricks",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databricks_workspace_url": {
                                    "value": "@pipeline().parameters.databricks_workspace_url",
                                    "type": "Expression"
                                },
                                "databricks_clusterid": {
                                    "value": "@pipeline().parameters.databricks_clusterid",
                                    "type": "Expression"
                                },
                                "vault_url": {
                                    "value": "@pipeline().parameters.vault_url",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Delete - configEnrichment_Clean",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Start ETL Audit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "Delete from config.Enrichment\nwhere purpose_name='EM GO'\n\nSelect 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Enrichment",
                                    "schemaname": "config",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Get Response Ids",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Delete - configEnrichment_Clean",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "Select distinct trim(a.response_id) response_id from audit.ADS_Reference_Log a\njoin audit.dia_manual b on a.response_id = b.response_id\nwhere ADS_Reference = 1\nand Enrichment <> 1\nand Process_Layer = 'Enrichment'\nand dia_status = 'DE_Started'\nand b.purpose_name = 'EM GO'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_azure_sql",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "Enrichment_Melissa",
                                    "schemaname": "dbo",
                                    "az_server_name": {
                                        "value": "@pipeline().parameters.az_server_name",
                                        "type": "Expression"
                                    },
                                    "az_sql_db": {
                                        "value": "@pipeline().parameters.az_database_name",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Melissa Enrichment Loop",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Response Ids",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Response Ids').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "Melissa Pipeline",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-em-melissa-addressenrichment-EMGO",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "az_server_name": {
                                                "value": "@pipeline().parameters.az_server_name",
                                                "type": "Expression"
                                            },
                                            "az_database_name": {
                                                "value": "@pipeline().parameters.az_database_name",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@item().response_id",
                                                "type": "Expression"
                                            },
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SP - Alignment History Sync MD",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Melissa Pipeline",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_DE_Update]",
                                        "storedProcedureParameters": {
                                            "Enrichment": {
                                                "value": "Melissa",
                                                "type": "String"
                                            },
                                            "response_id": {
                                                "value": {
                                                    "value": "@item().response_id",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSqlDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_server_name": {
                                                "value": "@pipeline().parameters.az_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db": {
                                                "value": "@pipeline().parameters.az_database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Pacific East Enrichment Loop",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Melissa Enrichment Loop",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Response Ids').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "Pacific East Pipeline",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-em-pacificeast-enrichment_EM_GO",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "az_server_name": {
                                                "value": "@pipeline().parameters.az_server_name",
                                                "type": "Expression"
                                            },
                                            "az_database_name": {
                                                "value": "@pipeline().parameters.az_database_name",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@item().response_id",
                                                "type": "Expression"
                                            },
                                            "purpose_name": "EM GO",
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SP - Alignment History Sync PE",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Pacific East Pipeline",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_DE_Update]",
                                        "storedProcedureParameters": {
                                            "Enrichment": {
                                                "value": "PacificEast",
                                                "type": "String"
                                            },
                                            "response_id": {
                                                "value": {
                                                    "value": "@item().response_id",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSqlDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_server_name": {
                                                "value": "@pipeline().parameters.az_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db": {
                                                "value": "@pipeline().parameters.az_database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Pacific East Enrichment Parallel Loop",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Response Ids",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Response Ids').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "Parallel Pacific East Pipeline",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pip-em-pacificeast-enrichment_EM_GO",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "az_server_name": {
                                                "value": "@pipeline().parameters.az_server_name",
                                                "type": "Expression"
                                            },
                                            "az_database_name": {
                                                "value": "@pipeline().parameters.az_database_name",
                                                "type": "Expression"
                                            },
                                            "response_id": {
                                                "value": "@item().response_id",
                                                "type": "Expression"
                                            },
                                            "purpose_name": "EM GO",
                                            "databricks_workspace_url": {
                                                "value": "@pipeline().parameters.databricks_workspace_url",
                                                "type": "Expression"
                                            },
                                            "databricks_clusterid": {
                                                "value": "@pipeline().parameters.databricks_clusterid",
                                                "type": "Expression"
                                            },
                                            "vault_url": {
                                                "value": "@pipeline().parameters.vault_url",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SP - Alignment History Sync PE Parallel",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Parallel Pacific East Pipeline",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_DE_Update]",
                                        "storedProcedureParameters": {
                                            "Enrichment": {
                                                "value": "PacificEast",
                                                "type": "String"
                                            },
                                            "response_id": {
                                                "value": {
                                                    "value": "@item().response_id",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_AzureSqlDB",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "az_server_name": {
                                                "value": "@pipeline().parameters.az_server_name",
                                                "type": "Expression"
                                            },
                                            "az_sql_db": {
                                                "value": "@pipeline().parameters.az_database_name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "databricks_workspace_url": {
                        "type": "string"
                    },
                    "databricks_clusterid": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    },
                    "az_server_name": {
                        "type": "string"
                    },
                    "az_database_name": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Dataenrichment/SubMasterPipelines"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-22T15:01:13Z"
            },
            "dependsOn": []
        }
    ]
}